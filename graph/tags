!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	logic.hpp	/^class A {};$/;"	c	namespace:base
ACROSS_CHANNELS	caffe.pb.cc	/^const LRNProto_NormRegion LRNProto::ACROSS_CHANNELS;$/;"	m	class:caffe::LRNProto	file:
ACROSS_CHANNELS	caffe.pb.h	/^  static const NormRegion ACROSS_CHANNELS =$/;"	m	class:caffe::LRNProto
ADAGRAD	caffe.pb.cc	/^const SolverProto_SolverType SolverProto::ADAGRAD;$/;"	m	class:caffe::SolverProto	file:
ADAGRAD	caffe.pb.h	/^  static const SolverType ADAGRAD =$/;"	m	class:caffe::SolverProto
ADD	caffe.pb.h	/^  ADD = 1,$/;"	e	enum:caffe::BoxingOp
AVE	caffe.pb.cc	/^const PoolingProto_PoolMethod PoolingProto::AVE;$/;"	m	class:caffe::PoolingProto	file:
AVE	caffe.pb.h	/^  static const PoolMethod AVE =$/;"	m	class:caffe::PoolingProto
AddDescriptors	caffe.pb.cc	/^void AddDescriptors() {$/;"	f	namespace:caffe::protobuf_caffe_2eproto
AddDescriptorsImpl	caffe.pb.cc	/^void AddDescriptorsImpl() {$/;"	f	namespace:caffe::protobuf_caffe_2eproto
Append	logic.hpp	/^struct Append {$/;"	s	namespace:base
Append	logic.hpp	/^struct Append<Meta<Key, Val>, List> {$/;"	s	namespace:base
B	logic.hpp	/^class B : public A {};$/;"	c	namespace:base
BOOL	caffe.pb.cc	/^const BlobProto_DataType BlobProto::BOOL;$/;"	m	class:caffe::BlobProto	file:
BOOL	caffe.pb.h	/^  static const DataType BOOL =$/;"	m	class:caffe::BlobProto
BYTE	caffe.pb.cc	/^const BlobProto_DataType BlobProto::BYTE;$/;"	m	class:caffe::BlobProto	file:
BYTE	caffe.pb.h	/^  static const DataType BYTE =$/;"	m	class:caffe::BlobProto
BatchNorm	graph.h	/^  BatchNorm,$/;"	e	enum:dataflow::NodeType
BatchNormProto	caffe.pb.cc	/^BatchNormProto::BatchNormProto()$/;"	f	class:caffe::BatchNormProto
BatchNormProto	caffe.pb.cc	/^BatchNormProto::BatchNormProto(const BatchNormProto& from)$/;"	f	class:caffe::BatchNormProto
BatchNormProto	caffe.pb.h	/^class BatchNormProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.BatchNormProto) *\/ {$/;"	c	namespace:caffe
BatchNormProtoDefaultTypeInternal	caffe.pb.cc	/^class BatchNormProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BatchNormProto> {$/;"	c	namespace:caffe	file:
BlobProto	caffe.pb.cc	/^BlobProto::BlobProto()$/;"	f	class:caffe::BlobProto
BlobProto	caffe.pb.cc	/^BlobProto::BlobProto(const BlobProto& from)$/;"	f	class:caffe::BlobProto
BlobProto	caffe.pb.h	/^class BlobProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.BlobProto) *\/ {$/;"	c	namespace:caffe
BlobProtoDefaultTypeInternal	caffe.pb.cc	/^class BlobProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BlobProto> {$/;"	c	namespace:caffe	file:
BlobProto_DataType	caffe.pb.h	/^enum BlobProto_DataType {$/;"	g	namespace:caffe
BlobProto_DataType_BOOL	caffe.pb.h	/^  BlobProto_DataType_BOOL = 5,$/;"	e	enum:caffe::BlobProto_DataType
BlobProto_DataType_BYTE	caffe.pb.h	/^  BlobProto_DataType_BYTE = 3,$/;"	e	enum:caffe::BlobProto_DataType
BlobProto_DataType_DOUBLE	caffe.pb.h	/^  BlobProto_DataType_DOUBLE = 13$/;"	e	enum:caffe::BlobProto_DataType
BlobProto_DataType_DataType_ARRAYSIZE	caffe.pb.h	/^const int BlobProto_DataType_DataType_ARRAYSIZE = BlobProto_DataType_DataType_MAX + 1;$/;"	m	namespace:caffe
BlobProto_DataType_DataType_MAX	caffe.pb.h	/^const BlobProto_DataType BlobProto_DataType_DataType_MAX = BlobProto_DataType_DOUBLE;$/;"	m	namespace:caffe
BlobProto_DataType_DataType_MIN	caffe.pb.h	/^const BlobProto_DataType BlobProto_DataType_DataType_MIN = BlobProto_DataType_UNDEFINED;$/;"	m	namespace:caffe
BlobProto_DataType_FLOAT	caffe.pb.h	/^  BlobProto_DataType_FLOAT = 1,$/;"	e	enum:caffe::BlobProto_DataType
BlobProto_DataType_FLOAT16	caffe.pb.h	/^  BlobProto_DataType_FLOAT16 = 12,$/;"	e	enum:caffe::BlobProto_DataType
BlobProto_DataType_INT16	caffe.pb.h	/^  BlobProto_DataType_INT16 = 9,$/;"	e	enum:caffe::BlobProto_DataType
BlobProto_DataType_INT32	caffe.pb.h	/^  BlobProto_DataType_INT32 = 2,$/;"	e	enum:caffe::BlobProto_DataType
BlobProto_DataType_INT64	caffe.pb.h	/^  BlobProto_DataType_INT64 = 10,$/;"	e	enum:caffe::BlobProto_DataType
BlobProto_DataType_INT8	caffe.pb.h	/^  BlobProto_DataType_INT8 = 7,$/;"	e	enum:caffe::BlobProto_DataType
BlobProto_DataType_IsValid	caffe.pb.cc	/^bool BlobProto_DataType_IsValid(int value) {$/;"	f	namespace:caffe
BlobProto_DataType_Name	caffe.pb.h	/^inline const ::std::string& BlobProto_DataType_Name(BlobProto_DataType value) {$/;"	f	namespace:caffe
BlobProto_DataType_Parse	caffe.pb.h	/^inline bool BlobProto_DataType_Parse($/;"	f	namespace:caffe
BlobProto_DataType_STRING	caffe.pb.h	/^  BlobProto_DataType_STRING = 4,$/;"	e	enum:caffe::BlobProto_DataType
BlobProto_DataType_UINT16	caffe.pb.h	/^  BlobProto_DataType_UINT16 = 8,$/;"	e	enum:caffe::BlobProto_DataType
BlobProto_DataType_UINT8	caffe.pb.h	/^  BlobProto_DataType_UINT8 = 6,$/;"	e	enum:caffe::BlobProto_DataType
BlobProto_DataType_UNDEFINED	caffe.pb.h	/^  BlobProto_DataType_UNDEFINED = 0,$/;"	e	enum:caffe::BlobProto_DataType
BlobProto_DataType_descriptor	caffe.pb.cc	/^const ::google::protobuf::EnumDescriptor* BlobProto_DataType_descriptor() {$/;"	f	namespace:caffe
BlobShape	caffe.pb.cc	/^BlobShape::BlobShape()$/;"	f	class:caffe::BlobShape
BlobShape	caffe.pb.cc	/^BlobShape::BlobShape(const BlobShape& from)$/;"	f	class:caffe::BlobShape
BlobShape	caffe.pb.h	/^class BlobShape : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.BlobShape) *\/ {$/;"	c	namespace:caffe
BlobShapeDefaultTypeInternal	caffe.pb.cc	/^class BlobShapeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BlobShape> {$/;"	c	namespace:caffe	file:
BoxingOp	caffe.pb.h	/^enum BoxingOp {$/;"	g	namespace:caffe
BoxingOp_ARRAYSIZE	caffe.pb.h	/^const int BoxingOp_ARRAYSIZE = BoxingOp_MAX + 1;$/;"	m	namespace:caffe
BoxingOp_IsValid	caffe.pb.cc	/^bool BoxingOp_IsValid(int value) {$/;"	f	namespace:caffe
BoxingOp_MAX	caffe.pb.h	/^const BoxingOp BoxingOp_MAX = NONE;$/;"	m	namespace:caffe
BoxingOp_MIN	caffe.pb.h	/^const BoxingOp BoxingOp_MIN = CONCAT;$/;"	m	namespace:caffe
BoxingOp_Name	caffe.pb.h	/^inline const ::std::string& BoxingOp_Name(BoxingOp value) {$/;"	f	namespace:caffe
BoxingOp_Parse	caffe.pb.h	/^inline bool BoxingOp_Parse($/;"	f	namespace:caffe
BoxingOp_descriptor	caffe.pb.cc	/^const ::google::protobuf::EnumDescriptor* BoxingOp_descriptor() {$/;"	f	namespace:caffe
BoxingProto	caffe.pb.cc	/^BoxingProto::BoxingProto()$/;"	f	class:caffe::BoxingProto
BoxingProto	caffe.pb.cc	/^BoxingProto::BoxingProto(const BoxingProto& from)$/;"	f	class:caffe::BoxingProto
BoxingProto	caffe.pb.h	/^class BoxingProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.BoxingProto) *\/ {$/;"	c	namespace:caffe
BoxingProtoDefaultTypeInternal	caffe.pb.cc	/^class BoxingProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BoxingProto> {$/;"	c	namespace:caffe	file:
BuildNet	graph.cc	/^void Graph::BuildNet() {$/;"	f	class:dataflow::Graph
ByteSizeLong	caffe.pb.cc	/^size_t BatchNormProto::ByteSizeLong() const {$/;"	f	class:caffe::BatchNormProto
ByteSizeLong	caffe.pb.cc	/^size_t BlobProto::ByteSizeLong() const {$/;"	f	class:caffe::BlobProto
ByteSizeLong	caffe.pb.cc	/^size_t BlobShape::ByteSizeLong() const {$/;"	f	class:caffe::BlobShape
ByteSizeLong	caffe.pb.cc	/^size_t BoxingProto::ByteSizeLong() const {$/;"	f	class:caffe::BoxingProto
ByteSizeLong	caffe.pb.cc	/^size_t ConcatProto::ByteSizeLong() const {$/;"	f	class:caffe::ConcatProto
ByteSizeLong	caffe.pb.cc	/^size_t ConvolutionProto::ByteSizeLong() const {$/;"	f	class:caffe::ConvolutionProto
ByteSizeLong	caffe.pb.cc	/^size_t CopyProto::ByteSizeLong() const {$/;"	f	class:caffe::CopyProto
ByteSizeLong	caffe.pb.cc	/^size_t DeviceGroup::ByteSizeLong() const {$/;"	f	class:caffe::DeviceGroup
ByteSizeLong	caffe.pb.cc	/^size_t DeviceSet::ByteSizeLong() const {$/;"	f	class:caffe::DeviceSet
ByteSizeLong	caffe.pb.cc	/^size_t FillerParameter::ByteSizeLong() const {$/;"	f	class:caffe::FillerParameter
ByteSizeLong	caffe.pb.cc	/^size_t InnerProductProto::ByteSizeLong() const {$/;"	f	class:caffe::InnerProductProto
ByteSizeLong	caffe.pb.cc	/^size_t LRNProto::ByteSizeLong() const {$/;"	f	class:caffe::LRNProto
ByteSizeLong	caffe.pb.cc	/^size_t LayerProto::ByteSizeLong() const {$/;"	f	class:caffe::LayerProto
ByteSizeLong	caffe.pb.cc	/^size_t LayerSet::ByteSizeLong() const {$/;"	f	class:caffe::LayerSet
ByteSizeLong	caffe.pb.cc	/^size_t LoadPartialModelProto::ByteSizeLong() const {$/;"	f	class:caffe::LoadPartialModelProto
ByteSizeLong	caffe.pb.cc	/^size_t LoaderProto::ByteSizeLong() const {$/;"	f	class:caffe::LoaderProto
ByteSizeLong	caffe.pb.cc	/^size_t Machine::ByteSizeLong() const {$/;"	f	class:caffe::Machine
ByteSizeLong	caffe.pb.cc	/^size_t MachineGroup::ByteSizeLong() const {$/;"	f	class:caffe::MachineGroup
ByteSizeLong	caffe.pb.cc	/^size_t ModelUpdateProto::ByteSizeLong() const {$/;"	f	class:caffe::ModelUpdateProto
ByteSizeLong	caffe.pb.cc	/^size_t MultinomialLogisticLossProto::ByteSizeLong() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
ByteSizeLong	caffe.pb.cc	/^size_t NetParameter::ByteSizeLong() const {$/;"	f	class:caffe::NetParameter
ByteSizeLong	caffe.pb.cc	/^size_t NetProto::ByteSizeLong() const {$/;"	f	class:caffe::NetProto
ByteSizeLong	caffe.pb.cc	/^size_t NetState::ByteSizeLong() const {$/;"	f	class:caffe::NetState
ByteSizeLong	caffe.pb.cc	/^size_t NullUpdateProto::ByteSizeLong() const {$/;"	f	class:caffe::NullUpdateProto
ByteSizeLong	caffe.pb.cc	/^size_t ParamSpec::ByteSizeLong() const {$/;"	f	class:caffe::ParamSpec
ByteSizeLong	caffe.pb.cc	/^size_t PlaceholderProto::ByteSizeLong() const {$/;"	f	class:caffe::PlaceholderProto
ByteSizeLong	caffe.pb.cc	/^size_t PlacementGroup::ByteSizeLong() const {$/;"	f	class:caffe::PlacementGroup
ByteSizeLong	caffe.pb.cc	/^size_t PoolingProto::ByteSizeLong() const {$/;"	f	class:caffe::PoolingProto
ByteSizeLong	caffe.pb.cc	/^size_t ReLUProto::ByteSizeLong() const {$/;"	f	class:caffe::ReLUProto
ByteSizeLong	caffe.pb.cc	/^size_t Resource::ByteSizeLong() const {$/;"	f	class:caffe::Resource
ByteSizeLong	caffe.pb.cc	/^size_t SigmoidProto::ByteSizeLong() const {$/;"	f	class:caffe::SigmoidProto
ByteSizeLong	caffe.pb.cc	/^size_t SoftmaxProto::ByteSizeLong() const {$/;"	f	class:caffe::SoftmaxProto
ByteSizeLong	caffe.pb.cc	/^size_t SolverProto::ByteSizeLong() const {$/;"	f	class:caffe::SolverProto
ByteSizeLong	caffe.pb.cc	/^size_t SolverState::ByteSizeLong() const {$/;"	f	class:caffe::SolverState
ByteSizeLong	caffe.pb.cc	/^size_t SplitProto::ByteSizeLong() const {$/;"	f	class:caffe::SplitProto
ByteSizeLong	caffe.pb.cc	/^size_t StoreProto::ByteSizeLong() const {$/;"	f	class:caffe::StoreProto
ByteSizeLong	caffe.pb.cc	/^size_t Strategy::ByteSizeLong() const {$/;"	f	class:caffe::Strategy
CAFFE	caffe.pb.cc	/^const ConvolutionProto_Engine ConvolutionProto::CAFFE;$/;"	m	class:caffe::ConvolutionProto	file:
CAFFE	caffe.pb.cc	/^const LRNProto_Engine LRNProto::CAFFE;$/;"	m	class:caffe::LRNProto	file:
CAFFE	caffe.pb.cc	/^const PoolingProto_Engine PoolingProto::CAFFE;$/;"	m	class:caffe::PoolingProto	file:
CAFFE	caffe.pb.cc	/^const ReLUProto_Engine ReLUProto::CAFFE;$/;"	m	class:caffe::ReLUProto	file:
CAFFE	caffe.pb.cc	/^const SigmoidProto_Engine SigmoidProto::CAFFE;$/;"	m	class:caffe::SigmoidProto	file:
CAFFE	caffe.pb.cc	/^const SoftmaxProto_Engine SoftmaxProto::CAFFE;$/;"	m	class:caffe::SoftmaxProto	file:
CAFFE	caffe.pb.cc	/^const StoreProto_Engine StoreProto::CAFFE;$/;"	m	class:caffe::StoreProto	file:
CAFFE	caffe.pb.h	/^  static const Engine CAFFE =$/;"	m	class:caffe::ConvolutionProto
CAFFE	caffe.pb.h	/^  static const Engine CAFFE =$/;"	m	class:caffe::LRNProto
CAFFE	caffe.pb.h	/^  static const Engine CAFFE =$/;"	m	class:caffe::PoolingProto
CAFFE	caffe.pb.h	/^  static const Engine CAFFE =$/;"	m	class:caffe::ReLUProto
CAFFE	caffe.pb.h	/^  static const Engine CAFFE =$/;"	m	class:caffe::SigmoidProto
CAFFE	caffe.pb.h	/^  static const Engine CAFFE =$/;"	m	class:caffe::SoftmaxProto
CAFFE	caffe.pb.h	/^  static const Engine CAFFE =$/;"	m	class:caffe::StoreProto
CC	Makefile	/^CC=g++$/;"	m
CONCAT	caffe.pb.h	/^  CONCAT = 0,$/;"	e	enum:caffe::BoxingOp
COPY	caffe.pb.h	/^  COPY = 2,$/;"	e	enum:caffe::BoxingOp
CPU	caffe.pb.cc	/^const SolverProto_SolverMode SolverProto::CPU;$/;"	m	class:caffe::SolverProto	file:
CPU	caffe.pb.h	/^  static const SolverMode CPU =$/;"	m	class:caffe::SolverProto
CUDNN	caffe.pb.cc	/^const ConvolutionProto_Engine ConvolutionProto::CUDNN;$/;"	m	class:caffe::ConvolutionProto	file:
CUDNN	caffe.pb.cc	/^const LRNProto_Engine LRNProto::CUDNN;$/;"	m	class:caffe::LRNProto	file:
CUDNN	caffe.pb.cc	/^const PoolingProto_Engine PoolingProto::CUDNN;$/;"	m	class:caffe::PoolingProto	file:
CUDNN	caffe.pb.cc	/^const ReLUProto_Engine ReLUProto::CUDNN;$/;"	m	class:caffe::ReLUProto	file:
CUDNN	caffe.pb.cc	/^const SigmoidProto_Engine SigmoidProto::CUDNN;$/;"	m	class:caffe::SigmoidProto	file:
CUDNN	caffe.pb.cc	/^const SoftmaxProto_Engine SoftmaxProto::CUDNN;$/;"	m	class:caffe::SoftmaxProto	file:
CUDNN	caffe.pb.cc	/^const StoreProto_Engine StoreProto::CUDNN;$/;"	m	class:caffe::StoreProto	file:
CUDNN	caffe.pb.h	/^  static const Engine CUDNN =$/;"	m	class:caffe::ConvolutionProto
CUDNN	caffe.pb.h	/^  static const Engine CUDNN =$/;"	m	class:caffe::LRNProto
CUDNN	caffe.pb.h	/^  static const Engine CUDNN =$/;"	m	class:caffe::PoolingProto
CUDNN	caffe.pb.h	/^  static const Engine CUDNN =$/;"	m	class:caffe::ReLUProto
CUDNN	caffe.pb.h	/^  static const Engine CUDNN =$/;"	m	class:caffe::SigmoidProto
CUDNN	caffe.pb.h	/^  static const Engine CUDNN =$/;"	m	class:caffe::SoftmaxProto
CUDNN	caffe.pb.h	/^  static const Engine CUDNN =$/;"	m	class:caffe::StoreProto
Clear	caffe.pb.cc	/^void BatchNormProto::Clear() {$/;"	f	class:caffe::BatchNormProto
Clear	caffe.pb.cc	/^void BlobProto::Clear() {$/;"	f	class:caffe::BlobProto
Clear	caffe.pb.cc	/^void BlobShape::Clear() {$/;"	f	class:caffe::BlobShape
Clear	caffe.pb.cc	/^void BoxingProto::Clear() {$/;"	f	class:caffe::BoxingProto
Clear	caffe.pb.cc	/^void ConcatProto::Clear() {$/;"	f	class:caffe::ConcatProto
Clear	caffe.pb.cc	/^void ConvolutionProto::Clear() {$/;"	f	class:caffe::ConvolutionProto
Clear	caffe.pb.cc	/^void CopyProto::Clear() {$/;"	f	class:caffe::CopyProto
Clear	caffe.pb.cc	/^void DeviceGroup::Clear() {$/;"	f	class:caffe::DeviceGroup
Clear	caffe.pb.cc	/^void DeviceSet::Clear() {$/;"	f	class:caffe::DeviceSet
Clear	caffe.pb.cc	/^void FillerParameter::Clear() {$/;"	f	class:caffe::FillerParameter
Clear	caffe.pb.cc	/^void InnerProductProto::Clear() {$/;"	f	class:caffe::InnerProductProto
Clear	caffe.pb.cc	/^void LRNProto::Clear() {$/;"	f	class:caffe::LRNProto
Clear	caffe.pb.cc	/^void LayerProto::Clear() {$/;"	f	class:caffe::LayerProto
Clear	caffe.pb.cc	/^void LayerSet::Clear() {$/;"	f	class:caffe::LayerSet
Clear	caffe.pb.cc	/^void LoadPartialModelProto::Clear() {$/;"	f	class:caffe::LoadPartialModelProto
Clear	caffe.pb.cc	/^void LoaderProto::Clear() {$/;"	f	class:caffe::LoaderProto
Clear	caffe.pb.cc	/^void Machine::Clear() {$/;"	f	class:caffe::Machine
Clear	caffe.pb.cc	/^void MachineGroup::Clear() {$/;"	f	class:caffe::MachineGroup
Clear	caffe.pb.cc	/^void ModelUpdateProto::Clear() {$/;"	f	class:caffe::ModelUpdateProto
Clear	caffe.pb.cc	/^void MultinomialLogisticLossProto::Clear() {$/;"	f	class:caffe::MultinomialLogisticLossProto
Clear	caffe.pb.cc	/^void NetParameter::Clear() {$/;"	f	class:caffe::NetParameter
Clear	caffe.pb.cc	/^void NetProto::Clear() {$/;"	f	class:caffe::NetProto
Clear	caffe.pb.cc	/^void NetState::Clear() {$/;"	f	class:caffe::NetState
Clear	caffe.pb.cc	/^void NullUpdateProto::Clear() {$/;"	f	class:caffe::NullUpdateProto
Clear	caffe.pb.cc	/^void ParamSpec::Clear() {$/;"	f	class:caffe::ParamSpec
Clear	caffe.pb.cc	/^void PlaceholderProto::Clear() {$/;"	f	class:caffe::PlaceholderProto
Clear	caffe.pb.cc	/^void PlacementGroup::Clear() {$/;"	f	class:caffe::PlacementGroup
Clear	caffe.pb.cc	/^void PoolingProto::Clear() {$/;"	f	class:caffe::PoolingProto
Clear	caffe.pb.cc	/^void ReLUProto::Clear() {$/;"	f	class:caffe::ReLUProto
Clear	caffe.pb.cc	/^void Resource::Clear() {$/;"	f	class:caffe::Resource
Clear	caffe.pb.cc	/^void SigmoidProto::Clear() {$/;"	f	class:caffe::SigmoidProto
Clear	caffe.pb.cc	/^void SoftmaxProto::Clear() {$/;"	f	class:caffe::SoftmaxProto
Clear	caffe.pb.cc	/^void SolverProto::Clear() {$/;"	f	class:caffe::SolverProto
Clear	caffe.pb.cc	/^void SolverState::Clear() {$/;"	f	class:caffe::SolverState
Clear	caffe.pb.cc	/^void SplitProto::Clear() {$/;"	f	class:caffe::SplitProto
Clear	caffe.pb.cc	/^void StoreProto::Clear() {$/;"	f	class:caffe::StoreProto
Clear	caffe.pb.cc	/^void Strategy::Clear() {$/;"	f	class:caffe::Strategy
Clear	graph.h	/^  void Clear() {$/;"	f	struct:dataflow::Node
Concat	graph.h	/^  Concat,$/;"	e	enum:dataflow::NodeType
ConcatProto	caffe.pb.cc	/^ConcatProto::ConcatProto()$/;"	f	class:caffe::ConcatProto
ConcatProto	caffe.pb.cc	/^ConcatProto::ConcatProto(const ConcatProto& from)$/;"	f	class:caffe::ConcatProto
ConcatProto	caffe.pb.h	/^class ConcatProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.ConcatProto) *\/ {$/;"	c	namespace:caffe
ConcatProtoDefaultTypeInternal	caffe.pb.cc	/^class ConcatProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConcatProto> {$/;"	c	namespace:caffe	file:
Convolution	graph.h	/^  Convolution = 0,$/;"	e	enum:dataflow::NodeType
ConvolutionProto	caffe.pb.cc	/^ConvolutionProto::ConvolutionProto()$/;"	f	class:caffe::ConvolutionProto
ConvolutionProto	caffe.pb.cc	/^ConvolutionProto::ConvolutionProto(const ConvolutionProto& from)$/;"	f	class:caffe::ConvolutionProto
ConvolutionProto	caffe.pb.h	/^class ConvolutionProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.ConvolutionProto) *\/ {$/;"	c	namespace:caffe
ConvolutionProtoDefaultTypeInternal	caffe.pb.cc	/^class ConvolutionProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConvolutionProto> {$/;"	c	namespace:caffe	file:
ConvolutionProto_Engine	caffe.pb.h	/^enum ConvolutionProto_Engine {$/;"	g	namespace:caffe
ConvolutionProto_Engine_CAFFE	caffe.pb.h	/^  ConvolutionProto_Engine_CAFFE = 1,$/;"	e	enum:caffe::ConvolutionProto_Engine
ConvolutionProto_Engine_CUDNN	caffe.pb.h	/^  ConvolutionProto_Engine_CUDNN = 2$/;"	e	enum:caffe::ConvolutionProto_Engine
ConvolutionProto_Engine_DEFAULT	caffe.pb.h	/^  ConvolutionProto_Engine_DEFAULT = 0,$/;"	e	enum:caffe::ConvolutionProto_Engine
ConvolutionProto_Engine_Engine_ARRAYSIZE	caffe.pb.h	/^const int ConvolutionProto_Engine_Engine_ARRAYSIZE = ConvolutionProto_Engine_Engine_MAX + 1;$/;"	m	namespace:caffe
ConvolutionProto_Engine_Engine_MAX	caffe.pb.h	/^const ConvolutionProto_Engine ConvolutionProto_Engine_Engine_MAX = ConvolutionProto_Engine_CUDNN;$/;"	m	namespace:caffe
ConvolutionProto_Engine_Engine_MIN	caffe.pb.h	/^const ConvolutionProto_Engine ConvolutionProto_Engine_Engine_MIN = ConvolutionProto_Engine_DEFAULT;$/;"	m	namespace:caffe
ConvolutionProto_Engine_IsValid	caffe.pb.cc	/^bool ConvolutionProto_Engine_IsValid(int value) {$/;"	f	namespace:caffe
ConvolutionProto_Engine_Name	caffe.pb.h	/^inline const ::std::string& ConvolutionProto_Engine_Name(ConvolutionProto_Engine value) {$/;"	f	namespace:caffe
ConvolutionProto_Engine_Parse	caffe.pb.h	/^inline bool ConvolutionProto_Engine_Parse($/;"	f	namespace:caffe
ConvolutionProto_Engine_descriptor	caffe.pb.cc	/^const ::google::protobuf::EnumDescriptor* ConvolutionProto_Engine_descriptor() {$/;"	f	namespace:caffe
CopyFrom	caffe.pb.cc	/^void BatchNormProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::BatchNormProto
CopyFrom	caffe.pb.cc	/^void BatchNormProto::CopyFrom(const BatchNormProto& from) {$/;"	f	class:caffe::BatchNormProto
CopyFrom	caffe.pb.cc	/^void BlobProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::BlobProto
CopyFrom	caffe.pb.cc	/^void BlobProto::CopyFrom(const BlobProto& from) {$/;"	f	class:caffe::BlobProto
CopyFrom	caffe.pb.cc	/^void BlobShape::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::BlobShape
CopyFrom	caffe.pb.cc	/^void BlobShape::CopyFrom(const BlobShape& from) {$/;"	f	class:caffe::BlobShape
CopyFrom	caffe.pb.cc	/^void BoxingProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::BoxingProto
CopyFrom	caffe.pb.cc	/^void BoxingProto::CopyFrom(const BoxingProto& from) {$/;"	f	class:caffe::BoxingProto
CopyFrom	caffe.pb.cc	/^void ConcatProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::ConcatProto
CopyFrom	caffe.pb.cc	/^void ConcatProto::CopyFrom(const ConcatProto& from) {$/;"	f	class:caffe::ConcatProto
CopyFrom	caffe.pb.cc	/^void ConvolutionProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::ConvolutionProto
CopyFrom	caffe.pb.cc	/^void ConvolutionProto::CopyFrom(const ConvolutionProto& from) {$/;"	f	class:caffe::ConvolutionProto
CopyFrom	caffe.pb.cc	/^void CopyProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::CopyProto
CopyFrom	caffe.pb.cc	/^void CopyProto::CopyFrom(const CopyProto& from) {$/;"	f	class:caffe::CopyProto
CopyFrom	caffe.pb.cc	/^void DeviceGroup::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::DeviceGroup
CopyFrom	caffe.pb.cc	/^void DeviceGroup::CopyFrom(const DeviceGroup& from) {$/;"	f	class:caffe::DeviceGroup
CopyFrom	caffe.pb.cc	/^void DeviceSet::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::DeviceSet
CopyFrom	caffe.pb.cc	/^void DeviceSet::CopyFrom(const DeviceSet& from) {$/;"	f	class:caffe::DeviceSet
CopyFrom	caffe.pb.cc	/^void FillerParameter::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::FillerParameter
CopyFrom	caffe.pb.cc	/^void FillerParameter::CopyFrom(const FillerParameter& from) {$/;"	f	class:caffe::FillerParameter
CopyFrom	caffe.pb.cc	/^void InnerProductProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::InnerProductProto
CopyFrom	caffe.pb.cc	/^void InnerProductProto::CopyFrom(const InnerProductProto& from) {$/;"	f	class:caffe::InnerProductProto
CopyFrom	caffe.pb.cc	/^void LRNProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::LRNProto
CopyFrom	caffe.pb.cc	/^void LRNProto::CopyFrom(const LRNProto& from) {$/;"	f	class:caffe::LRNProto
CopyFrom	caffe.pb.cc	/^void LayerProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::LayerProto
CopyFrom	caffe.pb.cc	/^void LayerProto::CopyFrom(const LayerProto& from) {$/;"	f	class:caffe::LayerProto
CopyFrom	caffe.pb.cc	/^void LayerSet::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::LayerSet
CopyFrom	caffe.pb.cc	/^void LayerSet::CopyFrom(const LayerSet& from) {$/;"	f	class:caffe::LayerSet
CopyFrom	caffe.pb.cc	/^void LoadPartialModelProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::LoadPartialModelProto
CopyFrom	caffe.pb.cc	/^void LoadPartialModelProto::CopyFrom(const LoadPartialModelProto& from) {$/;"	f	class:caffe::LoadPartialModelProto
CopyFrom	caffe.pb.cc	/^void LoaderProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::LoaderProto
CopyFrom	caffe.pb.cc	/^void LoaderProto::CopyFrom(const LoaderProto& from) {$/;"	f	class:caffe::LoaderProto
CopyFrom	caffe.pb.cc	/^void Machine::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::Machine
CopyFrom	caffe.pb.cc	/^void Machine::CopyFrom(const Machine& from) {$/;"	f	class:caffe::Machine
CopyFrom	caffe.pb.cc	/^void MachineGroup::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::MachineGroup
CopyFrom	caffe.pb.cc	/^void MachineGroup::CopyFrom(const MachineGroup& from) {$/;"	f	class:caffe::MachineGroup
CopyFrom	caffe.pb.cc	/^void ModelUpdateProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::ModelUpdateProto
CopyFrom	caffe.pb.cc	/^void ModelUpdateProto::CopyFrom(const ModelUpdateProto& from) {$/;"	f	class:caffe::ModelUpdateProto
CopyFrom	caffe.pb.cc	/^void MultinomialLogisticLossProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::MultinomialLogisticLossProto
CopyFrom	caffe.pb.cc	/^void MultinomialLogisticLossProto::CopyFrom(const MultinomialLogisticLossProto& from) {$/;"	f	class:caffe::MultinomialLogisticLossProto
CopyFrom	caffe.pb.cc	/^void NetParameter::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::NetParameter
CopyFrom	caffe.pb.cc	/^void NetParameter::CopyFrom(const NetParameter& from) {$/;"	f	class:caffe::NetParameter
CopyFrom	caffe.pb.cc	/^void NetProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::NetProto
CopyFrom	caffe.pb.cc	/^void NetProto::CopyFrom(const NetProto& from) {$/;"	f	class:caffe::NetProto
CopyFrom	caffe.pb.cc	/^void NetState::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::NetState
CopyFrom	caffe.pb.cc	/^void NetState::CopyFrom(const NetState& from) {$/;"	f	class:caffe::NetState
CopyFrom	caffe.pb.cc	/^void NullUpdateProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::NullUpdateProto
CopyFrom	caffe.pb.cc	/^void NullUpdateProto::CopyFrom(const NullUpdateProto& from) {$/;"	f	class:caffe::NullUpdateProto
CopyFrom	caffe.pb.cc	/^void ParamSpec::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::ParamSpec
CopyFrom	caffe.pb.cc	/^void ParamSpec::CopyFrom(const ParamSpec& from) {$/;"	f	class:caffe::ParamSpec
CopyFrom	caffe.pb.cc	/^void PlaceholderProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::PlaceholderProto
CopyFrom	caffe.pb.cc	/^void PlaceholderProto::CopyFrom(const PlaceholderProto& from) {$/;"	f	class:caffe::PlaceholderProto
CopyFrom	caffe.pb.cc	/^void PlacementGroup::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::PlacementGroup
CopyFrom	caffe.pb.cc	/^void PlacementGroup::CopyFrom(const PlacementGroup& from) {$/;"	f	class:caffe::PlacementGroup
CopyFrom	caffe.pb.cc	/^void PoolingProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::PoolingProto
CopyFrom	caffe.pb.cc	/^void PoolingProto::CopyFrom(const PoolingProto& from) {$/;"	f	class:caffe::PoolingProto
CopyFrom	caffe.pb.cc	/^void ReLUProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::ReLUProto
CopyFrom	caffe.pb.cc	/^void ReLUProto::CopyFrom(const ReLUProto& from) {$/;"	f	class:caffe::ReLUProto
CopyFrom	caffe.pb.cc	/^void Resource::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::Resource
CopyFrom	caffe.pb.cc	/^void Resource::CopyFrom(const Resource& from) {$/;"	f	class:caffe::Resource
CopyFrom	caffe.pb.cc	/^void SigmoidProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::SigmoidProto
CopyFrom	caffe.pb.cc	/^void SigmoidProto::CopyFrom(const SigmoidProto& from) {$/;"	f	class:caffe::SigmoidProto
CopyFrom	caffe.pb.cc	/^void SoftmaxProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::SoftmaxProto
CopyFrom	caffe.pb.cc	/^void SoftmaxProto::CopyFrom(const SoftmaxProto& from) {$/;"	f	class:caffe::SoftmaxProto
CopyFrom	caffe.pb.cc	/^void SolverProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::SolverProto
CopyFrom	caffe.pb.cc	/^void SolverProto::CopyFrom(const SolverProto& from) {$/;"	f	class:caffe::SolverProto
CopyFrom	caffe.pb.cc	/^void SolverState::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::SolverState
CopyFrom	caffe.pb.cc	/^void SolverState::CopyFrom(const SolverState& from) {$/;"	f	class:caffe::SolverState
CopyFrom	caffe.pb.cc	/^void SplitProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::SplitProto
CopyFrom	caffe.pb.cc	/^void SplitProto::CopyFrom(const SplitProto& from) {$/;"	f	class:caffe::SplitProto
CopyFrom	caffe.pb.cc	/^void StoreProto::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::StoreProto
CopyFrom	caffe.pb.cc	/^void StoreProto::CopyFrom(const StoreProto& from) {$/;"	f	class:caffe::StoreProto
CopyFrom	caffe.pb.cc	/^void Strategy::CopyFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::Strategy
CopyFrom	caffe.pb.cc	/^void Strategy::CopyFrom(const Strategy& from) {$/;"	f	class:caffe::Strategy
CopyProto	caffe.pb.cc	/^CopyProto::CopyProto()$/;"	f	class:caffe::CopyProto
CopyProto	caffe.pb.cc	/^CopyProto::CopyProto(const CopyProto& from)$/;"	f	class:caffe::CopyProto
CopyProto	caffe.pb.h	/^class CopyProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.CopyProto) *\/ {$/;"	c	namespace:caffe
CopyProtoDefaultTypeInternal	caffe.pb.cc	/^class CopyProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CopyProto> {$/;"	c	namespace:caffe	file:
CopyType	caffe.pb.h	/^enum CopyType {$/;"	g	namespace:caffe
CopyType_ARRAYSIZE	caffe.pb.h	/^const int CopyType_ARRAYSIZE = CopyType_MAX + 1;$/;"	m	namespace:caffe
CopyType_IsValid	caffe.pb.cc	/^bool CopyType_IsValid(int value) {$/;"	f	namespace:caffe
CopyType_MAX	caffe.pb.h	/^const CopyType CopyType_MAX = ForwardD2D;$/;"	m	namespace:caffe
CopyType_MIN	caffe.pb.h	/^const CopyType CopyType_MIN = ForwardH2D;$/;"	m	namespace:caffe
CopyType_Name	caffe.pb.h	/^inline const ::std::string& CopyType_Name(CopyType value) {$/;"	f	namespace:caffe
CopyType_Parse	caffe.pb.h	/^inline bool CopyType_Parse($/;"	f	namespace:caffe
CopyType_descriptor	caffe.pb.cc	/^const ::google::protobuf::EnumDescriptor* CopyType_descriptor() {$/;"	f	namespace:caffe
CreateEdge	graph.cc	/^Edge* Graph::CreateEdge(int src, int sink, int index) {$/;"	f	class:dataflow::Graph
CreateNode	graph.cc	/^Node* Graph::CreateNode(const caffe::LayerProto& proto, int index) {$/;"	f	class:dataflow::Graph
DEFAULT	caffe.pb.cc	/^const ConvolutionProto_Engine ConvolutionProto::DEFAULT;$/;"	m	class:caffe::ConvolutionProto	file:
DEFAULT	caffe.pb.cc	/^const LRNProto_Engine LRNProto::DEFAULT;$/;"	m	class:caffe::LRNProto	file:
DEFAULT	caffe.pb.cc	/^const PoolingProto_Engine PoolingProto::DEFAULT;$/;"	m	class:caffe::PoolingProto	file:
DEFAULT	caffe.pb.cc	/^const ReLUProto_Engine ReLUProto::DEFAULT;$/;"	m	class:caffe::ReLUProto	file:
DEFAULT	caffe.pb.cc	/^const SigmoidProto_Engine SigmoidProto::DEFAULT;$/;"	m	class:caffe::SigmoidProto	file:
DEFAULT	caffe.pb.cc	/^const SoftmaxProto_Engine SoftmaxProto::DEFAULT;$/;"	m	class:caffe::SoftmaxProto	file:
DEFAULT	caffe.pb.cc	/^const StoreProto_Engine StoreProto::DEFAULT;$/;"	m	class:caffe::StoreProto	file:
DEFAULT	caffe.pb.h	/^  static const Engine DEFAULT =$/;"	m	class:caffe::ConvolutionProto
DEFAULT	caffe.pb.h	/^  static const Engine DEFAULT =$/;"	m	class:caffe::LRNProto
DEFAULT	caffe.pb.h	/^  static const Engine DEFAULT =$/;"	m	class:caffe::PoolingProto
DEFAULT	caffe.pb.h	/^  static const Engine DEFAULT =$/;"	m	class:caffe::ReLUProto
DEFAULT	caffe.pb.h	/^  static const Engine DEFAULT =$/;"	m	class:caffe::SigmoidProto
DEFAULT	caffe.pb.h	/^  static const Engine DEFAULT =$/;"	m	class:caffe::SoftmaxProto
DEFAULT	caffe.pb.h	/^  static const Engine DEFAULT =$/;"	m	class:caffe::StoreProto
DOUBLE	caffe.pb.cc	/^const BlobProto_DataType BlobProto::DOUBLE;$/;"	m	class:caffe::BlobProto	file:
DOUBLE	caffe.pb.h	/^  static const DataType DOUBLE =$/;"	m	class:caffe::BlobProto
DO_	caffe.pb.cc	/^#define DO_(/;"	d	file:
DO_	caffe.pb.cc	/^#undef DO_$/;"	d	file:
DataType	caffe.pb.h	/^  typedef BlobProto_DataType DataType;$/;"	t	class:caffe::BlobProto
DataType_ARRAYSIZE	caffe.pb.cc	/^const int BlobProto::DataType_ARRAYSIZE;$/;"	m	class:caffe::BlobProto	file:
DataType_ARRAYSIZE	caffe.pb.h	/^  static const int DataType_ARRAYSIZE =$/;"	m	class:caffe::BlobProto
DataType_IsValid	caffe.pb.h	/^  static inline bool DataType_IsValid(int value) {$/;"	f	class:caffe::BlobProto
DataType_MAX	caffe.pb.cc	/^const BlobProto_DataType BlobProto::DataType_MAX;$/;"	m	class:caffe::BlobProto	file:
DataType_MAX	caffe.pb.h	/^  static const DataType DataType_MAX =$/;"	m	class:caffe::BlobProto
DataType_MIN	caffe.pb.cc	/^const BlobProto_DataType BlobProto::DataType_MIN;$/;"	m	class:caffe::BlobProto	file:
DataType_MIN	caffe.pb.h	/^  static const DataType DataType_MIN =$/;"	m	class:caffe::BlobProto
DataType_Name	caffe.pb.h	/^  static inline const ::std::string& DataType_Name(DataType value) {$/;"	f	class:caffe::BlobProto
DataType_Parse	caffe.pb.h	/^  static inline bool DataType_Parse(const ::std::string& name,$/;"	f	class:caffe::BlobProto
DataType_descriptor	caffe.pb.h	/^  DataType_descriptor() {$/;"	f	class:caffe::BlobProto
Delete	logic.hpp	/^struct Delete<Key, NullType> {$/;"	s	namespace:base
Delete	logic.hpp	/^struct Delete<Key, TypeList<Head, Tail>> {$/;"	s	namespace:base
Delete	logic.hpp	/^struct Delete<Key, TypeList<Meta<Key, Val>, List>> {$/;"	s	namespace:base
Destory	object_pool.h	/^  void Destory() {$/;"	f	class:dataflow::ObjectPool
DeviceGroup	caffe.pb.cc	/^DeviceGroup::DeviceGroup()$/;"	f	class:caffe::DeviceGroup
DeviceGroup	caffe.pb.cc	/^DeviceGroup::DeviceGroup(const DeviceGroup& from)$/;"	f	class:caffe::DeviceGroup
DeviceGroup	caffe.pb.h	/^class DeviceGroup : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.DeviceGroup) *\/ {$/;"	c	namespace:caffe
DeviceGroupDefaultTypeInternal	caffe.pb.cc	/^class DeviceGroupDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeviceGroup> {$/;"	c	namespace:caffe	file:
DeviceSet	caffe.pb.cc	/^DeviceSet::DeviceSet()$/;"	f	class:caffe::DeviceSet
DeviceSet	caffe.pb.cc	/^DeviceSet::DeviceSet(const DeviceSet& from)$/;"	f	class:caffe::DeviceSet
DeviceSet	caffe.pb.h	/^class DeviceSet : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.DeviceSet) *\/ {$/;"	c	namespace:caffe
DeviceSetDefaultTypeInternal	caffe.pb.cc	/^class DeviceSetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeviceSet> {$/;"	c	namespace:caffe	file:
DimCheckMode	caffe.pb.h	/^  typedef ParamSpec_DimCheckMode DimCheckMode;$/;"	t	class:caffe::ParamSpec
DimCheckMode_ARRAYSIZE	caffe.pb.cc	/^const int ParamSpec::DimCheckMode_ARRAYSIZE;$/;"	m	class:caffe::ParamSpec	file:
DimCheckMode_ARRAYSIZE	caffe.pb.h	/^  static const int DimCheckMode_ARRAYSIZE =$/;"	m	class:caffe::ParamSpec
DimCheckMode_IsValid	caffe.pb.h	/^  static inline bool DimCheckMode_IsValid(int value) {$/;"	f	class:caffe::ParamSpec
DimCheckMode_MAX	caffe.pb.cc	/^const ParamSpec_DimCheckMode ParamSpec::DimCheckMode_MAX;$/;"	m	class:caffe::ParamSpec	file:
DimCheckMode_MAX	caffe.pb.h	/^  static const DimCheckMode DimCheckMode_MAX =$/;"	m	class:caffe::ParamSpec
DimCheckMode_MIN	caffe.pb.cc	/^const ParamSpec_DimCheckMode ParamSpec::DimCheckMode_MIN;$/;"	m	class:caffe::ParamSpec	file:
DimCheckMode_MIN	caffe.pb.h	/^  static const DimCheckMode DimCheckMode_MIN =$/;"	m	class:caffe::ParamSpec
DimCheckMode_Name	caffe.pb.h	/^  static inline const ::std::string& DimCheckMode_Name(DimCheckMode value) {$/;"	f	class:caffe::ParamSpec
DimCheckMode_Parse	caffe.pb.h	/^  static inline bool DimCheckMode_Parse(const ::std::string& name,$/;"	f	class:caffe::ParamSpec
DimCheckMode_descriptor	caffe.pb.h	/^  DimCheckMode_descriptor() {$/;"	f	class:caffe::ParamSpec
Edge	graph.h	/^struct Edge {$/;"	s	namespace:dataflow
EdgeInfo	graph.h	/^struct EdgeInfo {$/;"	s	namespace:dataflow
Engine	caffe.pb.h	/^  typedef ConvolutionProto_Engine Engine;$/;"	t	class:caffe::ConvolutionProto
Engine	caffe.pb.h	/^  typedef LRNProto_Engine Engine;$/;"	t	class:caffe::LRNProto
Engine	caffe.pb.h	/^  typedef PoolingProto_Engine Engine;$/;"	t	class:caffe::PoolingProto
Engine	caffe.pb.h	/^  typedef ReLUProto_Engine Engine;$/;"	t	class:caffe::ReLUProto
Engine	caffe.pb.h	/^  typedef SigmoidProto_Engine Engine;$/;"	t	class:caffe::SigmoidProto
Engine	caffe.pb.h	/^  typedef SoftmaxProto_Engine Engine;$/;"	t	class:caffe::SoftmaxProto
Engine	caffe.pb.h	/^  typedef StoreProto_Engine Engine;$/;"	t	class:caffe::StoreProto
Engine_ARRAYSIZE	caffe.pb.cc	/^const int ConvolutionProto::Engine_ARRAYSIZE;$/;"	m	class:caffe::ConvolutionProto	file:
Engine_ARRAYSIZE	caffe.pb.cc	/^const int LRNProto::Engine_ARRAYSIZE;$/;"	m	class:caffe::LRNProto	file:
Engine_ARRAYSIZE	caffe.pb.cc	/^const int PoolingProto::Engine_ARRAYSIZE;$/;"	m	class:caffe::PoolingProto	file:
Engine_ARRAYSIZE	caffe.pb.cc	/^const int ReLUProto::Engine_ARRAYSIZE;$/;"	m	class:caffe::ReLUProto	file:
Engine_ARRAYSIZE	caffe.pb.cc	/^const int SigmoidProto::Engine_ARRAYSIZE;$/;"	m	class:caffe::SigmoidProto	file:
Engine_ARRAYSIZE	caffe.pb.cc	/^const int SoftmaxProto::Engine_ARRAYSIZE;$/;"	m	class:caffe::SoftmaxProto	file:
Engine_ARRAYSIZE	caffe.pb.cc	/^const int StoreProto::Engine_ARRAYSIZE;$/;"	m	class:caffe::StoreProto	file:
Engine_ARRAYSIZE	caffe.pb.h	/^  static const int Engine_ARRAYSIZE =$/;"	m	class:caffe::ConvolutionProto
Engine_ARRAYSIZE	caffe.pb.h	/^  static const int Engine_ARRAYSIZE =$/;"	m	class:caffe::LRNProto
Engine_ARRAYSIZE	caffe.pb.h	/^  static const int Engine_ARRAYSIZE =$/;"	m	class:caffe::PoolingProto
Engine_ARRAYSIZE	caffe.pb.h	/^  static const int Engine_ARRAYSIZE =$/;"	m	class:caffe::ReLUProto
Engine_ARRAYSIZE	caffe.pb.h	/^  static const int Engine_ARRAYSIZE =$/;"	m	class:caffe::SigmoidProto
Engine_ARRAYSIZE	caffe.pb.h	/^  static const int Engine_ARRAYSIZE =$/;"	m	class:caffe::SoftmaxProto
Engine_ARRAYSIZE	caffe.pb.h	/^  static const int Engine_ARRAYSIZE =$/;"	m	class:caffe::StoreProto
Engine_IsValid	caffe.pb.h	/^  static inline bool Engine_IsValid(int value) {$/;"	f	class:caffe::ConvolutionProto
Engine_IsValid	caffe.pb.h	/^  static inline bool Engine_IsValid(int value) {$/;"	f	class:caffe::LRNProto
Engine_IsValid	caffe.pb.h	/^  static inline bool Engine_IsValid(int value) {$/;"	f	class:caffe::PoolingProto
Engine_IsValid	caffe.pb.h	/^  static inline bool Engine_IsValid(int value) {$/;"	f	class:caffe::ReLUProto
Engine_IsValid	caffe.pb.h	/^  static inline bool Engine_IsValid(int value) {$/;"	f	class:caffe::SigmoidProto
Engine_IsValid	caffe.pb.h	/^  static inline bool Engine_IsValid(int value) {$/;"	f	class:caffe::SoftmaxProto
Engine_IsValid	caffe.pb.h	/^  static inline bool Engine_IsValid(int value) {$/;"	f	class:caffe::StoreProto
Engine_MAX	caffe.pb.cc	/^const ConvolutionProto_Engine ConvolutionProto::Engine_MAX;$/;"	m	class:caffe::ConvolutionProto	file:
Engine_MAX	caffe.pb.cc	/^const LRNProto_Engine LRNProto::Engine_MAX;$/;"	m	class:caffe::LRNProto	file:
Engine_MAX	caffe.pb.cc	/^const PoolingProto_Engine PoolingProto::Engine_MAX;$/;"	m	class:caffe::PoolingProto	file:
Engine_MAX	caffe.pb.cc	/^const ReLUProto_Engine ReLUProto::Engine_MAX;$/;"	m	class:caffe::ReLUProto	file:
Engine_MAX	caffe.pb.cc	/^const SigmoidProto_Engine SigmoidProto::Engine_MAX;$/;"	m	class:caffe::SigmoidProto	file:
Engine_MAX	caffe.pb.cc	/^const SoftmaxProto_Engine SoftmaxProto::Engine_MAX;$/;"	m	class:caffe::SoftmaxProto	file:
Engine_MAX	caffe.pb.cc	/^const StoreProto_Engine StoreProto::Engine_MAX;$/;"	m	class:caffe::StoreProto	file:
Engine_MAX	caffe.pb.h	/^  static const Engine Engine_MAX =$/;"	m	class:caffe::ConvolutionProto
Engine_MAX	caffe.pb.h	/^  static const Engine Engine_MAX =$/;"	m	class:caffe::LRNProto
Engine_MAX	caffe.pb.h	/^  static const Engine Engine_MAX =$/;"	m	class:caffe::PoolingProto
Engine_MAX	caffe.pb.h	/^  static const Engine Engine_MAX =$/;"	m	class:caffe::ReLUProto
Engine_MAX	caffe.pb.h	/^  static const Engine Engine_MAX =$/;"	m	class:caffe::SigmoidProto
Engine_MAX	caffe.pb.h	/^  static const Engine Engine_MAX =$/;"	m	class:caffe::SoftmaxProto
Engine_MAX	caffe.pb.h	/^  static const Engine Engine_MAX =$/;"	m	class:caffe::StoreProto
Engine_MIN	caffe.pb.cc	/^const ConvolutionProto_Engine ConvolutionProto::Engine_MIN;$/;"	m	class:caffe::ConvolutionProto	file:
Engine_MIN	caffe.pb.cc	/^const LRNProto_Engine LRNProto::Engine_MIN;$/;"	m	class:caffe::LRNProto	file:
Engine_MIN	caffe.pb.cc	/^const PoolingProto_Engine PoolingProto::Engine_MIN;$/;"	m	class:caffe::PoolingProto	file:
Engine_MIN	caffe.pb.cc	/^const ReLUProto_Engine ReLUProto::Engine_MIN;$/;"	m	class:caffe::ReLUProto	file:
Engine_MIN	caffe.pb.cc	/^const SigmoidProto_Engine SigmoidProto::Engine_MIN;$/;"	m	class:caffe::SigmoidProto	file:
Engine_MIN	caffe.pb.cc	/^const SoftmaxProto_Engine SoftmaxProto::Engine_MIN;$/;"	m	class:caffe::SoftmaxProto	file:
Engine_MIN	caffe.pb.cc	/^const StoreProto_Engine StoreProto::Engine_MIN;$/;"	m	class:caffe::StoreProto	file:
Engine_MIN	caffe.pb.h	/^  static const Engine Engine_MIN =$/;"	m	class:caffe::ConvolutionProto
Engine_MIN	caffe.pb.h	/^  static const Engine Engine_MIN =$/;"	m	class:caffe::LRNProto
Engine_MIN	caffe.pb.h	/^  static const Engine Engine_MIN =$/;"	m	class:caffe::PoolingProto
Engine_MIN	caffe.pb.h	/^  static const Engine Engine_MIN =$/;"	m	class:caffe::ReLUProto
Engine_MIN	caffe.pb.h	/^  static const Engine Engine_MIN =$/;"	m	class:caffe::SigmoidProto
Engine_MIN	caffe.pb.h	/^  static const Engine Engine_MIN =$/;"	m	class:caffe::SoftmaxProto
Engine_MIN	caffe.pb.h	/^  static const Engine Engine_MIN =$/;"	m	class:caffe::StoreProto
Engine_Name	caffe.pb.h	/^  static inline const ::std::string& Engine_Name(Engine value) {$/;"	f	class:caffe::ConvolutionProto
Engine_Name	caffe.pb.h	/^  static inline const ::std::string& Engine_Name(Engine value) {$/;"	f	class:caffe::LRNProto
Engine_Name	caffe.pb.h	/^  static inline const ::std::string& Engine_Name(Engine value) {$/;"	f	class:caffe::PoolingProto
Engine_Name	caffe.pb.h	/^  static inline const ::std::string& Engine_Name(Engine value) {$/;"	f	class:caffe::ReLUProto
Engine_Name	caffe.pb.h	/^  static inline const ::std::string& Engine_Name(Engine value) {$/;"	f	class:caffe::SigmoidProto
Engine_Name	caffe.pb.h	/^  static inline const ::std::string& Engine_Name(Engine value) {$/;"	f	class:caffe::SoftmaxProto
Engine_Name	caffe.pb.h	/^  static inline const ::std::string& Engine_Name(Engine value) {$/;"	f	class:caffe::StoreProto
Engine_Parse	caffe.pb.h	/^  static inline bool Engine_Parse(const ::std::string& name,$/;"	f	class:caffe::ConvolutionProto
Engine_Parse	caffe.pb.h	/^  static inline bool Engine_Parse(const ::std::string& name,$/;"	f	class:caffe::LRNProto
Engine_Parse	caffe.pb.h	/^  static inline bool Engine_Parse(const ::std::string& name,$/;"	f	class:caffe::PoolingProto
Engine_Parse	caffe.pb.h	/^  static inline bool Engine_Parse(const ::std::string& name,$/;"	f	class:caffe::ReLUProto
Engine_Parse	caffe.pb.h	/^  static inline bool Engine_Parse(const ::std::string& name,$/;"	f	class:caffe::SigmoidProto
Engine_Parse	caffe.pb.h	/^  static inline bool Engine_Parse(const ::std::string& name,$/;"	f	class:caffe::SoftmaxProto
Engine_Parse	caffe.pb.h	/^  static inline bool Engine_Parse(const ::std::string& name,$/;"	f	class:caffe::StoreProto
Engine_descriptor	caffe.pb.h	/^  Engine_descriptor() {$/;"	f	class:caffe::ConvolutionProto
Engine_descriptor	caffe.pb.h	/^  Engine_descriptor() {$/;"	f	class:caffe::LRNProto
Engine_descriptor	caffe.pb.h	/^  Engine_descriptor() {$/;"	f	class:caffe::PoolingProto
Engine_descriptor	caffe.pb.h	/^  Engine_descriptor() {$/;"	f	class:caffe::ReLUProto
Engine_descriptor	caffe.pb.h	/^  Engine_descriptor() {$/;"	f	class:caffe::SigmoidProto
Engine_descriptor	caffe.pb.h	/^  Engine_descriptor() {$/;"	f	class:caffe::SoftmaxProto
Engine_descriptor	caffe.pb.h	/^  Engine_descriptor() {$/;"	f	class:caffe::StoreProto
FLAGS	Makefile	/^FLAGS=-g -Wall -std=c++11 -lglog -lgflags -lgtest -lpthread$/;"	m
FLOAT	caffe.pb.cc	/^const BlobProto_DataType BlobProto::FLOAT;$/;"	m	class:caffe::BlobProto	file:
FLOAT	caffe.pb.h	/^  static const DataType FLOAT =$/;"	m	class:caffe::BlobProto
FLOAT16	caffe.pb.cc	/^const BlobProto_DataType BlobProto::FLOAT16;$/;"	m	class:caffe::BlobProto	file:
FLOAT16	caffe.pb.h	/^  static const DataType FLOAT16 =$/;"	m	class:caffe::BlobProto
False	logic.hpp	/^typedef IntType<false> False;$/;"	t	namespace:base
FillerParameter	caffe.pb.cc	/^FillerParameter::FillerParameter()$/;"	f	class:caffe::FillerParameter
FillerParameter	caffe.pb.cc	/^FillerParameter::FillerParameter(const FillerParameter& from)$/;"	f	class:caffe::FillerParameter
FillerParameter	caffe.pb.h	/^class FillerParameter : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.FillerParameter) *\/ {$/;"	c	namespace:caffe
FillerParameterDefaultTypeInternal	caffe.pb.cc	/^class FillerParameterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FillerParameter> {$/;"	c	namespace:caffe	file:
Find	logic.hpp	/^struct Find<Key, NullType> {$/;"	s	namespace:base
Find	logic.hpp	/^struct Find<Key, TypeList<Meta<Head, Val>, Tail>> {$/;"	s	namespace:base
Find	logic.hpp	/^struct Find<Key, TypeList<Meta<Key, Val>, Tail>> {$/;"	s	namespace:base
Fold	logic.hpp	/^struct Fold<NullType, Meta, Proc> {$/;"	s	namespace:base
ForwardD2D	caffe.pb.h	/^  ForwardD2D = 2$/;"	e	enum:caffe::CopyType
ForwardD2H	caffe.pb.h	/^  ForwardD2H = 1,$/;"	e	enum:caffe::CopyType
ForwardH2D	caffe.pb.h	/^  ForwardH2D = 0,$/;"	e	enum:caffe::CopyType
FreeObject	object_pool.h	/^  void FreeObject(Type* object) {$/;"	f	class:dataflow::ObjectPool
GOOGLE_ATTRIBUTE_COLD	caffe.pb.cc	/^void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;$/;"	m	namespace:caffe::protobuf_caffe_2eproto::__anon2	file:
GPU	caffe.pb.cc	/^const SolverProto_SolverMode SolverProto::GPU;$/;"	m	class:caffe::SolverProto	file:
GPU	caffe.pb.h	/^  static const SolverMode GPU =$/;"	m	class:caffe::SolverProto
GRAPH_H	graph.h	/^#define GRAPH_H$/;"	d
GRAPH_PARSER_H	graph_parser.h	/^#define GRAPH_PARSER_H$/;"	d
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::BatchNormProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::BlobProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::BlobShape
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::BoxingProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::ConcatProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::ConvolutionProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::CopyProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::DeviceGroup
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::DeviceSet
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::FillerParameter
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::InnerProductProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::LRNProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::LayerProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::LayerSet
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::LoadPartialModelProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::LoaderProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::Machine
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::MachineGroup
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::ModelUpdateProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::NetParameter
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::NetProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::NetState
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::NullUpdateProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::ParamSpec
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::PlaceholderProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::PlacementGroup
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::PoolingProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::ReLUProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::Resource
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::SigmoidProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::SoftmaxProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::SolverProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::SolverState
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::SplitProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::StoreProto
GetArenaNoVirtual	caffe.pb.h	/^  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {$/;"	f	class:caffe::Strategy
GetEnumDescriptor	caffe.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::caffe::BlobProto_DataType>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	caffe.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::caffe::BoxingOp>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	caffe.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::caffe::ConvolutionProto_Engine>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	caffe.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::caffe::CopyType>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	caffe.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::caffe::LRNProto_Engine>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	caffe.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::caffe::LRNProto_NormRegion>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	caffe.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::caffe::ParallelPolicy>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	caffe.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::caffe::ParamSpec_DimCheckMode>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	caffe.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::caffe::Phase>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	caffe.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::caffe::PoolingProto_Engine>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	caffe.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::caffe::PoolingProto_PoolMethod>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	caffe.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::caffe::ReLUProto_Engine>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	caffe.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::caffe::SigmoidProto_Engine>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	caffe.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::caffe::SoftmaxProto_Engine>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	caffe.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::caffe::SolverProto_SolverMode>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	caffe.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::caffe::SolverProto_SolverType>() {$/;"	f	namespace:google::protobuf
GetEnumDescriptor	caffe.pb.h	/^inline const EnumDescriptor* GetEnumDescriptor< ::caffe::StoreProto_Engine>() {$/;"	f	namespace:google::protobuf
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata BatchNormProto::GetMetadata() const {$/;"	f	class:caffe::BatchNormProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata BlobProto::GetMetadata() const {$/;"	f	class:caffe::BlobProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata BlobShape::GetMetadata() const {$/;"	f	class:caffe::BlobShape
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata BoxingProto::GetMetadata() const {$/;"	f	class:caffe::BoxingProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata ConcatProto::GetMetadata() const {$/;"	f	class:caffe::ConcatProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata ConvolutionProto::GetMetadata() const {$/;"	f	class:caffe::ConvolutionProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata CopyProto::GetMetadata() const {$/;"	f	class:caffe::CopyProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata DeviceGroup::GetMetadata() const {$/;"	f	class:caffe::DeviceGroup
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata DeviceSet::GetMetadata() const {$/;"	f	class:caffe::DeviceSet
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata FillerParameter::GetMetadata() const {$/;"	f	class:caffe::FillerParameter
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata InnerProductProto::GetMetadata() const {$/;"	f	class:caffe::InnerProductProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata LRNProto::GetMetadata() const {$/;"	f	class:caffe::LRNProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata LayerProto::GetMetadata() const {$/;"	f	class:caffe::LayerProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata LayerSet::GetMetadata() const {$/;"	f	class:caffe::LayerSet
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata LoadPartialModelProto::GetMetadata() const {$/;"	f	class:caffe::LoadPartialModelProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata LoaderProto::GetMetadata() const {$/;"	f	class:caffe::LoaderProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata Machine::GetMetadata() const {$/;"	f	class:caffe::Machine
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata MachineGroup::GetMetadata() const {$/;"	f	class:caffe::MachineGroup
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata ModelUpdateProto::GetMetadata() const {$/;"	f	class:caffe::ModelUpdateProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata MultinomialLogisticLossProto::GetMetadata() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata NetParameter::GetMetadata() const {$/;"	f	class:caffe::NetParameter
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata NetProto::GetMetadata() const {$/;"	f	class:caffe::NetProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata NetState::GetMetadata() const {$/;"	f	class:caffe::NetState
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata NullUpdateProto::GetMetadata() const {$/;"	f	class:caffe::NullUpdateProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata ParamSpec::GetMetadata() const {$/;"	f	class:caffe::ParamSpec
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata PlaceholderProto::GetMetadata() const {$/;"	f	class:caffe::PlaceholderProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata PlacementGroup::GetMetadata() const {$/;"	f	class:caffe::PlacementGroup
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata PoolingProto::GetMetadata() const {$/;"	f	class:caffe::PoolingProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata ReLUProto::GetMetadata() const {$/;"	f	class:caffe::ReLUProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata Resource::GetMetadata() const {$/;"	f	class:caffe::Resource
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata SigmoidProto::GetMetadata() const {$/;"	f	class:caffe::SigmoidProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata SoftmaxProto::GetMetadata() const {$/;"	f	class:caffe::SoftmaxProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata SolverProto::GetMetadata() const {$/;"	f	class:caffe::SolverProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata SolverState::GetMetadata() const {$/;"	f	class:caffe::SolverState
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata SplitProto::GetMetadata() const {$/;"	f	class:caffe::SplitProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata StoreProto::GetMetadata() const {$/;"	f	class:caffe::StoreProto
GetMetadata	caffe.pb.cc	/^::google::protobuf::Metadata Strategy::GetMetadata() const {$/;"	f	class:caffe::Strategy
Graph	graph.h	/^  Graph() {}$/;"	f	class:dataflow::Graph
Graph	graph.h	/^class Graph {$/;"	c	namespace:dataflow
GraphParser	graph_parser.h	/^class GraphParser {$/;"	c	namespace:dataflow
Head	logic.hpp	/^  typedef H Head;$/;"	t	struct:base::TypeList
INT16	caffe.pb.cc	/^const BlobProto_DataType BlobProto::INT16;$/;"	m	class:caffe::BlobProto	file:
INT16	caffe.pb.h	/^  static const DataType INT16 =$/;"	m	class:caffe::BlobProto
INT32	caffe.pb.cc	/^const BlobProto_DataType BlobProto::INT32;$/;"	m	class:caffe::BlobProto	file:
INT32	caffe.pb.h	/^  static const DataType INT32 =$/;"	m	class:caffe::BlobProto
INT64	caffe.pb.cc	/^const BlobProto_DataType BlobProto::INT64;$/;"	m	class:caffe::BlobProto	file:
INT64	caffe.pb.h	/^  static const DataType INT64 =$/;"	m	class:caffe::BlobProto
INT8	caffe.pb.cc	/^const BlobProto_DataType BlobProto::INT8;$/;"	m	class:caffe::BlobProto	file:
INT8	caffe.pb.h	/^  static const DataType INT8 =$/;"	m	class:caffe::BlobProto
INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION	caffe.pb.cc	/^#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION$/;"	d	file:
IfExistInSet	logic.hpp	/^struct IfExistInSet<Key, NullType> {$/;"	s	namespace:base
IfExistInSet	logic.hpp	/^struct IfExistInSet<Key, TypeList<Meta<Head, Val>, Tail>> {$/;"	s	namespace:base
IfExistInSet	logic.hpp	/^struct IfExistInSet<Key, TypeList<Meta<Key, Val>, Tail>> {$/;"	s	namespace:base
IfThenElse	logic.hpp	/^struct IfThenElse<False, If, Else> {$/;"	s	namespace:base
IfThenElse	logic.hpp	/^struct IfThenElse<True, If, Else> {$/;"	s	namespace:base
InitDefaults	caffe.pb.cc	/^void InitDefaults() {$/;"	f	namespace:caffe::protobuf_caffe_2eproto
InitDefaultsImpl	caffe.pb.cc	/^void TableStruct::InitDefaultsImpl() {$/;"	f	class:caffe::protobuf_caffe_2eproto::TableStruct
InnerProduct	graph.h	/^  InnerProduct,$/;"	e	enum:dataflow::NodeType
InnerProductProto	caffe.pb.cc	/^InnerProductProto::InnerProductProto()$/;"	f	class:caffe::InnerProductProto
InnerProductProto	caffe.pb.cc	/^InnerProductProto::InnerProductProto(const InnerProductProto& from)$/;"	f	class:caffe::InnerProductProto
InnerProductProto	caffe.pb.h	/^class InnerProductProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.InnerProductProto) *\/ {$/;"	c	namespace:caffe
InnerProductProtoDefaultTypeInternal	caffe.pb.cc	/^class InnerProductProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<InnerProductProto> {$/;"	c	namespace:caffe	file:
IntType	logic.hpp	/^struct IntType {$/;"	s	namespace:base
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* BatchNormProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::BatchNormProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* BlobProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::BlobProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* BlobShape::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::BlobShape
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* BoxingProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::BoxingProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* ConcatProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::ConcatProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* ConvolutionProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::ConvolutionProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* CopyProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::CopyProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* DeviceGroup::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::DeviceGroup
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* DeviceSet::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::DeviceSet
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* FillerParameter::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::FillerParameter
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* InnerProductProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::InnerProductProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* LRNProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::LRNProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* LayerProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::LayerProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* LayerSet::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::LayerSet
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* LoadPartialModelProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::LoadPartialModelProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* LoaderProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::LoaderProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* Machine::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::Machine
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* MachineGroup::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::MachineGroup
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* ModelUpdateProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::ModelUpdateProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* MultinomialLogisticLossProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::MultinomialLogisticLossProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* NetParameter::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::NetParameter
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* NetProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::NetProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* NetState::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::NetState
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* NullUpdateProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::NullUpdateProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* ParamSpec::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::ParamSpec
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* PlaceholderProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::PlaceholderProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* PlacementGroup::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::PlacementGroup
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* PoolingProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::PoolingProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* ReLUProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::ReLUProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* Resource::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::Resource
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* SigmoidProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::SigmoidProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* SoftmaxProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::SoftmaxProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* SolverProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::SolverProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* SolverState::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::SolverState
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* SplitProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::SplitProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* StoreProto::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::StoreProto
InternalSerializeWithCachedSizesToArray	caffe.pb.cc	/^::google::protobuf::uint8* Strategy::InternalSerializeWithCachedSizesToArray($/;"	f	class:caffe::Strategy
InternalSwap	caffe.pb.cc	/^void BatchNormProto::InternalSwap(BatchNormProto* other) {$/;"	f	class:caffe::BatchNormProto
InternalSwap	caffe.pb.cc	/^void BlobProto::InternalSwap(BlobProto* other) {$/;"	f	class:caffe::BlobProto
InternalSwap	caffe.pb.cc	/^void BlobShape::InternalSwap(BlobShape* other) {$/;"	f	class:caffe::BlobShape
InternalSwap	caffe.pb.cc	/^void BoxingProto::InternalSwap(BoxingProto* other) {$/;"	f	class:caffe::BoxingProto
InternalSwap	caffe.pb.cc	/^void ConcatProto::InternalSwap(ConcatProto* other) {$/;"	f	class:caffe::ConcatProto
InternalSwap	caffe.pb.cc	/^void ConvolutionProto::InternalSwap(ConvolutionProto* other) {$/;"	f	class:caffe::ConvolutionProto
InternalSwap	caffe.pb.cc	/^void CopyProto::InternalSwap(CopyProto* other) {$/;"	f	class:caffe::CopyProto
InternalSwap	caffe.pb.cc	/^void DeviceGroup::InternalSwap(DeviceGroup* other) {$/;"	f	class:caffe::DeviceGroup
InternalSwap	caffe.pb.cc	/^void DeviceSet::InternalSwap(DeviceSet* other) {$/;"	f	class:caffe::DeviceSet
InternalSwap	caffe.pb.cc	/^void FillerParameter::InternalSwap(FillerParameter* other) {$/;"	f	class:caffe::FillerParameter
InternalSwap	caffe.pb.cc	/^void InnerProductProto::InternalSwap(InnerProductProto* other) {$/;"	f	class:caffe::InnerProductProto
InternalSwap	caffe.pb.cc	/^void LRNProto::InternalSwap(LRNProto* other) {$/;"	f	class:caffe::LRNProto
InternalSwap	caffe.pb.cc	/^void LayerProto::InternalSwap(LayerProto* other) {$/;"	f	class:caffe::LayerProto
InternalSwap	caffe.pb.cc	/^void LayerSet::InternalSwap(LayerSet* other) {$/;"	f	class:caffe::LayerSet
InternalSwap	caffe.pb.cc	/^void LoadPartialModelProto::InternalSwap(LoadPartialModelProto* other) {$/;"	f	class:caffe::LoadPartialModelProto
InternalSwap	caffe.pb.cc	/^void LoaderProto::InternalSwap(LoaderProto* other) {$/;"	f	class:caffe::LoaderProto
InternalSwap	caffe.pb.cc	/^void Machine::InternalSwap(Machine* other) {$/;"	f	class:caffe::Machine
InternalSwap	caffe.pb.cc	/^void MachineGroup::InternalSwap(MachineGroup* other) {$/;"	f	class:caffe::MachineGroup
InternalSwap	caffe.pb.cc	/^void ModelUpdateProto::InternalSwap(ModelUpdateProto* other) {$/;"	f	class:caffe::ModelUpdateProto
InternalSwap	caffe.pb.cc	/^void MultinomialLogisticLossProto::InternalSwap(MultinomialLogisticLossProto* other) {$/;"	f	class:caffe::MultinomialLogisticLossProto
InternalSwap	caffe.pb.cc	/^void NetParameter::InternalSwap(NetParameter* other) {$/;"	f	class:caffe::NetParameter
InternalSwap	caffe.pb.cc	/^void NetProto::InternalSwap(NetProto* other) {$/;"	f	class:caffe::NetProto
InternalSwap	caffe.pb.cc	/^void NetState::InternalSwap(NetState* other) {$/;"	f	class:caffe::NetState
InternalSwap	caffe.pb.cc	/^void NullUpdateProto::InternalSwap(NullUpdateProto* other) {$/;"	f	class:caffe::NullUpdateProto
InternalSwap	caffe.pb.cc	/^void ParamSpec::InternalSwap(ParamSpec* other) {$/;"	f	class:caffe::ParamSpec
InternalSwap	caffe.pb.cc	/^void PlaceholderProto::InternalSwap(PlaceholderProto* other) {$/;"	f	class:caffe::PlaceholderProto
InternalSwap	caffe.pb.cc	/^void PlacementGroup::InternalSwap(PlacementGroup* other) {$/;"	f	class:caffe::PlacementGroup
InternalSwap	caffe.pb.cc	/^void PoolingProto::InternalSwap(PoolingProto* other) {$/;"	f	class:caffe::PoolingProto
InternalSwap	caffe.pb.cc	/^void ReLUProto::InternalSwap(ReLUProto* other) {$/;"	f	class:caffe::ReLUProto
InternalSwap	caffe.pb.cc	/^void Resource::InternalSwap(Resource* other) {$/;"	f	class:caffe::Resource
InternalSwap	caffe.pb.cc	/^void SigmoidProto::InternalSwap(SigmoidProto* other) {$/;"	f	class:caffe::SigmoidProto
InternalSwap	caffe.pb.cc	/^void SoftmaxProto::InternalSwap(SoftmaxProto* other) {$/;"	f	class:caffe::SoftmaxProto
InternalSwap	caffe.pb.cc	/^void SolverProto::InternalSwap(SolverProto* other) {$/;"	f	class:caffe::SolverProto
InternalSwap	caffe.pb.cc	/^void SolverState::InternalSwap(SolverState* other) {$/;"	f	class:caffe::SolverState
InternalSwap	caffe.pb.cc	/^void SplitProto::InternalSwap(SplitProto* other) {$/;"	f	class:caffe::SplitProto
InternalSwap	caffe.pb.cc	/^void StoreProto::InternalSwap(StoreProto* other) {$/;"	f	class:caffe::StoreProto
InternalSwap	caffe.pb.cc	/^void Strategy::InternalSwap(Strategy* other) {$/;"	f	class:caffe::Strategy
IsDerivedFrom	logic.hpp	/^struct IsDerivedFrom {$/;"	s	namespace:base
IsInitialized	caffe.pb.cc	/^bool BatchNormProto::IsInitialized() const {$/;"	f	class:caffe::BatchNormProto
IsInitialized	caffe.pb.cc	/^bool BlobProto::IsInitialized() const {$/;"	f	class:caffe::BlobProto
IsInitialized	caffe.pb.cc	/^bool BlobShape::IsInitialized() const {$/;"	f	class:caffe::BlobShape
IsInitialized	caffe.pb.cc	/^bool BoxingProto::IsInitialized() const {$/;"	f	class:caffe::BoxingProto
IsInitialized	caffe.pb.cc	/^bool ConcatProto::IsInitialized() const {$/;"	f	class:caffe::ConcatProto
IsInitialized	caffe.pb.cc	/^bool ConvolutionProto::IsInitialized() const {$/;"	f	class:caffe::ConvolutionProto
IsInitialized	caffe.pb.cc	/^bool CopyProto::IsInitialized() const {$/;"	f	class:caffe::CopyProto
IsInitialized	caffe.pb.cc	/^bool DeviceGroup::IsInitialized() const {$/;"	f	class:caffe::DeviceGroup
IsInitialized	caffe.pb.cc	/^bool DeviceSet::IsInitialized() const {$/;"	f	class:caffe::DeviceSet
IsInitialized	caffe.pb.cc	/^bool FillerParameter::IsInitialized() const {$/;"	f	class:caffe::FillerParameter
IsInitialized	caffe.pb.cc	/^bool InnerProductProto::IsInitialized() const {$/;"	f	class:caffe::InnerProductProto
IsInitialized	caffe.pb.cc	/^bool LRNProto::IsInitialized() const {$/;"	f	class:caffe::LRNProto
IsInitialized	caffe.pb.cc	/^bool LayerProto::IsInitialized() const {$/;"	f	class:caffe::LayerProto
IsInitialized	caffe.pb.cc	/^bool LayerSet::IsInitialized() const {$/;"	f	class:caffe::LayerSet
IsInitialized	caffe.pb.cc	/^bool LoadPartialModelProto::IsInitialized() const {$/;"	f	class:caffe::LoadPartialModelProto
IsInitialized	caffe.pb.cc	/^bool LoaderProto::IsInitialized() const {$/;"	f	class:caffe::LoaderProto
IsInitialized	caffe.pb.cc	/^bool Machine::IsInitialized() const {$/;"	f	class:caffe::Machine
IsInitialized	caffe.pb.cc	/^bool MachineGroup::IsInitialized() const {$/;"	f	class:caffe::MachineGroup
IsInitialized	caffe.pb.cc	/^bool ModelUpdateProto::IsInitialized() const {$/;"	f	class:caffe::ModelUpdateProto
IsInitialized	caffe.pb.cc	/^bool MultinomialLogisticLossProto::IsInitialized() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
IsInitialized	caffe.pb.cc	/^bool NetParameter::IsInitialized() const {$/;"	f	class:caffe::NetParameter
IsInitialized	caffe.pb.cc	/^bool NetProto::IsInitialized() const {$/;"	f	class:caffe::NetProto
IsInitialized	caffe.pb.cc	/^bool NetState::IsInitialized() const {$/;"	f	class:caffe::NetState
IsInitialized	caffe.pb.cc	/^bool NullUpdateProto::IsInitialized() const {$/;"	f	class:caffe::NullUpdateProto
IsInitialized	caffe.pb.cc	/^bool ParamSpec::IsInitialized() const {$/;"	f	class:caffe::ParamSpec
IsInitialized	caffe.pb.cc	/^bool PlaceholderProto::IsInitialized() const {$/;"	f	class:caffe::PlaceholderProto
IsInitialized	caffe.pb.cc	/^bool PlacementGroup::IsInitialized() const {$/;"	f	class:caffe::PlacementGroup
IsInitialized	caffe.pb.cc	/^bool PoolingProto::IsInitialized() const {$/;"	f	class:caffe::PoolingProto
IsInitialized	caffe.pb.cc	/^bool ReLUProto::IsInitialized() const {$/;"	f	class:caffe::ReLUProto
IsInitialized	caffe.pb.cc	/^bool Resource::IsInitialized() const {$/;"	f	class:caffe::Resource
IsInitialized	caffe.pb.cc	/^bool SigmoidProto::IsInitialized() const {$/;"	f	class:caffe::SigmoidProto
IsInitialized	caffe.pb.cc	/^bool SoftmaxProto::IsInitialized() const {$/;"	f	class:caffe::SoftmaxProto
IsInitialized	caffe.pb.cc	/^bool SolverProto::IsInitialized() const {$/;"	f	class:caffe::SolverProto
IsInitialized	caffe.pb.cc	/^bool SolverState::IsInitialized() const {$/;"	f	class:caffe::SolverState
IsInitialized	caffe.pb.cc	/^bool SplitProto::IsInitialized() const {$/;"	f	class:caffe::SplitProto
IsInitialized	caffe.pb.cc	/^bool StoreProto::IsInitialized() const {$/;"	f	class:caffe::StoreProto
IsInitialized	caffe.pb.cc	/^bool Strategy::IsInitialized() const {$/;"	f	class:caffe::Strategy
IsSameType	logic.hpp	/^struct IsSameType : False {};$/;"	s	namespace:base
IsSameType	logic.hpp	/^struct IsSameType<T, T> : True {};$/;"	s	namespace:base
Key	logic.hpp	/^  typedef KeyT Key;$/;"	t	struct:base::Meta
LAYER	graph.cc	/^#define LAYER(/;"	d	file:
LAYER_TYPE_H	layer_type.h	/^#define LAYER_TYPE_H$/;"	d
LOGIC_H	logic.hpp	/^#define LOGIC_H$/;"	d
LRN	graph.h	/^  LRN,$/;"	e	enum:dataflow::NodeType
LRNProto	caffe.pb.cc	/^LRNProto::LRNProto()$/;"	f	class:caffe::LRNProto
LRNProto	caffe.pb.cc	/^LRNProto::LRNProto(const LRNProto& from)$/;"	f	class:caffe::LRNProto
LRNProto	caffe.pb.h	/^class LRNProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.LRNProto) *\/ {$/;"	c	namespace:caffe
LRNProtoDefaultTypeInternal	caffe.pb.cc	/^class LRNProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LRNProto> {$/;"	c	namespace:caffe	file:
LRNProto_Engine	caffe.pb.h	/^enum LRNProto_Engine {$/;"	g	namespace:caffe
LRNProto_Engine_CAFFE	caffe.pb.h	/^  LRNProto_Engine_CAFFE = 1,$/;"	e	enum:caffe::LRNProto_Engine
LRNProto_Engine_CUDNN	caffe.pb.h	/^  LRNProto_Engine_CUDNN = 2$/;"	e	enum:caffe::LRNProto_Engine
LRNProto_Engine_DEFAULT	caffe.pb.h	/^  LRNProto_Engine_DEFAULT = 0,$/;"	e	enum:caffe::LRNProto_Engine
LRNProto_Engine_Engine_ARRAYSIZE	caffe.pb.h	/^const int LRNProto_Engine_Engine_ARRAYSIZE = LRNProto_Engine_Engine_MAX + 1;$/;"	m	namespace:caffe
LRNProto_Engine_Engine_MAX	caffe.pb.h	/^const LRNProto_Engine LRNProto_Engine_Engine_MAX = LRNProto_Engine_CUDNN;$/;"	m	namespace:caffe
LRNProto_Engine_Engine_MIN	caffe.pb.h	/^const LRNProto_Engine LRNProto_Engine_Engine_MIN = LRNProto_Engine_DEFAULT;$/;"	m	namespace:caffe
LRNProto_Engine_IsValid	caffe.pb.cc	/^bool LRNProto_Engine_IsValid(int value) {$/;"	f	namespace:caffe
LRNProto_Engine_Name	caffe.pb.h	/^inline const ::std::string& LRNProto_Engine_Name(LRNProto_Engine value) {$/;"	f	namespace:caffe
LRNProto_Engine_Parse	caffe.pb.h	/^inline bool LRNProto_Engine_Parse($/;"	f	namespace:caffe
LRNProto_Engine_descriptor	caffe.pb.cc	/^const ::google::protobuf::EnumDescriptor* LRNProto_Engine_descriptor() {$/;"	f	namespace:caffe
LRNProto_NormRegion	caffe.pb.h	/^enum LRNProto_NormRegion {$/;"	g	namespace:caffe
LRNProto_NormRegion_ACROSS_CHANNELS	caffe.pb.h	/^  LRNProto_NormRegion_ACROSS_CHANNELS = 0,$/;"	e	enum:caffe::LRNProto_NormRegion
LRNProto_NormRegion_IsValid	caffe.pb.cc	/^bool LRNProto_NormRegion_IsValid(int value) {$/;"	f	namespace:caffe
LRNProto_NormRegion_Name	caffe.pb.h	/^inline const ::std::string& LRNProto_NormRegion_Name(LRNProto_NormRegion value) {$/;"	f	namespace:caffe
LRNProto_NormRegion_NormRegion_ARRAYSIZE	caffe.pb.h	/^const int LRNProto_NormRegion_NormRegion_ARRAYSIZE = LRNProto_NormRegion_NormRegion_MAX + 1;$/;"	m	namespace:caffe
LRNProto_NormRegion_NormRegion_MAX	caffe.pb.h	/^const LRNProto_NormRegion LRNProto_NormRegion_NormRegion_MAX = LRNProto_NormRegion_WITHIN_CHANNEL;$/;"	m	namespace:caffe
LRNProto_NormRegion_NormRegion_MIN	caffe.pb.h	/^const LRNProto_NormRegion LRNProto_NormRegion_NormRegion_MIN = LRNProto_NormRegion_ACROSS_CHANNELS;$/;"	m	namespace:caffe
LRNProto_NormRegion_Parse	caffe.pb.h	/^inline bool LRNProto_NormRegion_Parse($/;"	f	namespace:caffe
LRNProto_NormRegion_WITHIN_CHANNEL	caffe.pb.h	/^  LRNProto_NormRegion_WITHIN_CHANNEL = 1$/;"	e	enum:caffe::LRNProto_NormRegion
LRNProto_NormRegion_descriptor	caffe.pb.cc	/^const ::google::protobuf::EnumDescriptor* LRNProto_NormRegion_descriptor() {$/;"	f	namespace:caffe
LayerProto	caffe.pb.cc	/^LayerProto::LayerProto()$/;"	f	class:caffe::LayerProto
LayerProto	caffe.pb.cc	/^LayerProto::LayerProto(const LayerProto& from)$/;"	f	class:caffe::LayerProto
LayerProto	caffe.pb.h	/^class LayerProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.LayerProto) *\/ {$/;"	c	namespace:caffe
LayerProtoDefaultTypeInternal	caffe.pb.cc	/^class LayerProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LayerProto> {$/;"	c	namespace:caffe	file:
LayerSet	caffe.pb.cc	/^LayerSet::LayerSet()$/;"	f	class:caffe::LayerSet
LayerSet	caffe.pb.cc	/^LayerSet::LayerSet(const LayerSet& from)$/;"	f	class:caffe::LayerSet
LayerSet	caffe.pb.h	/^class LayerSet : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.LayerSet) *\/ {$/;"	c	namespace:caffe
LayerSetDefaultTypeInternal	caffe.pb.cc	/^class LayerSetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LayerSet> {$/;"	c	namespace:caffe	file:
LoadPartialModel	graph.h	/^  LoadPartialModel,$/;"	e	enum:dataflow::NodeType
LoadPartialModelProto	caffe.pb.cc	/^LoadPartialModelProto::LoadPartialModelProto()$/;"	f	class:caffe::LoadPartialModelProto
LoadPartialModelProto	caffe.pb.cc	/^LoadPartialModelProto::LoadPartialModelProto(const LoadPartialModelProto& from)$/;"	f	class:caffe::LoadPartialModelProto
LoadPartialModelProto	caffe.pb.h	/^class LoadPartialModelProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.LoadPartialModelProto) *\/ {$/;"	c	namespace:caffe
LoadPartialModelProtoDefaultTypeInternal	caffe.pb.cc	/^class LoadPartialModelProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoadPartialModelProto> {$/;"	c	namespace:caffe	file:
Loader	graph.h	/^  Loader,$/;"	e	enum:dataflow::NodeType
LoaderProto	caffe.pb.cc	/^LoaderProto::LoaderProto()$/;"	f	class:caffe::LoaderProto
LoaderProto	caffe.pb.cc	/^LoaderProto::LoaderProto(const LoaderProto& from)$/;"	f	class:caffe::LoaderProto
LoaderProto	caffe.pb.h	/^class LoaderProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.LoaderProto) *\/ {$/;"	c	namespace:caffe
LoaderProtoDefaultTypeInternal	caffe.pb.cc	/^class LoaderProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoaderProto> {$/;"	c	namespace:caffe	file:
MAX	caffe.pb.cc	/^const PoolingProto_PoolMethod PoolingProto::MAX;$/;"	m	class:caffe::PoolingProto	file:
MAX	caffe.pb.h	/^  static const PoolMethod MAX =$/;"	m	class:caffe::PoolingProto
Machine	caffe.pb.cc	/^Machine::Machine()$/;"	f	class:caffe::Machine
Machine	caffe.pb.cc	/^Machine::Machine(const Machine& from)$/;"	f	class:caffe::Machine
Machine	caffe.pb.h	/^class Machine : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.Machine) *\/ {$/;"	c	namespace:caffe
MachineDefaultTypeInternal	caffe.pb.cc	/^class MachineDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Machine> {$/;"	c	namespace:caffe	file:
MachineGroup	caffe.pb.cc	/^MachineGroup::MachineGroup()$/;"	f	class:caffe::MachineGroup
MachineGroup	caffe.pb.cc	/^MachineGroup::MachineGroup(const MachineGroup& from)$/;"	f	class:caffe::MachineGroup
MachineGroup	caffe.pb.h	/^class MachineGroup : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.MachineGroup) *\/ {$/;"	c	namespace:caffe
MachineGroupDefaultTypeInternal	caffe.pb.cc	/^class MachineGroupDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MachineGroup> {$/;"	c	namespace:caffe	file:
Map	logic.hpp	/^struct Map<NullType, Proc> {$/;"	s	namespace:base
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::BatchNormProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::BlobProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::BlobShape
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::BoxingProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::ConcatProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::ConvolutionProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::CopyProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::DeviceGroup
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::DeviceSet
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::FillerParameter
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::InnerProductProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::LRNProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::LayerProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::LayerSet
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::LoadPartialModelProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::LoaderProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::Machine
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::MachineGroup
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::ModelUpdateProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::NetParameter
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::NetProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::NetState
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::NullUpdateProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::ParamSpec
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::PlaceholderProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::PlacementGroup
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::PoolingProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::ReLUProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::Resource
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::SigmoidProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::SoftmaxProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::SolverProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::SolverState
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::SplitProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::StoreProto
MaybeArenaPtr	caffe.pb.h	/^  inline void* MaybeArenaPtr() const {$/;"	f	class:caffe::Strategy
MergeFrom	caffe.pb.cc	/^void BatchNormProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::BatchNormProto
MergeFrom	caffe.pb.cc	/^void BatchNormProto::MergeFrom(const BatchNormProto& from) {$/;"	f	class:caffe::BatchNormProto
MergeFrom	caffe.pb.cc	/^void BlobProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::BlobProto
MergeFrom	caffe.pb.cc	/^void BlobProto::MergeFrom(const BlobProto& from) {$/;"	f	class:caffe::BlobProto
MergeFrom	caffe.pb.cc	/^void BlobShape::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::BlobShape
MergeFrom	caffe.pb.cc	/^void BlobShape::MergeFrom(const BlobShape& from) {$/;"	f	class:caffe::BlobShape
MergeFrom	caffe.pb.cc	/^void BoxingProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::BoxingProto
MergeFrom	caffe.pb.cc	/^void BoxingProto::MergeFrom(const BoxingProto& from) {$/;"	f	class:caffe::BoxingProto
MergeFrom	caffe.pb.cc	/^void ConcatProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::ConcatProto
MergeFrom	caffe.pb.cc	/^void ConcatProto::MergeFrom(const ConcatProto& from) {$/;"	f	class:caffe::ConcatProto
MergeFrom	caffe.pb.cc	/^void ConvolutionProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::ConvolutionProto
MergeFrom	caffe.pb.cc	/^void ConvolutionProto::MergeFrom(const ConvolutionProto& from) {$/;"	f	class:caffe::ConvolutionProto
MergeFrom	caffe.pb.cc	/^void CopyProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::CopyProto
MergeFrom	caffe.pb.cc	/^void CopyProto::MergeFrom(const CopyProto& from) {$/;"	f	class:caffe::CopyProto
MergeFrom	caffe.pb.cc	/^void DeviceGroup::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::DeviceGroup
MergeFrom	caffe.pb.cc	/^void DeviceGroup::MergeFrom(const DeviceGroup& from) {$/;"	f	class:caffe::DeviceGroup
MergeFrom	caffe.pb.cc	/^void DeviceSet::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::DeviceSet
MergeFrom	caffe.pb.cc	/^void DeviceSet::MergeFrom(const DeviceSet& from) {$/;"	f	class:caffe::DeviceSet
MergeFrom	caffe.pb.cc	/^void FillerParameter::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::FillerParameter
MergeFrom	caffe.pb.cc	/^void FillerParameter::MergeFrom(const FillerParameter& from) {$/;"	f	class:caffe::FillerParameter
MergeFrom	caffe.pb.cc	/^void InnerProductProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::InnerProductProto
MergeFrom	caffe.pb.cc	/^void InnerProductProto::MergeFrom(const InnerProductProto& from) {$/;"	f	class:caffe::InnerProductProto
MergeFrom	caffe.pb.cc	/^void LRNProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::LRNProto
MergeFrom	caffe.pb.cc	/^void LRNProto::MergeFrom(const LRNProto& from) {$/;"	f	class:caffe::LRNProto
MergeFrom	caffe.pb.cc	/^void LayerProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::LayerProto
MergeFrom	caffe.pb.cc	/^void LayerProto::MergeFrom(const LayerProto& from) {$/;"	f	class:caffe::LayerProto
MergeFrom	caffe.pb.cc	/^void LayerSet::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::LayerSet
MergeFrom	caffe.pb.cc	/^void LayerSet::MergeFrom(const LayerSet& from) {$/;"	f	class:caffe::LayerSet
MergeFrom	caffe.pb.cc	/^void LoadPartialModelProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::LoadPartialModelProto
MergeFrom	caffe.pb.cc	/^void LoadPartialModelProto::MergeFrom(const LoadPartialModelProto& from) {$/;"	f	class:caffe::LoadPartialModelProto
MergeFrom	caffe.pb.cc	/^void LoaderProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::LoaderProto
MergeFrom	caffe.pb.cc	/^void LoaderProto::MergeFrom(const LoaderProto& from) {$/;"	f	class:caffe::LoaderProto
MergeFrom	caffe.pb.cc	/^void Machine::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::Machine
MergeFrom	caffe.pb.cc	/^void Machine::MergeFrom(const Machine& from) {$/;"	f	class:caffe::Machine
MergeFrom	caffe.pb.cc	/^void MachineGroup::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::MachineGroup
MergeFrom	caffe.pb.cc	/^void MachineGroup::MergeFrom(const MachineGroup& from) {$/;"	f	class:caffe::MachineGroup
MergeFrom	caffe.pb.cc	/^void ModelUpdateProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::ModelUpdateProto
MergeFrom	caffe.pb.cc	/^void ModelUpdateProto::MergeFrom(const ModelUpdateProto& from) {$/;"	f	class:caffe::ModelUpdateProto
MergeFrom	caffe.pb.cc	/^void MultinomialLogisticLossProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::MultinomialLogisticLossProto
MergeFrom	caffe.pb.cc	/^void MultinomialLogisticLossProto::MergeFrom(const MultinomialLogisticLossProto& from) {$/;"	f	class:caffe::MultinomialLogisticLossProto
MergeFrom	caffe.pb.cc	/^void NetParameter::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::NetParameter
MergeFrom	caffe.pb.cc	/^void NetParameter::MergeFrom(const NetParameter& from) {$/;"	f	class:caffe::NetParameter
MergeFrom	caffe.pb.cc	/^void NetProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::NetProto
MergeFrom	caffe.pb.cc	/^void NetProto::MergeFrom(const NetProto& from) {$/;"	f	class:caffe::NetProto
MergeFrom	caffe.pb.cc	/^void NetState::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::NetState
MergeFrom	caffe.pb.cc	/^void NetState::MergeFrom(const NetState& from) {$/;"	f	class:caffe::NetState
MergeFrom	caffe.pb.cc	/^void NullUpdateProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::NullUpdateProto
MergeFrom	caffe.pb.cc	/^void NullUpdateProto::MergeFrom(const NullUpdateProto& from) {$/;"	f	class:caffe::NullUpdateProto
MergeFrom	caffe.pb.cc	/^void ParamSpec::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::ParamSpec
MergeFrom	caffe.pb.cc	/^void ParamSpec::MergeFrom(const ParamSpec& from) {$/;"	f	class:caffe::ParamSpec
MergeFrom	caffe.pb.cc	/^void PlaceholderProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::PlaceholderProto
MergeFrom	caffe.pb.cc	/^void PlaceholderProto::MergeFrom(const PlaceholderProto& from) {$/;"	f	class:caffe::PlaceholderProto
MergeFrom	caffe.pb.cc	/^void PlacementGroup::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::PlacementGroup
MergeFrom	caffe.pb.cc	/^void PlacementGroup::MergeFrom(const PlacementGroup& from) {$/;"	f	class:caffe::PlacementGroup
MergeFrom	caffe.pb.cc	/^void PoolingProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::PoolingProto
MergeFrom	caffe.pb.cc	/^void PoolingProto::MergeFrom(const PoolingProto& from) {$/;"	f	class:caffe::PoolingProto
MergeFrom	caffe.pb.cc	/^void ReLUProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::ReLUProto
MergeFrom	caffe.pb.cc	/^void ReLUProto::MergeFrom(const ReLUProto& from) {$/;"	f	class:caffe::ReLUProto
MergeFrom	caffe.pb.cc	/^void Resource::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::Resource
MergeFrom	caffe.pb.cc	/^void Resource::MergeFrom(const Resource& from) {$/;"	f	class:caffe::Resource
MergeFrom	caffe.pb.cc	/^void SigmoidProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::SigmoidProto
MergeFrom	caffe.pb.cc	/^void SigmoidProto::MergeFrom(const SigmoidProto& from) {$/;"	f	class:caffe::SigmoidProto
MergeFrom	caffe.pb.cc	/^void SoftmaxProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::SoftmaxProto
MergeFrom	caffe.pb.cc	/^void SoftmaxProto::MergeFrom(const SoftmaxProto& from) {$/;"	f	class:caffe::SoftmaxProto
MergeFrom	caffe.pb.cc	/^void SolverProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::SolverProto
MergeFrom	caffe.pb.cc	/^void SolverProto::MergeFrom(const SolverProto& from) {$/;"	f	class:caffe::SolverProto
MergeFrom	caffe.pb.cc	/^void SolverState::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::SolverState
MergeFrom	caffe.pb.cc	/^void SolverState::MergeFrom(const SolverState& from) {$/;"	f	class:caffe::SolverState
MergeFrom	caffe.pb.cc	/^void SplitProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::SplitProto
MergeFrom	caffe.pb.cc	/^void SplitProto::MergeFrom(const SplitProto& from) {$/;"	f	class:caffe::SplitProto
MergeFrom	caffe.pb.cc	/^void StoreProto::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::StoreProto
MergeFrom	caffe.pb.cc	/^void StoreProto::MergeFrom(const StoreProto& from) {$/;"	f	class:caffe::StoreProto
MergeFrom	caffe.pb.cc	/^void Strategy::MergeFrom(const ::google::protobuf::Message& from) {$/;"	f	class:caffe::Strategy
MergeFrom	caffe.pb.cc	/^void Strategy::MergeFrom(const Strategy& from) {$/;"	f	class:caffe::Strategy
MergePartialFromCodedStream	caffe.pb.cc	/^bool BatchNormProto::MergePartialFromCodedStream($/;"	f	class:caffe::BatchNormProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool BlobProto::MergePartialFromCodedStream($/;"	f	class:caffe::BlobProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool BlobShape::MergePartialFromCodedStream($/;"	f	class:caffe::BlobShape
MergePartialFromCodedStream	caffe.pb.cc	/^bool BoxingProto::MergePartialFromCodedStream($/;"	f	class:caffe::BoxingProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool ConcatProto::MergePartialFromCodedStream($/;"	f	class:caffe::ConcatProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool ConvolutionProto::MergePartialFromCodedStream($/;"	f	class:caffe::ConvolutionProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool CopyProto::MergePartialFromCodedStream($/;"	f	class:caffe::CopyProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool DeviceGroup::MergePartialFromCodedStream($/;"	f	class:caffe::DeviceGroup
MergePartialFromCodedStream	caffe.pb.cc	/^bool DeviceSet::MergePartialFromCodedStream($/;"	f	class:caffe::DeviceSet
MergePartialFromCodedStream	caffe.pb.cc	/^bool FillerParameter::MergePartialFromCodedStream($/;"	f	class:caffe::FillerParameter
MergePartialFromCodedStream	caffe.pb.cc	/^bool InnerProductProto::MergePartialFromCodedStream($/;"	f	class:caffe::InnerProductProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool LRNProto::MergePartialFromCodedStream($/;"	f	class:caffe::LRNProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool LayerProto::MergePartialFromCodedStream($/;"	f	class:caffe::LayerProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool LayerSet::MergePartialFromCodedStream($/;"	f	class:caffe::LayerSet
MergePartialFromCodedStream	caffe.pb.cc	/^bool LoadPartialModelProto::MergePartialFromCodedStream($/;"	f	class:caffe::LoadPartialModelProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool LoaderProto::MergePartialFromCodedStream($/;"	f	class:caffe::LoaderProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool Machine::MergePartialFromCodedStream($/;"	f	class:caffe::Machine
MergePartialFromCodedStream	caffe.pb.cc	/^bool MachineGroup::MergePartialFromCodedStream($/;"	f	class:caffe::MachineGroup
MergePartialFromCodedStream	caffe.pb.cc	/^bool ModelUpdateProto::MergePartialFromCodedStream($/;"	f	class:caffe::ModelUpdateProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool MultinomialLogisticLossProto::MergePartialFromCodedStream($/;"	f	class:caffe::MultinomialLogisticLossProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool NetParameter::MergePartialFromCodedStream($/;"	f	class:caffe::NetParameter
MergePartialFromCodedStream	caffe.pb.cc	/^bool NetProto::MergePartialFromCodedStream($/;"	f	class:caffe::NetProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool NetState::MergePartialFromCodedStream($/;"	f	class:caffe::NetState
MergePartialFromCodedStream	caffe.pb.cc	/^bool NullUpdateProto::MergePartialFromCodedStream($/;"	f	class:caffe::NullUpdateProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool ParamSpec::MergePartialFromCodedStream($/;"	f	class:caffe::ParamSpec
MergePartialFromCodedStream	caffe.pb.cc	/^bool PlaceholderProto::MergePartialFromCodedStream($/;"	f	class:caffe::PlaceholderProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool PlacementGroup::MergePartialFromCodedStream($/;"	f	class:caffe::PlacementGroup
MergePartialFromCodedStream	caffe.pb.cc	/^bool PoolingProto::MergePartialFromCodedStream($/;"	f	class:caffe::PoolingProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool ReLUProto::MergePartialFromCodedStream($/;"	f	class:caffe::ReLUProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool Resource::MergePartialFromCodedStream($/;"	f	class:caffe::Resource
MergePartialFromCodedStream	caffe.pb.cc	/^bool SigmoidProto::MergePartialFromCodedStream($/;"	f	class:caffe::SigmoidProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool SoftmaxProto::MergePartialFromCodedStream($/;"	f	class:caffe::SoftmaxProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool SolverProto::MergePartialFromCodedStream($/;"	f	class:caffe::SolverProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool SolverState::MergePartialFromCodedStream($/;"	f	class:caffe::SolverState
MergePartialFromCodedStream	caffe.pb.cc	/^bool SplitProto::MergePartialFromCodedStream($/;"	f	class:caffe::SplitProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool StoreProto::MergePartialFromCodedStream($/;"	f	class:caffe::StoreProto
MergePartialFromCodedStream	caffe.pb.cc	/^bool Strategy::MergePartialFromCodedStream($/;"	f	class:caffe::Strategy
Meta	logic.hpp	/^struct Meta {$/;"	s	namespace:base
ModelUpdate	graph.h	/^  ModelUpdate,$/;"	e	enum:dataflow::NodeType
ModelUpdateProto	caffe.pb.cc	/^ModelUpdateProto::ModelUpdateProto()$/;"	f	class:caffe::ModelUpdateProto
ModelUpdateProto	caffe.pb.cc	/^ModelUpdateProto::ModelUpdateProto(const ModelUpdateProto& from)$/;"	f	class:caffe::ModelUpdateProto
ModelUpdateProto	caffe.pb.h	/^class ModelUpdateProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.ModelUpdateProto) *\/ {$/;"	c	namespace:caffe
ModelUpdateProtoDefaultTypeInternal	caffe.pb.cc	/^class ModelUpdateProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModelUpdateProto> {$/;"	c	namespace:caffe	file:
MultinomialLogisticLoss	graph.h	/^  MultinomialLogisticLoss,$/;"	e	enum:dataflow::NodeType
MultinomialLogisticLossProto	caffe.pb.cc	/^MultinomialLogisticLossProto::MultinomialLogisticLossProto()$/;"	f	class:caffe::MultinomialLogisticLossProto
MultinomialLogisticLossProto	caffe.pb.cc	/^MultinomialLogisticLossProto::MultinomialLogisticLossProto(const MultinomialLogisticLossProto& from)$/;"	f	class:caffe::MultinomialLogisticLossProto
MultinomialLogisticLossProto	caffe.pb.h	/^class MultinomialLogisticLossProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.MultinomialLogisticLossProto) *\/ {$/;"	c	namespace:caffe
MultinomialLogisticLossProtoDefaultTypeInternal	caffe.pb.cc	/^class MultinomialLogisticLossProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MultinomialLogisticLossProto> {$/;"	c	namespace:caffe	file:
NESTEROV	caffe.pb.cc	/^const SolverProto_SolverType SolverProto::NESTEROV;$/;"	m	class:caffe::SolverProto	file:
NESTEROV	caffe.pb.h	/^  static const SolverType NESTEROV =$/;"	m	class:caffe::SolverProto
NONE	caffe.pb.h	/^  NONE = 4$/;"	e	enum:caffe::BoxingOp
NetParameter	caffe.pb.cc	/^NetParameter::NetParameter()$/;"	f	class:caffe::NetParameter
NetParameter	caffe.pb.cc	/^NetParameter::NetParameter(const NetParameter& from)$/;"	f	class:caffe::NetParameter
NetParameter	caffe.pb.h	/^class NetParameter : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.NetParameter) *\/ {$/;"	c	namespace:caffe
NetParameterDefaultTypeInternal	caffe.pb.cc	/^class NetParameterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NetParameter> {$/;"	c	namespace:caffe	file:
NetProto	caffe.pb.cc	/^NetProto::NetProto()$/;"	f	class:caffe::NetProto
NetProto	caffe.pb.cc	/^NetProto::NetProto(const NetProto& from)$/;"	f	class:caffe::NetProto
NetProto	caffe.pb.h	/^class NetProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.NetProto) *\/ {$/;"	c	namespace:caffe
NetProtoDefaultTypeInternal	caffe.pb.cc	/^class NetProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NetProto> {$/;"	c	namespace:caffe	file:
NetState	caffe.pb.cc	/^NetState::NetState()$/;"	f	class:caffe::NetState
NetState	caffe.pb.cc	/^NetState::NetState(const NetState& from)$/;"	f	class:caffe::NetState
NetState	caffe.pb.h	/^class NetState : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.NetState) *\/ {$/;"	c	namespace:caffe
NetStateDefaultTypeInternal	caffe.pb.cc	/^class NetStateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NetState> {$/;"	c	namespace:caffe	file:
New	caffe.pb.cc	/^BatchNormProto* BatchNormProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::BatchNormProto
New	caffe.pb.cc	/^BlobProto* BlobProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::BlobProto
New	caffe.pb.cc	/^BlobShape* BlobShape::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::BlobShape
New	caffe.pb.cc	/^BoxingProto* BoxingProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::BoxingProto
New	caffe.pb.cc	/^ConcatProto* ConcatProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::ConcatProto
New	caffe.pb.cc	/^ConvolutionProto* ConvolutionProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::ConvolutionProto
New	caffe.pb.cc	/^CopyProto* CopyProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::CopyProto
New	caffe.pb.cc	/^DeviceGroup* DeviceGroup::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::DeviceGroup
New	caffe.pb.cc	/^DeviceSet* DeviceSet::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::DeviceSet
New	caffe.pb.cc	/^FillerParameter* FillerParameter::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::FillerParameter
New	caffe.pb.cc	/^InnerProductProto* InnerProductProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::InnerProductProto
New	caffe.pb.cc	/^LRNProto* LRNProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::LRNProto
New	caffe.pb.cc	/^LayerProto* LayerProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::LayerProto
New	caffe.pb.cc	/^LayerSet* LayerSet::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::LayerSet
New	caffe.pb.cc	/^LoadPartialModelProto* LoadPartialModelProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::LoadPartialModelProto
New	caffe.pb.cc	/^LoaderProto* LoaderProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::LoaderProto
New	caffe.pb.cc	/^Machine* Machine::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::Machine
New	caffe.pb.cc	/^MachineGroup* MachineGroup::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::MachineGroup
New	caffe.pb.cc	/^ModelUpdateProto* ModelUpdateProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::ModelUpdateProto
New	caffe.pb.cc	/^MultinomialLogisticLossProto* MultinomialLogisticLossProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::MultinomialLogisticLossProto
New	caffe.pb.cc	/^NetParameter* NetParameter::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::NetParameter
New	caffe.pb.cc	/^NetProto* NetProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::NetProto
New	caffe.pb.cc	/^NetState* NetState::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::NetState
New	caffe.pb.cc	/^NullUpdateProto* NullUpdateProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::NullUpdateProto
New	caffe.pb.cc	/^ParamSpec* ParamSpec::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::ParamSpec
New	caffe.pb.cc	/^PlaceholderProto* PlaceholderProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::PlaceholderProto
New	caffe.pb.cc	/^PlacementGroup* PlacementGroup::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::PlacementGroup
New	caffe.pb.cc	/^PoolingProto* PoolingProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::PoolingProto
New	caffe.pb.cc	/^ReLUProto* ReLUProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::ReLUProto
New	caffe.pb.cc	/^Resource* Resource::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::Resource
New	caffe.pb.cc	/^SigmoidProto* SigmoidProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::SigmoidProto
New	caffe.pb.cc	/^SoftmaxProto* SoftmaxProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::SoftmaxProto
New	caffe.pb.cc	/^SolverProto* SolverProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::SolverProto
New	caffe.pb.cc	/^SolverState* SolverState::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::SolverState
New	caffe.pb.cc	/^SplitProto* SplitProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::SplitProto
New	caffe.pb.cc	/^StoreProto* StoreProto::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::StoreProto
New	caffe.pb.cc	/^Strategy* Strategy::New(::google::protobuf::Arena* arena) const {$/;"	f	class:caffe::Strategy
NewObject	object_pool.h	/^  Type* NewObject() {$/;"	f	class:dataflow::ObjectPool
Node	graph.h	/^struct Node {$/;"	s	namespace:dataflow
NodeInfo	graph.h	/^struct NodeInfo {$/;"	s	namespace:dataflow
NodeType	graph.h	/^enum NodeType {$/;"	g	namespace:dataflow
NormRegion	caffe.pb.h	/^  typedef LRNProto_NormRegion NormRegion;$/;"	t	class:caffe::LRNProto
NormRegion_ARRAYSIZE	caffe.pb.cc	/^const int LRNProto::NormRegion_ARRAYSIZE;$/;"	m	class:caffe::LRNProto	file:
NormRegion_ARRAYSIZE	caffe.pb.h	/^  static const int NormRegion_ARRAYSIZE =$/;"	m	class:caffe::LRNProto
NormRegion_IsValid	caffe.pb.h	/^  static inline bool NormRegion_IsValid(int value) {$/;"	f	class:caffe::LRNProto
NormRegion_MAX	caffe.pb.cc	/^const LRNProto_NormRegion LRNProto::NormRegion_MAX;$/;"	m	class:caffe::LRNProto	file:
NormRegion_MAX	caffe.pb.h	/^  static const NormRegion NormRegion_MAX =$/;"	m	class:caffe::LRNProto
NormRegion_MIN	caffe.pb.cc	/^const LRNProto_NormRegion LRNProto::NormRegion_MIN;$/;"	m	class:caffe::LRNProto	file:
NormRegion_MIN	caffe.pb.h	/^  static const NormRegion NormRegion_MIN =$/;"	m	class:caffe::LRNProto
NormRegion_Name	caffe.pb.h	/^  static inline const ::std::string& NormRegion_Name(NormRegion value) {$/;"	f	class:caffe::LRNProto
NormRegion_Parse	caffe.pb.h	/^  static inline bool NormRegion_Parse(const ::std::string& name,$/;"	f	class:caffe::LRNProto
NormRegion_descriptor	caffe.pb.h	/^  NormRegion_descriptor() {$/;"	f	class:caffe::LRNProto
NullType	logic.hpp	/^struct NullType {};$/;"	s	namespace:base
NullUpdate	graph.h	/^  NullUpdate,$/;"	e	enum:dataflow::NodeType
NullUpdateProto	caffe.pb.cc	/^NullUpdateProto::NullUpdateProto()$/;"	f	class:caffe::NullUpdateProto
NullUpdateProto	caffe.pb.cc	/^NullUpdateProto::NullUpdateProto(const NullUpdateProto& from)$/;"	f	class:caffe::NullUpdateProto
NullUpdateProto	caffe.pb.h	/^class NullUpdateProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.NullUpdateProto) *\/ {$/;"	c	namespace:caffe
NullUpdateProtoDefaultTypeInternal	caffe.pb.cc	/^class NullUpdateProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NullUpdateProto> {$/;"	c	namespace:caffe	file:
OBJECT_POOL_H	object_pool.h	/^#define OBJECT_POOL_H$/;"	d
OPS_H	ops.h	/^#define OPS_H$/;"	d
ObjectPool	object_pool.h	/^class ObjectPool {$/;"	c	namespace:dataflow
ObjectPool_Test	object_pool_test.cc	/^class ObjectPool_Test : public ::testing::Test {$/;"	c	namespace:dataflow	file:
Ops	ops.h	/^  Ops(const &) {}$/;"	f	class:dataflow::Ops
Ops	ops.h	/^class Ops {$/;"	c	namespace:dataflow
PERMISSIVE	caffe.pb.cc	/^const ParamSpec_DimCheckMode ParamSpec::PERMISSIVE;$/;"	m	class:caffe::ParamSpec	file:
PERMISSIVE	caffe.pb.h	/^  static const DimCheckMode PERMISSIVE =$/;"	m	class:caffe::ParamSpec
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::BatchNormProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::BlobProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::BlobShape
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::BoxingProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::ConcatProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::ConvolutionProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::CopyProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceGroup
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceSet
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::FillerParameter
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::InnerProductProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::LRNProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::LayerProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::LayerSet
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::LoadPartialModelProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::LoaderProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::Machine
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::MachineGroup
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::ModelUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::MultinomialLogisticLossProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::NetParameter
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::NetProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::NetState
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::NullUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::ParamSpec
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::PlaceholderProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::PlacementGroup
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::PoolingProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::ReLUProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::Resource
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::SigmoidProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::SoftmaxProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::SolverProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::SolverState
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::SplitProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::StoreProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;$/;"	m	class:caffe::Strategy
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::BatchNormProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::BlobProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::BlobShape
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::BoxingProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::ConcatProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::ConvolutionProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::CopyProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceGroup
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceSet
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::FillerParameter
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::InnerProductProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::LRNProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::LayerProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::LayerSet
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::LoadPartialModelProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::LoaderProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::Machine
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::MachineGroup
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::ModelUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::MultinomialLogisticLossProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::NetParameter
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::NetProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::NetState
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::NullUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::ParamSpec
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::PlaceholderProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::PlacementGroup
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::PoolingProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::ReLUProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::Resource
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::SigmoidProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::SoftmaxProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::SolverProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::SolverState
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::SplitProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::StoreProto
PROTOBUF_FINAL	caffe.pb.h	/^      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;$/;"	m	class:caffe::Strategy
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::BatchNormProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::BlobProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::BlobShape
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::BoxingProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::ConcatProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::ConvolutionProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::CopyProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceGroup
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceSet
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::FillerParameter
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::InnerProductProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::LRNProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::LayerProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::LayerSet
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::LoadPartialModelProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::LoaderProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::Machine
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::MachineGroup
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::ModelUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::MultinomialLogisticLossProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::NetParameter
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::NetProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::NetState
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::NullUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::ParamSpec
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::PlaceholderProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::PlacementGroup
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::PoolingProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::ReLUProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::Resource
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::SigmoidProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::SoftmaxProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::SolverProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::SolverState
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::SplitProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::StoreProto
PROTOBUF_FINAL	caffe.pb.h	/^      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;$/;"	m	class:caffe::Strategy
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::BatchNormProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::BlobProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::BlobShape
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::BoxingProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::ConcatProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::ConvolutionProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::CopyProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceGroup
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceSet
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::FillerParameter
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::InnerProductProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::LRNProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::LayerProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::LayerSet
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::LoadPartialModelProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::LoaderProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::Machine
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::MachineGroup
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::ModelUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::MultinomialLogisticLossProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::NetParameter
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::NetProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::NetState
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::NullUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::ParamSpec
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::PlaceholderProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::PlacementGroup
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::PoolingProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::ReLUProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::Resource
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::SigmoidProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::SoftmaxProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::SolverProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::SolverState
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::SplitProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::StoreProto
PROTOBUF_FINAL	caffe.pb.h	/^  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;$/;"	m	class:caffe::Strategy
PROTOBUF_FINAL	caffe.pb.h	/^  BatchNormProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::BatchNormProto
PROTOBUF_FINAL	caffe.pb.h	/^  BlobProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::BlobProto
PROTOBUF_FINAL	caffe.pb.h	/^  BlobShape* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::BlobShape
PROTOBUF_FINAL	caffe.pb.h	/^  BoxingProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::BoxingProto
PROTOBUF_FINAL	caffe.pb.h	/^  ConcatProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::ConcatProto
PROTOBUF_FINAL	caffe.pb.h	/^  ConvolutionProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::ConvolutionProto
PROTOBUF_FINAL	caffe.pb.h	/^  CopyProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::CopyProto
PROTOBUF_FINAL	caffe.pb.h	/^  DeviceGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceGroup
PROTOBUF_FINAL	caffe.pb.h	/^  DeviceSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceSet
PROTOBUF_FINAL	caffe.pb.h	/^  FillerParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::FillerParameter
PROTOBUF_FINAL	caffe.pb.h	/^  InnerProductProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::InnerProductProto
PROTOBUF_FINAL	caffe.pb.h	/^  LRNProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::LRNProto
PROTOBUF_FINAL	caffe.pb.h	/^  LayerProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::LayerProto
PROTOBUF_FINAL	caffe.pb.h	/^  LayerSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::LayerSet
PROTOBUF_FINAL	caffe.pb.h	/^  LoadPartialModelProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::LoadPartialModelProto
PROTOBUF_FINAL	caffe.pb.h	/^  LoaderProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::LoaderProto
PROTOBUF_FINAL	caffe.pb.h	/^  Machine* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::Machine
PROTOBUF_FINAL	caffe.pb.h	/^  MachineGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::MachineGroup
PROTOBUF_FINAL	caffe.pb.h	/^  ModelUpdateProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::ModelUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^  MultinomialLogisticLossProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::MultinomialLogisticLossProto
PROTOBUF_FINAL	caffe.pb.h	/^  NetParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::NetParameter
PROTOBUF_FINAL	caffe.pb.h	/^  NetProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::NetProto
PROTOBUF_FINAL	caffe.pb.h	/^  NetState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::NetState
PROTOBUF_FINAL	caffe.pb.h	/^  NullUpdateProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::NullUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^  ParamSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::ParamSpec
PROTOBUF_FINAL	caffe.pb.h	/^  PlaceholderProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::PlaceholderProto
PROTOBUF_FINAL	caffe.pb.h	/^  PlacementGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::PlacementGroup
PROTOBUF_FINAL	caffe.pb.h	/^  PoolingProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::PoolingProto
PROTOBUF_FINAL	caffe.pb.h	/^  ReLUProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::ReLUProto
PROTOBUF_FINAL	caffe.pb.h	/^  Resource* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::Resource
PROTOBUF_FINAL	caffe.pb.h	/^  SigmoidProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::SigmoidProto
PROTOBUF_FINAL	caffe.pb.h	/^  SoftmaxProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::SoftmaxProto
PROTOBUF_FINAL	caffe.pb.h	/^  SolverProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::SolverProto
PROTOBUF_FINAL	caffe.pb.h	/^  SolverState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::SolverState
PROTOBUF_FINAL	caffe.pb.h	/^  SplitProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::SplitProto
PROTOBUF_FINAL	caffe.pb.h	/^  StoreProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::StoreProto
PROTOBUF_FINAL	caffe.pb.h	/^  Strategy* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;$/;"	m	class:caffe::Strategy
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::BatchNormProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::BlobProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::BlobShape
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::BoxingProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::ConcatProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::ConvolutionProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::CopyProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceGroup
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceSet
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::FillerParameter
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::InnerProductProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::LRNProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::LayerProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::LayerSet
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::LoadPartialModelProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::LoaderProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::Machine
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::MachineGroup
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::ModelUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::MultinomialLogisticLossProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::NetParameter
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::NetProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::NetState
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::NullUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::ParamSpec
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::PlaceholderProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::PlacementGroup
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::PoolingProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::ReLUProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::Resource
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::SigmoidProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::SoftmaxProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::SolverProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::SolverState
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::SplitProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::StoreProto
PROTOBUF_FINAL	caffe.pb.h	/^  bool IsInitialized() const PROTOBUF_FINAL;$/;"	m	class:caffe::Strategy
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::BatchNormProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::BlobProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::BlobShape
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::BoxingProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::ConcatProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::ConvolutionProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::CopyProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceGroup
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceSet
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::FillerParameter
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::InnerProductProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::LRNProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::LayerProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::LayerSet
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::LoadPartialModelProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::LoaderProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::Machine
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::MachineGroup
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::ModelUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::MultinomialLogisticLossProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::NetParameter
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::NetProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::NetState
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::NullUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::ParamSpec
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::PlaceholderProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::PlacementGroup
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::PoolingProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::ReLUProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::Resource
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::SigmoidProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::SoftmaxProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::SolverProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::SolverState
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::SplitProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::StoreProto
PROTOBUF_FINAL	caffe.pb.h	/^  size_t ByteSizeLong() const PROTOBUF_FINAL;$/;"	m	class:caffe::Strategy
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::BatchNormProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::BlobProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::BlobShape
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::BoxingProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::ConcatProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::ConvolutionProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::CopyProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceGroup
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceSet
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::FillerParameter
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::InnerProductProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::LRNProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::LayerProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::LayerSet
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::LoadPartialModelProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::LoaderProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::Machine
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::MachineGroup
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::ModelUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::MultinomialLogisticLossProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::NetParameter
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::NetProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::NetState
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::NullUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::ParamSpec
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::PlaceholderProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::PlacementGroup
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::PoolingProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::ReLUProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::Resource
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::SigmoidProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::SoftmaxProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::SolverProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::SolverState
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::SplitProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::StoreProto
PROTOBUF_FINAL	caffe.pb.h	/^  void Clear() PROTOBUF_FINAL;$/;"	m	class:caffe::Strategy
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::BatchNormProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::BlobProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::BlobShape
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::BoxingProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::ConcatProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::ConvolutionProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::CopyProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceGroup
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceSet
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::FillerParameter
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::InnerProductProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::LRNProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::LayerProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::LayerSet
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::LoadPartialModelProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::LoaderProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::Machine
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::MachineGroup
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::ModelUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::MultinomialLogisticLossProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::NetParameter
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::NetProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::NetState
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::NullUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::ParamSpec
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::PlaceholderProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::PlacementGroup
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::PoolingProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::ReLUProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::Resource
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::SigmoidProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::SoftmaxProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::SolverProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::SolverState
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::SplitProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::StoreProto
PROTOBUF_FINAL	caffe.pb.h	/^  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::Strategy
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::BatchNormProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::BlobProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::BlobShape
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::BoxingProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::ConcatProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::ConvolutionProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::CopyProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceGroup
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceSet
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::FillerParameter
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::InnerProductProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::LRNProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::LayerProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::LayerSet
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::LoadPartialModelProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::LoaderProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::Machine
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::MachineGroup
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::ModelUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::MultinomialLogisticLossProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::NetParameter
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::NetProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::NetState
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::NullUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::ParamSpec
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::PlaceholderProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::PlacementGroup
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::PoolingProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::ReLUProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::Resource
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::SigmoidProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::SoftmaxProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::SolverProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::SolverState
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::SplitProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::StoreProto
PROTOBUF_FINAL	caffe.pb.h	/^  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;$/;"	m	class:caffe::Strategy
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::BatchNormProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::BlobProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::BlobShape
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::BoxingProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::ConcatProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::ConvolutionProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::CopyProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceGroup
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::DeviceSet
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::FillerParameter
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::InnerProductProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::LRNProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::LayerProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::LayerSet
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::LoadPartialModelProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::LoaderProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::Machine
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::MachineGroup
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::ModelUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::MultinomialLogisticLossProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::NetParameter
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::NetProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::NetState
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::NullUpdateProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::ParamSpec
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::PlaceholderProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::PlacementGroup
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::PoolingProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::ReLUProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::Resource
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::SigmoidProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::SoftmaxProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::SolverProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::SolverState
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::SplitProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::StoreProto
PROTOBUF_FINAL	caffe.pb.h	/^  void SetCachedSize(int size) const PROTOBUF_FINAL;$/;"	m	class:caffe::Strategy
PROTOBUF_caffe_2eproto__INCLUDED	caffe.pb.h	/^#define PROTOBUF_caffe_2eproto__INCLUDED$/;"	d
ParallelPolicy	caffe.pb.h	/^enum ParallelPolicy {$/;"	g	namespace:caffe
ParallelPolicy_ARRAYSIZE	caffe.pb.h	/^const int ParallelPolicy_ARRAYSIZE = ParallelPolicy_MAX + 1;$/;"	m	namespace:caffe
ParallelPolicy_IsValid	caffe.pb.cc	/^bool ParallelPolicy_IsValid(int value) {$/;"	f	namespace:caffe
ParallelPolicy_MAX	caffe.pb.h	/^const ParallelPolicy ParallelPolicy_MAX = kModelParallelOnMultipleMachines;$/;"	m	namespace:caffe
ParallelPolicy_MIN	caffe.pb.h	/^const ParallelPolicy ParallelPolicy_MIN = kUnknownParallel;$/;"	m	namespace:caffe
ParallelPolicy_Name	caffe.pb.h	/^inline const ::std::string& ParallelPolicy_Name(ParallelPolicy value) {$/;"	f	namespace:caffe
ParallelPolicy_Parse	caffe.pb.h	/^inline bool ParallelPolicy_Parse($/;"	f	namespace:caffe
ParallelPolicy_descriptor	caffe.pb.cc	/^const ::google::protobuf::EnumDescriptor* ParallelPolicy_descriptor() {$/;"	f	namespace:caffe
ParamSpec	caffe.pb.cc	/^ParamSpec::ParamSpec()$/;"	f	class:caffe::ParamSpec
ParamSpec	caffe.pb.cc	/^ParamSpec::ParamSpec(const ParamSpec& from)$/;"	f	class:caffe::ParamSpec
ParamSpec	caffe.pb.h	/^class ParamSpec : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.ParamSpec) *\/ {$/;"	c	namespace:caffe
ParamSpecDefaultTypeInternal	caffe.pb.cc	/^class ParamSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ParamSpec> {$/;"	c	namespace:caffe	file:
ParamSpec_DimCheckMode	caffe.pb.h	/^enum ParamSpec_DimCheckMode {$/;"	g	namespace:caffe
ParamSpec_DimCheckMode_DimCheckMode_ARRAYSIZE	caffe.pb.h	/^const int ParamSpec_DimCheckMode_DimCheckMode_ARRAYSIZE = ParamSpec_DimCheckMode_DimCheckMode_MAX + 1;$/;"	m	namespace:caffe
ParamSpec_DimCheckMode_DimCheckMode_MAX	caffe.pb.h	/^const ParamSpec_DimCheckMode ParamSpec_DimCheckMode_DimCheckMode_MAX = ParamSpec_DimCheckMode_PERMISSIVE;$/;"	m	namespace:caffe
ParamSpec_DimCheckMode_DimCheckMode_MIN	caffe.pb.h	/^const ParamSpec_DimCheckMode ParamSpec_DimCheckMode_DimCheckMode_MIN = ParamSpec_DimCheckMode_STRICT;$/;"	m	namespace:caffe
ParamSpec_DimCheckMode_IsValid	caffe.pb.cc	/^bool ParamSpec_DimCheckMode_IsValid(int value) {$/;"	f	namespace:caffe
ParamSpec_DimCheckMode_Name	caffe.pb.h	/^inline const ::std::string& ParamSpec_DimCheckMode_Name(ParamSpec_DimCheckMode value) {$/;"	f	namespace:caffe
ParamSpec_DimCheckMode_PERMISSIVE	caffe.pb.h	/^  ParamSpec_DimCheckMode_PERMISSIVE = 1$/;"	e	enum:caffe::ParamSpec_DimCheckMode
ParamSpec_DimCheckMode_Parse	caffe.pb.h	/^inline bool ParamSpec_DimCheckMode_Parse($/;"	f	namespace:caffe
ParamSpec_DimCheckMode_STRICT	caffe.pb.h	/^  ParamSpec_DimCheckMode_STRICT = 0,$/;"	e	enum:caffe::ParamSpec_DimCheckMode
ParamSpec_DimCheckMode_descriptor	caffe.pb.cc	/^const ::google::protobuf::EnumDescriptor* ParamSpec_DimCheckMode_descriptor() {$/;"	f	namespace:caffe
Phase	caffe.pb.h	/^enum Phase {$/;"	g	namespace:caffe
Phase_ARRAYSIZE	caffe.pb.h	/^const int Phase_ARRAYSIZE = Phase_MAX + 1;$/;"	m	namespace:caffe
Phase_IsValid	caffe.pb.cc	/^bool Phase_IsValid(int value) {$/;"	f	namespace:caffe
Phase_MAX	caffe.pb.h	/^const Phase Phase_MAX = TEST;$/;"	m	namespace:caffe
Phase_MIN	caffe.pb.h	/^const Phase Phase_MIN = TRAIN;$/;"	m	namespace:caffe
Phase_Name	caffe.pb.h	/^inline const ::std::string& Phase_Name(Phase value) {$/;"	f	namespace:caffe
Phase_Parse	caffe.pb.h	/^inline bool Phase_Parse($/;"	f	namespace:caffe
Phase_descriptor	caffe.pb.cc	/^const ::google::protobuf::EnumDescriptor* Phase_descriptor() {$/;"	f	namespace:caffe
Placeholder	graph.h	/^  Placeholder$/;"	e	enum:dataflow::NodeType
PlaceholderProto	caffe.pb.cc	/^PlaceholderProto::PlaceholderProto()$/;"	f	class:caffe::PlaceholderProto
PlaceholderProto	caffe.pb.cc	/^PlaceholderProto::PlaceholderProto(const PlaceholderProto& from)$/;"	f	class:caffe::PlaceholderProto
PlaceholderProto	caffe.pb.h	/^class PlaceholderProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.PlaceholderProto) *\/ {$/;"	c	namespace:caffe
PlaceholderProtoDefaultTypeInternal	caffe.pb.cc	/^class PlaceholderProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PlaceholderProto> {$/;"	c	namespace:caffe	file:
PlacementGroup	caffe.pb.cc	/^PlacementGroup::PlacementGroup()$/;"	f	class:caffe::PlacementGroup
PlacementGroup	caffe.pb.cc	/^PlacementGroup::PlacementGroup(const PlacementGroup& from)$/;"	f	class:caffe::PlacementGroup
PlacementGroup	caffe.pb.h	/^class PlacementGroup : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.PlacementGroup) *\/ {$/;"	c	namespace:caffe
PlacementGroupDefaultTypeInternal	caffe.pb.cc	/^class PlacementGroupDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PlacementGroup> {$/;"	c	namespace:caffe	file:
PoolMethod	caffe.pb.h	/^  typedef PoolingProto_PoolMethod PoolMethod;$/;"	t	class:caffe::PoolingProto
PoolMethod_ARRAYSIZE	caffe.pb.cc	/^const int PoolingProto::PoolMethod_ARRAYSIZE;$/;"	m	class:caffe::PoolingProto	file:
PoolMethod_ARRAYSIZE	caffe.pb.h	/^  static const int PoolMethod_ARRAYSIZE =$/;"	m	class:caffe::PoolingProto
PoolMethod_IsValid	caffe.pb.h	/^  static inline bool PoolMethod_IsValid(int value) {$/;"	f	class:caffe::PoolingProto
PoolMethod_MAX	caffe.pb.cc	/^const PoolingProto_PoolMethod PoolingProto::PoolMethod_MAX;$/;"	m	class:caffe::PoolingProto	file:
PoolMethod_MAX	caffe.pb.h	/^  static const PoolMethod PoolMethod_MAX =$/;"	m	class:caffe::PoolingProto
PoolMethod_MIN	caffe.pb.cc	/^const PoolingProto_PoolMethod PoolingProto::PoolMethod_MIN;$/;"	m	class:caffe::PoolingProto	file:
PoolMethod_MIN	caffe.pb.h	/^  static const PoolMethod PoolMethod_MIN =$/;"	m	class:caffe::PoolingProto
PoolMethod_Name	caffe.pb.h	/^  static inline const ::std::string& PoolMethod_Name(PoolMethod value) {$/;"	f	class:caffe::PoolingProto
PoolMethod_Parse	caffe.pb.h	/^  static inline bool PoolMethod_Parse(const ::std::string& name,$/;"	f	class:caffe::PoolingProto
PoolMethod_descriptor	caffe.pb.h	/^  PoolMethod_descriptor() {$/;"	f	class:caffe::PoolingProto
Pooling	graph.h	/^  Pooling,$/;"	e	enum:dataflow::NodeType
PoolingProto	caffe.pb.cc	/^PoolingProto::PoolingProto()$/;"	f	class:caffe::PoolingProto
PoolingProto	caffe.pb.cc	/^PoolingProto::PoolingProto(const PoolingProto& from)$/;"	f	class:caffe::PoolingProto
PoolingProto	caffe.pb.h	/^class PoolingProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.PoolingProto) *\/ {$/;"	c	namespace:caffe
PoolingProtoDefaultTypeInternal	caffe.pb.cc	/^class PoolingProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PoolingProto> {$/;"	c	namespace:caffe	file:
PoolingProto_Engine	caffe.pb.h	/^enum PoolingProto_Engine {$/;"	g	namespace:caffe
PoolingProto_Engine_CAFFE	caffe.pb.h	/^  PoolingProto_Engine_CAFFE = 1,$/;"	e	enum:caffe::PoolingProto_Engine
PoolingProto_Engine_CUDNN	caffe.pb.h	/^  PoolingProto_Engine_CUDNN = 2$/;"	e	enum:caffe::PoolingProto_Engine
PoolingProto_Engine_DEFAULT	caffe.pb.h	/^  PoolingProto_Engine_DEFAULT = 0,$/;"	e	enum:caffe::PoolingProto_Engine
PoolingProto_Engine_Engine_ARRAYSIZE	caffe.pb.h	/^const int PoolingProto_Engine_Engine_ARRAYSIZE = PoolingProto_Engine_Engine_MAX + 1;$/;"	m	namespace:caffe
PoolingProto_Engine_Engine_MAX	caffe.pb.h	/^const PoolingProto_Engine PoolingProto_Engine_Engine_MAX = PoolingProto_Engine_CUDNN;$/;"	m	namespace:caffe
PoolingProto_Engine_Engine_MIN	caffe.pb.h	/^const PoolingProto_Engine PoolingProto_Engine_Engine_MIN = PoolingProto_Engine_DEFAULT;$/;"	m	namespace:caffe
PoolingProto_Engine_IsValid	caffe.pb.cc	/^bool PoolingProto_Engine_IsValid(int value) {$/;"	f	namespace:caffe
PoolingProto_Engine_Name	caffe.pb.h	/^inline const ::std::string& PoolingProto_Engine_Name(PoolingProto_Engine value) {$/;"	f	namespace:caffe
PoolingProto_Engine_Parse	caffe.pb.h	/^inline bool PoolingProto_Engine_Parse($/;"	f	namespace:caffe
PoolingProto_Engine_descriptor	caffe.pb.cc	/^const ::google::protobuf::EnumDescriptor* PoolingProto_Engine_descriptor() {$/;"	f	namespace:caffe
PoolingProto_PoolMethod	caffe.pb.h	/^enum PoolingProto_PoolMethod {$/;"	g	namespace:caffe
PoolingProto_PoolMethod_AVE	caffe.pb.h	/^  PoolingProto_PoolMethod_AVE = 1,$/;"	e	enum:caffe::PoolingProto_PoolMethod
PoolingProto_PoolMethod_IsValid	caffe.pb.cc	/^bool PoolingProto_PoolMethod_IsValid(int value) {$/;"	f	namespace:caffe
PoolingProto_PoolMethod_MAX	caffe.pb.h	/^  PoolingProto_PoolMethod_MAX = 0,$/;"	e	enum:caffe::PoolingProto_PoolMethod
PoolingProto_PoolMethod_Name	caffe.pb.h	/^inline const ::std::string& PoolingProto_PoolMethod_Name(PoolingProto_PoolMethod value) {$/;"	f	namespace:caffe
PoolingProto_PoolMethod_Parse	caffe.pb.h	/^inline bool PoolingProto_PoolMethod_Parse($/;"	f	namespace:caffe
PoolingProto_PoolMethod_PoolMethod_ARRAYSIZE	caffe.pb.h	/^const int PoolingProto_PoolMethod_PoolMethod_ARRAYSIZE = PoolingProto_PoolMethod_PoolMethod_MAX + 1;$/;"	m	namespace:caffe
PoolingProto_PoolMethod_PoolMethod_MAX	caffe.pb.h	/^const PoolingProto_PoolMethod PoolingProto_PoolMethod_PoolMethod_MAX = PoolingProto_PoolMethod_STOCHASTIC;$/;"	m	namespace:caffe
PoolingProto_PoolMethod_PoolMethod_MIN	caffe.pb.h	/^const PoolingProto_PoolMethod PoolingProto_PoolMethod_PoolMethod_MIN = PoolingProto_PoolMethod_MAX;$/;"	m	namespace:caffe
PoolingProto_PoolMethod_STOCHASTIC	caffe.pb.h	/^  PoolingProto_PoolMethod_STOCHASTIC = 2$/;"	e	enum:caffe::PoolingProto_PoolMethod
PoolingProto_PoolMethod_descriptor	caffe.pb.cc	/^const ::google::protobuf::EnumDescriptor* PoolingProto_PoolMethod_descriptor() {$/;"	f	namespace:caffe
ReLU	graph.h	/^  ReLU,$/;"	e	enum:dataflow::NodeType
ReLUProto	caffe.pb.cc	/^ReLUProto::ReLUProto()$/;"	f	class:caffe::ReLUProto
ReLUProto	caffe.pb.cc	/^ReLUProto::ReLUProto(const ReLUProto& from)$/;"	f	class:caffe::ReLUProto
ReLUProto	caffe.pb.h	/^class ReLUProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.ReLUProto) *\/ {$/;"	c	namespace:caffe
ReLUProtoDefaultTypeInternal	caffe.pb.cc	/^class ReLUProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReLUProto> {$/;"	c	namespace:caffe	file:
ReLUProto_Engine	caffe.pb.h	/^enum ReLUProto_Engine {$/;"	g	namespace:caffe
ReLUProto_Engine_CAFFE	caffe.pb.h	/^  ReLUProto_Engine_CAFFE = 1,$/;"	e	enum:caffe::ReLUProto_Engine
ReLUProto_Engine_CUDNN	caffe.pb.h	/^  ReLUProto_Engine_CUDNN = 2$/;"	e	enum:caffe::ReLUProto_Engine
ReLUProto_Engine_DEFAULT	caffe.pb.h	/^  ReLUProto_Engine_DEFAULT = 0,$/;"	e	enum:caffe::ReLUProto_Engine
ReLUProto_Engine_Engine_ARRAYSIZE	caffe.pb.h	/^const int ReLUProto_Engine_Engine_ARRAYSIZE = ReLUProto_Engine_Engine_MAX + 1;$/;"	m	namespace:caffe
ReLUProto_Engine_Engine_MAX	caffe.pb.h	/^const ReLUProto_Engine ReLUProto_Engine_Engine_MAX = ReLUProto_Engine_CUDNN;$/;"	m	namespace:caffe
ReLUProto_Engine_Engine_MIN	caffe.pb.h	/^const ReLUProto_Engine ReLUProto_Engine_Engine_MIN = ReLUProto_Engine_DEFAULT;$/;"	m	namespace:caffe
ReLUProto_Engine_IsValid	caffe.pb.cc	/^bool ReLUProto_Engine_IsValid(int value) {$/;"	f	namespace:caffe
ReLUProto_Engine_Name	caffe.pb.h	/^inline const ::std::string& ReLUProto_Engine_Name(ReLUProto_Engine value) {$/;"	f	namespace:caffe
ReLUProto_Engine_Parse	caffe.pb.h	/^inline bool ReLUProto_Engine_Parse($/;"	f	namespace:caffe
ReLUProto_Engine_descriptor	caffe.pb.cc	/^const ::google::protobuf::EnumDescriptor* ReLUProto_Engine_descriptor() {$/;"	f	namespace:caffe
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t BoxingProto::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::BoxingProto
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t ConcatProto::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::ConcatProto
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t ConvolutionProto::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::ConvolutionProto
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t CopyProto::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::CopyProto
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t DeviceGroup::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::DeviceGroup
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t InnerProductProto::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::InnerProductProto
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t LRNProto::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::LRNProto
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t LoaderProto::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::LoaderProto
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t Machine::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::Machine
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t MachineGroup::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::MachineGroup
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t ModelUpdateProto::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::ModelUpdateProto
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t MultinomialLogisticLossProto::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t NetProto::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::NetProto
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t PlaceholderProto::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::PlaceholderProto
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t PlacementGroup::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::PlacementGroup
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t PoolingProto::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::PoolingProto
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t ReLUProto::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::ReLUProto
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t SigmoidProto::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::SigmoidProto
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t SoftmaxProto::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::SoftmaxProto
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t SolverProto::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::SolverProto
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t SplitProto::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::SplitProto
RequiredFieldsByteSizeFallback	caffe.pb.cc	/^size_t StoreProto::RequiredFieldsByteSizeFallback() const {$/;"	f	class:caffe::StoreProto
Resource	caffe.pb.cc	/^Resource::Resource()$/;"	f	class:caffe::Resource
Resource	caffe.pb.cc	/^Resource::Resource(const Resource& from)$/;"	f	class:caffe::Resource
Resource	caffe.pb.h	/^class Resource : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.Resource) *\/ {$/;"	c	namespace:caffe
ResourceDefaultTypeInternal	caffe.pb.cc	/^class ResourceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Resource> {$/;"	c	namespace:caffe	file:
Result	logic.hpp	/^  typedef Else Result;$/;"	t	struct:base::IfThenElse
Result	logic.hpp	/^  typedef If Result;$/;"	t	struct:base::IfThenElse
SGD	caffe.pb.cc	/^const SolverProto_SolverType SolverProto::SGD;$/;"	m	class:caffe::SolverProto	file:
SGD	caffe.pb.h	/^  static const SolverType SGD =$/;"	m	class:caffe::SolverProto
SPLIT	caffe.pb.h	/^  SPLIT = 3,$/;"	e	enum:caffe::BoxingOp
STOCHASTIC	caffe.pb.cc	/^const PoolingProto_PoolMethod PoolingProto::STOCHASTIC;$/;"	m	class:caffe::PoolingProto	file:
STOCHASTIC	caffe.pb.h	/^  static const PoolMethod STOCHASTIC =$/;"	m	class:caffe::PoolingProto
STRICT	caffe.pb.cc	/^const ParamSpec_DimCheckMode ParamSpec::STRICT;$/;"	m	class:caffe::ParamSpec	file:
STRICT	caffe.pb.h	/^  static const DimCheckMode STRICT =$/;"	m	class:caffe::ParamSpec
STRING	caffe.pb.cc	/^const BlobProto_DataType BlobProto::STRING;$/;"	m	class:caffe::BlobProto	file:
STRING	caffe.pb.h	/^  static const DataType STRING =$/;"	m	class:caffe::BlobProto
SerializeWithCachedSizes	caffe.pb.cc	/^void BatchNormProto::SerializeWithCachedSizes($/;"	f	class:caffe::BatchNormProto
SerializeWithCachedSizes	caffe.pb.cc	/^void BlobProto::SerializeWithCachedSizes($/;"	f	class:caffe::BlobProto
SerializeWithCachedSizes	caffe.pb.cc	/^void BlobShape::SerializeWithCachedSizes($/;"	f	class:caffe::BlobShape
SerializeWithCachedSizes	caffe.pb.cc	/^void BoxingProto::SerializeWithCachedSizes($/;"	f	class:caffe::BoxingProto
SerializeWithCachedSizes	caffe.pb.cc	/^void ConcatProto::SerializeWithCachedSizes($/;"	f	class:caffe::ConcatProto
SerializeWithCachedSizes	caffe.pb.cc	/^void ConvolutionProto::SerializeWithCachedSizes($/;"	f	class:caffe::ConvolutionProto
SerializeWithCachedSizes	caffe.pb.cc	/^void CopyProto::SerializeWithCachedSizes($/;"	f	class:caffe::CopyProto
SerializeWithCachedSizes	caffe.pb.cc	/^void DeviceGroup::SerializeWithCachedSizes($/;"	f	class:caffe::DeviceGroup
SerializeWithCachedSizes	caffe.pb.cc	/^void DeviceSet::SerializeWithCachedSizes($/;"	f	class:caffe::DeviceSet
SerializeWithCachedSizes	caffe.pb.cc	/^void FillerParameter::SerializeWithCachedSizes($/;"	f	class:caffe::FillerParameter
SerializeWithCachedSizes	caffe.pb.cc	/^void InnerProductProto::SerializeWithCachedSizes($/;"	f	class:caffe::InnerProductProto
SerializeWithCachedSizes	caffe.pb.cc	/^void LRNProto::SerializeWithCachedSizes($/;"	f	class:caffe::LRNProto
SerializeWithCachedSizes	caffe.pb.cc	/^void LayerProto::SerializeWithCachedSizes($/;"	f	class:caffe::LayerProto
SerializeWithCachedSizes	caffe.pb.cc	/^void LayerSet::SerializeWithCachedSizes($/;"	f	class:caffe::LayerSet
SerializeWithCachedSizes	caffe.pb.cc	/^void LoadPartialModelProto::SerializeWithCachedSizes($/;"	f	class:caffe::LoadPartialModelProto
SerializeWithCachedSizes	caffe.pb.cc	/^void LoaderProto::SerializeWithCachedSizes($/;"	f	class:caffe::LoaderProto
SerializeWithCachedSizes	caffe.pb.cc	/^void Machine::SerializeWithCachedSizes($/;"	f	class:caffe::Machine
SerializeWithCachedSizes	caffe.pb.cc	/^void MachineGroup::SerializeWithCachedSizes($/;"	f	class:caffe::MachineGroup
SerializeWithCachedSizes	caffe.pb.cc	/^void ModelUpdateProto::SerializeWithCachedSizes($/;"	f	class:caffe::ModelUpdateProto
SerializeWithCachedSizes	caffe.pb.cc	/^void MultinomialLogisticLossProto::SerializeWithCachedSizes($/;"	f	class:caffe::MultinomialLogisticLossProto
SerializeWithCachedSizes	caffe.pb.cc	/^void NetParameter::SerializeWithCachedSizes($/;"	f	class:caffe::NetParameter
SerializeWithCachedSizes	caffe.pb.cc	/^void NetProto::SerializeWithCachedSizes($/;"	f	class:caffe::NetProto
SerializeWithCachedSizes	caffe.pb.cc	/^void NetState::SerializeWithCachedSizes($/;"	f	class:caffe::NetState
SerializeWithCachedSizes	caffe.pb.cc	/^void NullUpdateProto::SerializeWithCachedSizes($/;"	f	class:caffe::NullUpdateProto
SerializeWithCachedSizes	caffe.pb.cc	/^void ParamSpec::SerializeWithCachedSizes($/;"	f	class:caffe::ParamSpec
SerializeWithCachedSizes	caffe.pb.cc	/^void PlaceholderProto::SerializeWithCachedSizes($/;"	f	class:caffe::PlaceholderProto
SerializeWithCachedSizes	caffe.pb.cc	/^void PlacementGroup::SerializeWithCachedSizes($/;"	f	class:caffe::PlacementGroup
SerializeWithCachedSizes	caffe.pb.cc	/^void PoolingProto::SerializeWithCachedSizes($/;"	f	class:caffe::PoolingProto
SerializeWithCachedSizes	caffe.pb.cc	/^void ReLUProto::SerializeWithCachedSizes($/;"	f	class:caffe::ReLUProto
SerializeWithCachedSizes	caffe.pb.cc	/^void Resource::SerializeWithCachedSizes($/;"	f	class:caffe::Resource
SerializeWithCachedSizes	caffe.pb.cc	/^void SigmoidProto::SerializeWithCachedSizes($/;"	f	class:caffe::SigmoidProto
SerializeWithCachedSizes	caffe.pb.cc	/^void SoftmaxProto::SerializeWithCachedSizes($/;"	f	class:caffe::SoftmaxProto
SerializeWithCachedSizes	caffe.pb.cc	/^void SolverProto::SerializeWithCachedSizes($/;"	f	class:caffe::SolverProto
SerializeWithCachedSizes	caffe.pb.cc	/^void SolverState::SerializeWithCachedSizes($/;"	f	class:caffe::SolverState
SerializeWithCachedSizes	caffe.pb.cc	/^void SplitProto::SerializeWithCachedSizes($/;"	f	class:caffe::SplitProto
SerializeWithCachedSizes	caffe.pb.cc	/^void StoreProto::SerializeWithCachedSizes($/;"	f	class:caffe::StoreProto
SerializeWithCachedSizes	caffe.pb.cc	/^void Strategy::SerializeWithCachedSizes($/;"	f	class:caffe::Strategy
SetCachedSize	caffe.pb.cc	/^void BatchNormProto::SetCachedSize(int size) const {$/;"	f	class:caffe::BatchNormProto
SetCachedSize	caffe.pb.cc	/^void BlobProto::SetCachedSize(int size) const {$/;"	f	class:caffe::BlobProto
SetCachedSize	caffe.pb.cc	/^void BlobShape::SetCachedSize(int size) const {$/;"	f	class:caffe::BlobShape
SetCachedSize	caffe.pb.cc	/^void BoxingProto::SetCachedSize(int size) const {$/;"	f	class:caffe::BoxingProto
SetCachedSize	caffe.pb.cc	/^void ConcatProto::SetCachedSize(int size) const {$/;"	f	class:caffe::ConcatProto
SetCachedSize	caffe.pb.cc	/^void ConvolutionProto::SetCachedSize(int size) const {$/;"	f	class:caffe::ConvolutionProto
SetCachedSize	caffe.pb.cc	/^void CopyProto::SetCachedSize(int size) const {$/;"	f	class:caffe::CopyProto
SetCachedSize	caffe.pb.cc	/^void DeviceGroup::SetCachedSize(int size) const {$/;"	f	class:caffe::DeviceGroup
SetCachedSize	caffe.pb.cc	/^void DeviceSet::SetCachedSize(int size) const {$/;"	f	class:caffe::DeviceSet
SetCachedSize	caffe.pb.cc	/^void FillerParameter::SetCachedSize(int size) const {$/;"	f	class:caffe::FillerParameter
SetCachedSize	caffe.pb.cc	/^void InnerProductProto::SetCachedSize(int size) const {$/;"	f	class:caffe::InnerProductProto
SetCachedSize	caffe.pb.cc	/^void LRNProto::SetCachedSize(int size) const {$/;"	f	class:caffe::LRNProto
SetCachedSize	caffe.pb.cc	/^void LayerProto::SetCachedSize(int size) const {$/;"	f	class:caffe::LayerProto
SetCachedSize	caffe.pb.cc	/^void LayerSet::SetCachedSize(int size) const {$/;"	f	class:caffe::LayerSet
SetCachedSize	caffe.pb.cc	/^void LoadPartialModelProto::SetCachedSize(int size) const {$/;"	f	class:caffe::LoadPartialModelProto
SetCachedSize	caffe.pb.cc	/^void LoaderProto::SetCachedSize(int size) const {$/;"	f	class:caffe::LoaderProto
SetCachedSize	caffe.pb.cc	/^void Machine::SetCachedSize(int size) const {$/;"	f	class:caffe::Machine
SetCachedSize	caffe.pb.cc	/^void MachineGroup::SetCachedSize(int size) const {$/;"	f	class:caffe::MachineGroup
SetCachedSize	caffe.pb.cc	/^void ModelUpdateProto::SetCachedSize(int size) const {$/;"	f	class:caffe::ModelUpdateProto
SetCachedSize	caffe.pb.cc	/^void MultinomialLogisticLossProto::SetCachedSize(int size) const {$/;"	f	class:caffe::MultinomialLogisticLossProto
SetCachedSize	caffe.pb.cc	/^void NetParameter::SetCachedSize(int size) const {$/;"	f	class:caffe::NetParameter
SetCachedSize	caffe.pb.cc	/^void NetProto::SetCachedSize(int size) const {$/;"	f	class:caffe::NetProto
SetCachedSize	caffe.pb.cc	/^void NetState::SetCachedSize(int size) const {$/;"	f	class:caffe::NetState
SetCachedSize	caffe.pb.cc	/^void NullUpdateProto::SetCachedSize(int size) const {$/;"	f	class:caffe::NullUpdateProto
SetCachedSize	caffe.pb.cc	/^void ParamSpec::SetCachedSize(int size) const {$/;"	f	class:caffe::ParamSpec
SetCachedSize	caffe.pb.cc	/^void PlaceholderProto::SetCachedSize(int size) const {$/;"	f	class:caffe::PlaceholderProto
SetCachedSize	caffe.pb.cc	/^void PlacementGroup::SetCachedSize(int size) const {$/;"	f	class:caffe::PlacementGroup
SetCachedSize	caffe.pb.cc	/^void PoolingProto::SetCachedSize(int size) const {$/;"	f	class:caffe::PoolingProto
SetCachedSize	caffe.pb.cc	/^void ReLUProto::SetCachedSize(int size) const {$/;"	f	class:caffe::ReLUProto
SetCachedSize	caffe.pb.cc	/^void Resource::SetCachedSize(int size) const {$/;"	f	class:caffe::Resource
SetCachedSize	caffe.pb.cc	/^void SigmoidProto::SetCachedSize(int size) const {$/;"	f	class:caffe::SigmoidProto
SetCachedSize	caffe.pb.cc	/^void SoftmaxProto::SetCachedSize(int size) const {$/;"	f	class:caffe::SoftmaxProto
SetCachedSize	caffe.pb.cc	/^void SolverProto::SetCachedSize(int size) const {$/;"	f	class:caffe::SolverProto
SetCachedSize	caffe.pb.cc	/^void SolverState::SetCachedSize(int size) const {$/;"	f	class:caffe::SolverState
SetCachedSize	caffe.pb.cc	/^void SplitProto::SetCachedSize(int size) const {$/;"	f	class:caffe::SplitProto
SetCachedSize	caffe.pb.cc	/^void StoreProto::SetCachedSize(int size) const {$/;"	f	class:caffe::StoreProto
SetCachedSize	caffe.pb.cc	/^void Strategy::SetCachedSize(int size) const {$/;"	f	class:caffe::Strategy
SetKV	logic.hpp	/^struct SetKV<Key, Val, NullType> {$/;"	s	namespace:base
SetKV	logic.hpp	/^struct SetKV<Key, Val, TypeList<Head, Tail>> {$/;"	s	namespace:base
SetKV	logic.hpp	/^struct SetKV<Key, Val, TypeList<Meta<Key, Val2>, Tail>> {$/;"	s	namespace:base
SetNetDefinition	graph.cc	/^void Graph::SetNetDefinition(const caffe::NetParameter& param) {$/;"	f	class:dataflow::Graph
SetUp	object_pool_test.cc	/^  void SetUp() {}$/;"	f	class:dataflow::ObjectPool_Test
SharedCtor	caffe.pb.cc	/^void BatchNormProto::SharedCtor() {$/;"	f	class:caffe::BatchNormProto
SharedCtor	caffe.pb.cc	/^void BlobProto::SharedCtor() {$/;"	f	class:caffe::BlobProto
SharedCtor	caffe.pb.cc	/^void BlobShape::SharedCtor() {$/;"	f	class:caffe::BlobShape
SharedCtor	caffe.pb.cc	/^void BoxingProto::SharedCtor() {$/;"	f	class:caffe::BoxingProto
SharedCtor	caffe.pb.cc	/^void ConcatProto::SharedCtor() {$/;"	f	class:caffe::ConcatProto
SharedCtor	caffe.pb.cc	/^void ConvolutionProto::SharedCtor() {$/;"	f	class:caffe::ConvolutionProto
SharedCtor	caffe.pb.cc	/^void CopyProto::SharedCtor() {$/;"	f	class:caffe::CopyProto
SharedCtor	caffe.pb.cc	/^void DeviceGroup::SharedCtor() {$/;"	f	class:caffe::DeviceGroup
SharedCtor	caffe.pb.cc	/^void DeviceSet::SharedCtor() {$/;"	f	class:caffe::DeviceSet
SharedCtor	caffe.pb.cc	/^void FillerParameter::SharedCtor() {$/;"	f	class:caffe::FillerParameter
SharedCtor	caffe.pb.cc	/^void InnerProductProto::SharedCtor() {$/;"	f	class:caffe::InnerProductProto
SharedCtor	caffe.pb.cc	/^void LRNProto::SharedCtor() {$/;"	f	class:caffe::LRNProto
SharedCtor	caffe.pb.cc	/^void LayerProto::SharedCtor() {$/;"	f	class:caffe::LayerProto
SharedCtor	caffe.pb.cc	/^void LayerSet::SharedCtor() {$/;"	f	class:caffe::LayerSet
SharedCtor	caffe.pb.cc	/^void LoadPartialModelProto::SharedCtor() {$/;"	f	class:caffe::LoadPartialModelProto
SharedCtor	caffe.pb.cc	/^void LoaderProto::SharedCtor() {$/;"	f	class:caffe::LoaderProto
SharedCtor	caffe.pb.cc	/^void Machine::SharedCtor() {$/;"	f	class:caffe::Machine
SharedCtor	caffe.pb.cc	/^void MachineGroup::SharedCtor() {$/;"	f	class:caffe::MachineGroup
SharedCtor	caffe.pb.cc	/^void ModelUpdateProto::SharedCtor() {$/;"	f	class:caffe::ModelUpdateProto
SharedCtor	caffe.pb.cc	/^void MultinomialLogisticLossProto::SharedCtor() {$/;"	f	class:caffe::MultinomialLogisticLossProto
SharedCtor	caffe.pb.cc	/^void NetParameter::SharedCtor() {$/;"	f	class:caffe::NetParameter
SharedCtor	caffe.pb.cc	/^void NetProto::SharedCtor() {$/;"	f	class:caffe::NetProto
SharedCtor	caffe.pb.cc	/^void NetState::SharedCtor() {$/;"	f	class:caffe::NetState
SharedCtor	caffe.pb.cc	/^void NullUpdateProto::SharedCtor() {$/;"	f	class:caffe::NullUpdateProto
SharedCtor	caffe.pb.cc	/^void ParamSpec::SharedCtor() {$/;"	f	class:caffe::ParamSpec
SharedCtor	caffe.pb.cc	/^void PlaceholderProto::SharedCtor() {$/;"	f	class:caffe::PlaceholderProto
SharedCtor	caffe.pb.cc	/^void PlacementGroup::SharedCtor() {$/;"	f	class:caffe::PlacementGroup
SharedCtor	caffe.pb.cc	/^void PoolingProto::SharedCtor() {$/;"	f	class:caffe::PoolingProto
SharedCtor	caffe.pb.cc	/^void ReLUProto::SharedCtor() {$/;"	f	class:caffe::ReLUProto
SharedCtor	caffe.pb.cc	/^void Resource::SharedCtor() {$/;"	f	class:caffe::Resource
SharedCtor	caffe.pb.cc	/^void SigmoidProto::SharedCtor() {$/;"	f	class:caffe::SigmoidProto
SharedCtor	caffe.pb.cc	/^void SoftmaxProto::SharedCtor() {$/;"	f	class:caffe::SoftmaxProto
SharedCtor	caffe.pb.cc	/^void SolverProto::SharedCtor() {$/;"	f	class:caffe::SolverProto
SharedCtor	caffe.pb.cc	/^void SolverState::SharedCtor() {$/;"	f	class:caffe::SolverState
SharedCtor	caffe.pb.cc	/^void SplitProto::SharedCtor() {$/;"	f	class:caffe::SplitProto
SharedCtor	caffe.pb.cc	/^void StoreProto::SharedCtor() {$/;"	f	class:caffe::StoreProto
SharedCtor	caffe.pb.cc	/^void Strategy::SharedCtor() {$/;"	f	class:caffe::Strategy
SharedDtor	caffe.pb.cc	/^void BatchNormProto::SharedDtor() {$/;"	f	class:caffe::BatchNormProto
SharedDtor	caffe.pb.cc	/^void BlobProto::SharedDtor() {$/;"	f	class:caffe::BlobProto
SharedDtor	caffe.pb.cc	/^void BlobShape::SharedDtor() {$/;"	f	class:caffe::BlobShape
SharedDtor	caffe.pb.cc	/^void BoxingProto::SharedDtor() {$/;"	f	class:caffe::BoxingProto
SharedDtor	caffe.pb.cc	/^void ConcatProto::SharedDtor() {$/;"	f	class:caffe::ConcatProto
SharedDtor	caffe.pb.cc	/^void ConvolutionProto::SharedDtor() {$/;"	f	class:caffe::ConvolutionProto
SharedDtor	caffe.pb.cc	/^void CopyProto::SharedDtor() {$/;"	f	class:caffe::CopyProto
SharedDtor	caffe.pb.cc	/^void DeviceGroup::SharedDtor() {$/;"	f	class:caffe::DeviceGroup
SharedDtor	caffe.pb.cc	/^void DeviceSet::SharedDtor() {$/;"	f	class:caffe::DeviceSet
SharedDtor	caffe.pb.cc	/^void FillerParameter::SharedDtor() {$/;"	f	class:caffe::FillerParameter
SharedDtor	caffe.pb.cc	/^void InnerProductProto::SharedDtor() {$/;"	f	class:caffe::InnerProductProto
SharedDtor	caffe.pb.cc	/^void LRNProto::SharedDtor() {$/;"	f	class:caffe::LRNProto
SharedDtor	caffe.pb.cc	/^void LayerProto::SharedDtor() {$/;"	f	class:caffe::LayerProto
SharedDtor	caffe.pb.cc	/^void LayerSet::SharedDtor() {$/;"	f	class:caffe::LayerSet
SharedDtor	caffe.pb.cc	/^void LoadPartialModelProto::SharedDtor() {$/;"	f	class:caffe::LoadPartialModelProto
SharedDtor	caffe.pb.cc	/^void LoaderProto::SharedDtor() {$/;"	f	class:caffe::LoaderProto
SharedDtor	caffe.pb.cc	/^void Machine::SharedDtor() {$/;"	f	class:caffe::Machine
SharedDtor	caffe.pb.cc	/^void MachineGroup::SharedDtor() {$/;"	f	class:caffe::MachineGroup
SharedDtor	caffe.pb.cc	/^void ModelUpdateProto::SharedDtor() {$/;"	f	class:caffe::ModelUpdateProto
SharedDtor	caffe.pb.cc	/^void MultinomialLogisticLossProto::SharedDtor() {$/;"	f	class:caffe::MultinomialLogisticLossProto
SharedDtor	caffe.pb.cc	/^void NetParameter::SharedDtor() {$/;"	f	class:caffe::NetParameter
SharedDtor	caffe.pb.cc	/^void NetProto::SharedDtor() {$/;"	f	class:caffe::NetProto
SharedDtor	caffe.pb.cc	/^void NetState::SharedDtor() {$/;"	f	class:caffe::NetState
SharedDtor	caffe.pb.cc	/^void NullUpdateProto::SharedDtor() {$/;"	f	class:caffe::NullUpdateProto
SharedDtor	caffe.pb.cc	/^void ParamSpec::SharedDtor() {$/;"	f	class:caffe::ParamSpec
SharedDtor	caffe.pb.cc	/^void PlaceholderProto::SharedDtor() {$/;"	f	class:caffe::PlaceholderProto
SharedDtor	caffe.pb.cc	/^void PlacementGroup::SharedDtor() {$/;"	f	class:caffe::PlacementGroup
SharedDtor	caffe.pb.cc	/^void PoolingProto::SharedDtor() {$/;"	f	class:caffe::PoolingProto
SharedDtor	caffe.pb.cc	/^void ReLUProto::SharedDtor() {$/;"	f	class:caffe::ReLUProto
SharedDtor	caffe.pb.cc	/^void Resource::SharedDtor() {$/;"	f	class:caffe::Resource
SharedDtor	caffe.pb.cc	/^void SigmoidProto::SharedDtor() {$/;"	f	class:caffe::SigmoidProto
SharedDtor	caffe.pb.cc	/^void SoftmaxProto::SharedDtor() {$/;"	f	class:caffe::SoftmaxProto
SharedDtor	caffe.pb.cc	/^void SolverProto::SharedDtor() {$/;"	f	class:caffe::SolverProto
SharedDtor	caffe.pb.cc	/^void SolverState::SharedDtor() {$/;"	f	class:caffe::SolverState
SharedDtor	caffe.pb.cc	/^void SplitProto::SharedDtor() {$/;"	f	class:caffe::SplitProto
SharedDtor	caffe.pb.cc	/^void StoreProto::SharedDtor() {$/;"	f	class:caffe::StoreProto
SharedDtor	caffe.pb.cc	/^void Strategy::SharedDtor() {$/;"	f	class:caffe::Strategy
Shutdown	caffe.pb.cc	/^void TableStruct::Shutdown() {$/;"	f	class:caffe::protobuf_caffe_2eproto::TableStruct
Sigmoid	graph.h	/^  Sigmoid,$/;"	e	enum:dataflow::NodeType
SigmoidProto	caffe.pb.cc	/^SigmoidProto::SigmoidProto()$/;"	f	class:caffe::SigmoidProto
SigmoidProto	caffe.pb.cc	/^SigmoidProto::SigmoidProto(const SigmoidProto& from)$/;"	f	class:caffe::SigmoidProto
SigmoidProto	caffe.pb.h	/^class SigmoidProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.SigmoidProto) *\/ {$/;"	c	namespace:caffe
SigmoidProtoDefaultTypeInternal	caffe.pb.cc	/^class SigmoidProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SigmoidProto> {$/;"	c	namespace:caffe	file:
SigmoidProto_Engine	caffe.pb.h	/^enum SigmoidProto_Engine {$/;"	g	namespace:caffe
SigmoidProto_Engine_CAFFE	caffe.pb.h	/^  SigmoidProto_Engine_CAFFE = 1,$/;"	e	enum:caffe::SigmoidProto_Engine
SigmoidProto_Engine_CUDNN	caffe.pb.h	/^  SigmoidProto_Engine_CUDNN = 2$/;"	e	enum:caffe::SigmoidProto_Engine
SigmoidProto_Engine_DEFAULT	caffe.pb.h	/^  SigmoidProto_Engine_DEFAULT = 0,$/;"	e	enum:caffe::SigmoidProto_Engine
SigmoidProto_Engine_Engine_ARRAYSIZE	caffe.pb.h	/^const int SigmoidProto_Engine_Engine_ARRAYSIZE = SigmoidProto_Engine_Engine_MAX + 1;$/;"	m	namespace:caffe
SigmoidProto_Engine_Engine_MAX	caffe.pb.h	/^const SigmoidProto_Engine SigmoidProto_Engine_Engine_MAX = SigmoidProto_Engine_CUDNN;$/;"	m	namespace:caffe
SigmoidProto_Engine_Engine_MIN	caffe.pb.h	/^const SigmoidProto_Engine SigmoidProto_Engine_Engine_MIN = SigmoidProto_Engine_DEFAULT;$/;"	m	namespace:caffe
SigmoidProto_Engine_IsValid	caffe.pb.cc	/^bool SigmoidProto_Engine_IsValid(int value) {$/;"	f	namespace:caffe
SigmoidProto_Engine_Name	caffe.pb.h	/^inline const ::std::string& SigmoidProto_Engine_Name(SigmoidProto_Engine value) {$/;"	f	namespace:caffe
SigmoidProto_Engine_Parse	caffe.pb.h	/^inline bool SigmoidProto_Engine_Parse($/;"	f	namespace:caffe
SigmoidProto_Engine_descriptor	caffe.pb.cc	/^const ::google::protobuf::EnumDescriptor* SigmoidProto_Engine_descriptor() {$/;"	f	namespace:caffe
Softmax	graph.h	/^  Softmax,$/;"	e	enum:dataflow::NodeType
SoftmaxProto	caffe.pb.cc	/^SoftmaxProto::SoftmaxProto()$/;"	f	class:caffe::SoftmaxProto
SoftmaxProto	caffe.pb.cc	/^SoftmaxProto::SoftmaxProto(const SoftmaxProto& from)$/;"	f	class:caffe::SoftmaxProto
SoftmaxProto	caffe.pb.h	/^class SoftmaxProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.SoftmaxProto) *\/ {$/;"	c	namespace:caffe
SoftmaxProtoDefaultTypeInternal	caffe.pb.cc	/^class SoftmaxProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SoftmaxProto> {$/;"	c	namespace:caffe	file:
SoftmaxProto_Engine	caffe.pb.h	/^enum SoftmaxProto_Engine {$/;"	g	namespace:caffe
SoftmaxProto_Engine_CAFFE	caffe.pb.h	/^  SoftmaxProto_Engine_CAFFE = 1,$/;"	e	enum:caffe::SoftmaxProto_Engine
SoftmaxProto_Engine_CUDNN	caffe.pb.h	/^  SoftmaxProto_Engine_CUDNN = 2$/;"	e	enum:caffe::SoftmaxProto_Engine
SoftmaxProto_Engine_DEFAULT	caffe.pb.h	/^  SoftmaxProto_Engine_DEFAULT = 0,$/;"	e	enum:caffe::SoftmaxProto_Engine
SoftmaxProto_Engine_Engine_ARRAYSIZE	caffe.pb.h	/^const int SoftmaxProto_Engine_Engine_ARRAYSIZE = SoftmaxProto_Engine_Engine_MAX + 1;$/;"	m	namespace:caffe
SoftmaxProto_Engine_Engine_MAX	caffe.pb.h	/^const SoftmaxProto_Engine SoftmaxProto_Engine_Engine_MAX = SoftmaxProto_Engine_CUDNN;$/;"	m	namespace:caffe
SoftmaxProto_Engine_Engine_MIN	caffe.pb.h	/^const SoftmaxProto_Engine SoftmaxProto_Engine_Engine_MIN = SoftmaxProto_Engine_DEFAULT;$/;"	m	namespace:caffe
SoftmaxProto_Engine_IsValid	caffe.pb.cc	/^bool SoftmaxProto_Engine_IsValid(int value) {$/;"	f	namespace:caffe
SoftmaxProto_Engine_Name	caffe.pb.h	/^inline const ::std::string& SoftmaxProto_Engine_Name(SoftmaxProto_Engine value) {$/;"	f	namespace:caffe
SoftmaxProto_Engine_Parse	caffe.pb.h	/^inline bool SoftmaxProto_Engine_Parse($/;"	f	namespace:caffe
SoftmaxProto_Engine_descriptor	caffe.pb.cc	/^const ::google::protobuf::EnumDescriptor* SoftmaxProto_Engine_descriptor() {$/;"	f	namespace:caffe
SolverMode	caffe.pb.h	/^  typedef SolverProto_SolverMode SolverMode;$/;"	t	class:caffe::SolverProto
SolverMode_ARRAYSIZE	caffe.pb.cc	/^const int SolverProto::SolverMode_ARRAYSIZE;$/;"	m	class:caffe::SolverProto	file:
SolverMode_ARRAYSIZE	caffe.pb.h	/^  static const int SolverMode_ARRAYSIZE =$/;"	m	class:caffe::SolverProto
SolverMode_IsValid	caffe.pb.h	/^  static inline bool SolverMode_IsValid(int value) {$/;"	f	class:caffe::SolverProto
SolverMode_MAX	caffe.pb.cc	/^const SolverProto_SolverMode SolverProto::SolverMode_MAX;$/;"	m	class:caffe::SolverProto	file:
SolverMode_MAX	caffe.pb.h	/^  static const SolverMode SolverMode_MAX =$/;"	m	class:caffe::SolverProto
SolverMode_MIN	caffe.pb.cc	/^const SolverProto_SolverMode SolverProto::SolverMode_MIN;$/;"	m	class:caffe::SolverProto	file:
SolverMode_MIN	caffe.pb.h	/^  static const SolverMode SolverMode_MIN =$/;"	m	class:caffe::SolverProto
SolverMode_Name	caffe.pb.h	/^  static inline const ::std::string& SolverMode_Name(SolverMode value) {$/;"	f	class:caffe::SolverProto
SolverMode_Parse	caffe.pb.h	/^  static inline bool SolverMode_Parse(const ::std::string& name,$/;"	f	class:caffe::SolverProto
SolverMode_descriptor	caffe.pb.h	/^  SolverMode_descriptor() {$/;"	f	class:caffe::SolverProto
SolverProto	caffe.pb.cc	/^SolverProto::SolverProto()$/;"	f	class:caffe::SolverProto
SolverProto	caffe.pb.cc	/^SolverProto::SolverProto(const SolverProto& from)$/;"	f	class:caffe::SolverProto
SolverProto	caffe.pb.h	/^class SolverProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.SolverProto) *\/ {$/;"	c	namespace:caffe
SolverProtoDefaultTypeInternal	caffe.pb.cc	/^class SolverProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SolverProto> {$/;"	c	namespace:caffe	file:
SolverProto_SolverMode	caffe.pb.h	/^enum SolverProto_SolverMode {$/;"	g	namespace:caffe
SolverProto_SolverMode_CPU	caffe.pb.h	/^  SolverProto_SolverMode_CPU = 0,$/;"	e	enum:caffe::SolverProto_SolverMode
SolverProto_SolverMode_GPU	caffe.pb.h	/^  SolverProto_SolverMode_GPU = 1$/;"	e	enum:caffe::SolverProto_SolverMode
SolverProto_SolverMode_IsValid	caffe.pb.cc	/^bool SolverProto_SolverMode_IsValid(int value) {$/;"	f	namespace:caffe
SolverProto_SolverMode_Name	caffe.pb.h	/^inline const ::std::string& SolverProto_SolverMode_Name(SolverProto_SolverMode value) {$/;"	f	namespace:caffe
SolverProto_SolverMode_Parse	caffe.pb.h	/^inline bool SolverProto_SolverMode_Parse($/;"	f	namespace:caffe
SolverProto_SolverMode_SolverMode_ARRAYSIZE	caffe.pb.h	/^const int SolverProto_SolverMode_SolverMode_ARRAYSIZE = SolverProto_SolverMode_SolverMode_MAX + 1;$/;"	m	namespace:caffe
SolverProto_SolverMode_SolverMode_MAX	caffe.pb.h	/^const SolverProto_SolverMode SolverProto_SolverMode_SolverMode_MAX = SolverProto_SolverMode_GPU;$/;"	m	namespace:caffe
SolverProto_SolverMode_SolverMode_MIN	caffe.pb.h	/^const SolverProto_SolverMode SolverProto_SolverMode_SolverMode_MIN = SolverProto_SolverMode_CPU;$/;"	m	namespace:caffe
SolverProto_SolverMode_descriptor	caffe.pb.cc	/^const ::google::protobuf::EnumDescriptor* SolverProto_SolverMode_descriptor() {$/;"	f	namespace:caffe
SolverProto_SolverType	caffe.pb.h	/^enum SolverProto_SolverType {$/;"	g	namespace:caffe
SolverProto_SolverType_ADAGRAD	caffe.pb.h	/^  SolverProto_SolverType_ADAGRAD = 2$/;"	e	enum:caffe::SolverProto_SolverType
SolverProto_SolverType_IsValid	caffe.pb.cc	/^bool SolverProto_SolverType_IsValid(int value) {$/;"	f	namespace:caffe
SolverProto_SolverType_NESTEROV	caffe.pb.h	/^  SolverProto_SolverType_NESTEROV = 1,$/;"	e	enum:caffe::SolverProto_SolverType
SolverProto_SolverType_Name	caffe.pb.h	/^inline const ::std::string& SolverProto_SolverType_Name(SolverProto_SolverType value) {$/;"	f	namespace:caffe
SolverProto_SolverType_Parse	caffe.pb.h	/^inline bool SolverProto_SolverType_Parse($/;"	f	namespace:caffe
SolverProto_SolverType_SGD	caffe.pb.h	/^  SolverProto_SolverType_SGD = 0,$/;"	e	enum:caffe::SolverProto_SolverType
SolverProto_SolverType_SolverType_ARRAYSIZE	caffe.pb.h	/^const int SolverProto_SolverType_SolverType_ARRAYSIZE = SolverProto_SolverType_SolverType_MAX + 1;$/;"	m	namespace:caffe
SolverProto_SolverType_SolverType_MAX	caffe.pb.h	/^const SolverProto_SolverType SolverProto_SolverType_SolverType_MAX = SolverProto_SolverType_ADAGRAD;$/;"	m	namespace:caffe
SolverProto_SolverType_SolverType_MIN	caffe.pb.h	/^const SolverProto_SolverType SolverProto_SolverType_SolverType_MIN = SolverProto_SolverType_SGD;$/;"	m	namespace:caffe
SolverProto_SolverType_descriptor	caffe.pb.cc	/^const ::google::protobuf::EnumDescriptor* SolverProto_SolverType_descriptor() {$/;"	f	namespace:caffe
SolverState	caffe.pb.cc	/^SolverState::SolverState()$/;"	f	class:caffe::SolverState
SolverState	caffe.pb.cc	/^SolverState::SolverState(const SolverState& from)$/;"	f	class:caffe::SolverState
SolverState	caffe.pb.h	/^class SolverState : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.SolverState) *\/ {$/;"	c	namespace:caffe
SolverStateDefaultTypeInternal	caffe.pb.cc	/^class SolverStateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SolverState> {$/;"	c	namespace:caffe	file:
SolverType	caffe.pb.h	/^  typedef SolverProto_SolverType SolverType;$/;"	t	class:caffe::SolverProto
SolverType_ARRAYSIZE	caffe.pb.cc	/^const int SolverProto::SolverType_ARRAYSIZE;$/;"	m	class:caffe::SolverProto	file:
SolverType_ARRAYSIZE	caffe.pb.h	/^  static const int SolverType_ARRAYSIZE =$/;"	m	class:caffe::SolverProto
SolverType_IsValid	caffe.pb.h	/^  static inline bool SolverType_IsValid(int value) {$/;"	f	class:caffe::SolverProto
SolverType_MAX	caffe.pb.cc	/^const SolverProto_SolverType SolverProto::SolverType_MAX;$/;"	m	class:caffe::SolverProto	file:
SolverType_MAX	caffe.pb.h	/^  static const SolverType SolverType_MAX =$/;"	m	class:caffe::SolverProto
SolverType_MIN	caffe.pb.cc	/^const SolverProto_SolverType SolverProto::SolverType_MIN;$/;"	m	class:caffe::SolverProto	file:
SolverType_MIN	caffe.pb.h	/^  static const SolverType SolverType_MIN =$/;"	m	class:caffe::SolverProto
SolverType_Name	caffe.pb.h	/^  static inline const ::std::string& SolverType_Name(SolverType value) {$/;"	f	class:caffe::SolverProto
SolverType_Parse	caffe.pb.h	/^  static inline bool SolverType_Parse(const ::std::string& name,$/;"	f	class:caffe::SolverProto
SolverType_descriptor	caffe.pb.h	/^  SolverType_descriptor() {$/;"	f	class:caffe::SolverProto
Split	graph.h	/^  Split,$/;"	e	enum:dataflow::NodeType
SplitProto	caffe.pb.cc	/^SplitProto::SplitProto()$/;"	f	class:caffe::SplitProto
SplitProto	caffe.pb.cc	/^SplitProto::SplitProto(const SplitProto& from)$/;"	f	class:caffe::SplitProto
SplitProto	caffe.pb.h	/^class SplitProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.SplitProto) *\/ {$/;"	c	namespace:caffe
SplitProtoDefaultTypeInternal	caffe.pb.cc	/^class SplitProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SplitProto> {$/;"	c	namespace:caffe	file:
StaticDescriptorInitializer	caffe.pb.cc	/^  StaticDescriptorInitializer() {$/;"	f	struct:caffe::protobuf_caffe_2eproto::StaticDescriptorInitializer
StaticDescriptorInitializer	caffe.pb.cc	/^struct StaticDescriptorInitializer {$/;"	s	namespace:caffe::protobuf_caffe_2eproto	file:
StaticPrint	logic.hpp	/^struct StaticPrint {$/;"	s	namespace:base
Store	graph.h	/^  Store,$/;"	e	enum:dataflow::NodeType
StoreProto	caffe.pb.cc	/^StoreProto::StoreProto()$/;"	f	class:caffe::StoreProto
StoreProto	caffe.pb.cc	/^StoreProto::StoreProto(const StoreProto& from)$/;"	f	class:caffe::StoreProto
StoreProto	caffe.pb.h	/^class StoreProto : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.StoreProto) *\/ {$/;"	c	namespace:caffe
StoreProtoDefaultTypeInternal	caffe.pb.cc	/^class StoreProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StoreProto> {$/;"	c	namespace:caffe	file:
StoreProto_Engine	caffe.pb.h	/^enum StoreProto_Engine {$/;"	g	namespace:caffe
StoreProto_Engine_CAFFE	caffe.pb.h	/^  StoreProto_Engine_CAFFE = 1,$/;"	e	enum:caffe::StoreProto_Engine
StoreProto_Engine_CUDNN	caffe.pb.h	/^  StoreProto_Engine_CUDNN = 2$/;"	e	enum:caffe::StoreProto_Engine
StoreProto_Engine_DEFAULT	caffe.pb.h	/^  StoreProto_Engine_DEFAULT = 0,$/;"	e	enum:caffe::StoreProto_Engine
StoreProto_Engine_Engine_ARRAYSIZE	caffe.pb.h	/^const int StoreProto_Engine_Engine_ARRAYSIZE = StoreProto_Engine_Engine_MAX + 1;$/;"	m	namespace:caffe
StoreProto_Engine_Engine_MAX	caffe.pb.h	/^const StoreProto_Engine StoreProto_Engine_Engine_MAX = StoreProto_Engine_CUDNN;$/;"	m	namespace:caffe
StoreProto_Engine_Engine_MIN	caffe.pb.h	/^const StoreProto_Engine StoreProto_Engine_Engine_MIN = StoreProto_Engine_DEFAULT;$/;"	m	namespace:caffe
StoreProto_Engine_IsValid	caffe.pb.cc	/^bool StoreProto_Engine_IsValid(int value) {$/;"	f	namespace:caffe
StoreProto_Engine_Name	caffe.pb.h	/^inline const ::std::string& StoreProto_Engine_Name(StoreProto_Engine value) {$/;"	f	namespace:caffe
StoreProto_Engine_Parse	caffe.pb.h	/^inline bool StoreProto_Engine_Parse($/;"	f	namespace:caffe
StoreProto_Engine_descriptor	caffe.pb.cc	/^const ::google::protobuf::EnumDescriptor* StoreProto_Engine_descriptor() {$/;"	f	namespace:caffe
Strategy	caffe.pb.cc	/^Strategy::Strategy()$/;"	f	class:caffe::Strategy
Strategy	caffe.pb.cc	/^Strategy::Strategy(const Strategy& from)$/;"	f	class:caffe::Strategy
Strategy	caffe.pb.h	/^class Strategy : public ::google::protobuf::Message \/* @@protoc_insertion_point(class_definition:caffe.Strategy) *\/ {$/;"	c	namespace:caffe
StrategyDefaultTypeInternal	caffe.pb.cc	/^class StrategyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Strategy> {$/;"	c	namespace:caffe	file:
Swap	caffe.pb.cc	/^void BatchNormProto::Swap(BatchNormProto* other) {$/;"	f	class:caffe::BatchNormProto
Swap	caffe.pb.cc	/^void BlobProto::Swap(BlobProto* other) {$/;"	f	class:caffe::BlobProto
Swap	caffe.pb.cc	/^void BlobShape::Swap(BlobShape* other) {$/;"	f	class:caffe::BlobShape
Swap	caffe.pb.cc	/^void BoxingProto::Swap(BoxingProto* other) {$/;"	f	class:caffe::BoxingProto
Swap	caffe.pb.cc	/^void ConcatProto::Swap(ConcatProto* other) {$/;"	f	class:caffe::ConcatProto
Swap	caffe.pb.cc	/^void ConvolutionProto::Swap(ConvolutionProto* other) {$/;"	f	class:caffe::ConvolutionProto
Swap	caffe.pb.cc	/^void CopyProto::Swap(CopyProto* other) {$/;"	f	class:caffe::CopyProto
Swap	caffe.pb.cc	/^void DeviceGroup::Swap(DeviceGroup* other) {$/;"	f	class:caffe::DeviceGroup
Swap	caffe.pb.cc	/^void DeviceSet::Swap(DeviceSet* other) {$/;"	f	class:caffe::DeviceSet
Swap	caffe.pb.cc	/^void FillerParameter::Swap(FillerParameter* other) {$/;"	f	class:caffe::FillerParameter
Swap	caffe.pb.cc	/^void InnerProductProto::Swap(InnerProductProto* other) {$/;"	f	class:caffe::InnerProductProto
Swap	caffe.pb.cc	/^void LRNProto::Swap(LRNProto* other) {$/;"	f	class:caffe::LRNProto
Swap	caffe.pb.cc	/^void LayerProto::Swap(LayerProto* other) {$/;"	f	class:caffe::LayerProto
Swap	caffe.pb.cc	/^void LayerSet::Swap(LayerSet* other) {$/;"	f	class:caffe::LayerSet
Swap	caffe.pb.cc	/^void LoadPartialModelProto::Swap(LoadPartialModelProto* other) {$/;"	f	class:caffe::LoadPartialModelProto
Swap	caffe.pb.cc	/^void LoaderProto::Swap(LoaderProto* other) {$/;"	f	class:caffe::LoaderProto
Swap	caffe.pb.cc	/^void Machine::Swap(Machine* other) {$/;"	f	class:caffe::Machine
Swap	caffe.pb.cc	/^void MachineGroup::Swap(MachineGroup* other) {$/;"	f	class:caffe::MachineGroup
Swap	caffe.pb.cc	/^void ModelUpdateProto::Swap(ModelUpdateProto* other) {$/;"	f	class:caffe::ModelUpdateProto
Swap	caffe.pb.cc	/^void MultinomialLogisticLossProto::Swap(MultinomialLogisticLossProto* other) {$/;"	f	class:caffe::MultinomialLogisticLossProto
Swap	caffe.pb.cc	/^void NetParameter::Swap(NetParameter* other) {$/;"	f	class:caffe::NetParameter
Swap	caffe.pb.cc	/^void NetProto::Swap(NetProto* other) {$/;"	f	class:caffe::NetProto
Swap	caffe.pb.cc	/^void NetState::Swap(NetState* other) {$/;"	f	class:caffe::NetState
Swap	caffe.pb.cc	/^void NullUpdateProto::Swap(NullUpdateProto* other) {$/;"	f	class:caffe::NullUpdateProto
Swap	caffe.pb.cc	/^void ParamSpec::Swap(ParamSpec* other) {$/;"	f	class:caffe::ParamSpec
Swap	caffe.pb.cc	/^void PlaceholderProto::Swap(PlaceholderProto* other) {$/;"	f	class:caffe::PlaceholderProto
Swap	caffe.pb.cc	/^void PlacementGroup::Swap(PlacementGroup* other) {$/;"	f	class:caffe::PlacementGroup
Swap	caffe.pb.cc	/^void PoolingProto::Swap(PoolingProto* other) {$/;"	f	class:caffe::PoolingProto
Swap	caffe.pb.cc	/^void ReLUProto::Swap(ReLUProto* other) {$/;"	f	class:caffe::ReLUProto
Swap	caffe.pb.cc	/^void Resource::Swap(Resource* other) {$/;"	f	class:caffe::Resource
Swap	caffe.pb.cc	/^void SigmoidProto::Swap(SigmoidProto* other) {$/;"	f	class:caffe::SigmoidProto
Swap	caffe.pb.cc	/^void SoftmaxProto::Swap(SoftmaxProto* other) {$/;"	f	class:caffe::SoftmaxProto
Swap	caffe.pb.cc	/^void SolverProto::Swap(SolverProto* other) {$/;"	f	class:caffe::SolverProto
Swap	caffe.pb.cc	/^void SolverState::Swap(SolverState* other) {$/;"	f	class:caffe::SolverState
Swap	caffe.pb.cc	/^void SplitProto::Swap(SplitProto* other) {$/;"	f	class:caffe::SplitProto
Swap	caffe.pb.cc	/^void StoreProto::Swap(StoreProto* other) {$/;"	f	class:caffe::StoreProto
Swap	caffe.pb.cc	/^void Strategy::Swap(Strategy* other) {$/;"	f	class:caffe::Strategy
TEST	caffe.pb.h	/^  TEST = 1$/;"	e	enum:caffe::Phase
TEST_F	object_pool_test.cc	/^TEST_F(ObjectPool_Test, NewObjectTest) {$/;"	f	namespace:dataflow
TRAIN	caffe.pb.h	/^  TRAIN = 0,$/;"	e	enum:caffe::Phase
TableStruct	caffe.pb.h	/^struct TableStruct {$/;"	s	namespace:caffe::protobuf_caffe_2eproto
Tail	logic.hpp	/^  typedef T Tail;$/;"	t	struct:base::TypeList
TearDown	object_pool_test.cc	/^  void TearDown() {}$/;"	f	class:dataflow::ObjectPool_Test
True	logic.hpp	/^typedef IntType<true> True;$/;"	t	namespace:base
TypeList	logic.hpp	/^struct TypeList {$/;"	s	namespace:base
UINT16	caffe.pb.cc	/^const BlobProto_DataType BlobProto::UINT16;$/;"	m	class:caffe::BlobProto	file:
UINT16	caffe.pb.h	/^  static const DataType UINT16 =$/;"	m	class:caffe::BlobProto
UINT8	caffe.pb.cc	/^const BlobProto_DataType BlobProto::UINT8;$/;"	m	class:caffe::BlobProto	file:
UINT8	caffe.pb.h	/^  static const DataType UINT8 =$/;"	m	class:caffe::BlobProto
UNDEFINED	caffe.pb.cc	/^const BlobProto_DataType BlobProto::UNDEFINED;$/;"	m	class:caffe::BlobProto	file:
UNDEFINED	caffe.pb.h	/^  static const DataType UNDEFINED =$/;"	m	class:caffe::BlobProto
Val	logic.hpp	/^  typedef ValT Val;$/;"	t	struct:base::Meta
Value	logic.hpp	/^  enum { Value = value };$/;"	e	enum:base::IntType::__anon3
WITHIN_CHANNEL	caffe.pb.cc	/^const LRNProto_NormRegion LRNProto::WITHIN_CHANNEL;$/;"	m	class:caffe::LRNProto	file:
WITHIN_CHANNEL	caffe.pb.h	/^  static const NormRegion WITHIN_CHANNEL =$/;"	m	class:caffe::LRNProto
_BatchNormProto_default_instance_	caffe.pb.cc	/^} _BatchNormProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::BatchNormProtoDefaultTypeInternal	file:
_BlobProto_default_instance_	caffe.pb.cc	/^} _BlobProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::BlobProtoDefaultTypeInternal	file:
_BlobShape_default_instance_	caffe.pb.cc	/^} _BlobShape_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::BlobShapeDefaultTypeInternal	file:
_BoxingProto_default_instance_	caffe.pb.cc	/^} _BoxingProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::BoxingProtoDefaultTypeInternal	file:
_ConcatProto_default_instance_	caffe.pb.cc	/^} _ConcatProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::ConcatProtoDefaultTypeInternal	file:
_ConvolutionProto_default_instance_	caffe.pb.cc	/^} _ConvolutionProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::ConvolutionProtoDefaultTypeInternal	file:
_CopyProto_default_instance_	caffe.pb.cc	/^} _CopyProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::CopyProtoDefaultTypeInternal	file:
_DeviceGroup_default_instance_	caffe.pb.cc	/^} _DeviceGroup_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::DeviceGroupDefaultTypeInternal	file:
_DeviceSet_default_instance_	caffe.pb.cc	/^} _DeviceSet_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::DeviceSetDefaultTypeInternal	file:
_FillerParameter_default_instance_	caffe.pb.cc	/^} _FillerParameter_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::FillerParameterDefaultTypeInternal	file:
_InnerProductProto_default_instance_	caffe.pb.cc	/^} _InnerProductProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::InnerProductProtoDefaultTypeInternal	file:
_LRNProto_default_instance_	caffe.pb.cc	/^} _LRNProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::LRNProtoDefaultTypeInternal	file:
_LayerProto_default_instance_	caffe.pb.cc	/^} _LayerProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::LayerProtoDefaultTypeInternal	file:
_LayerSet_default_instance_	caffe.pb.cc	/^} _LayerSet_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::LayerSetDefaultTypeInternal	file:
_LoadPartialModelProto_default_instance_	caffe.pb.cc	/^} _LoadPartialModelProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::LoadPartialModelProtoDefaultTypeInternal	file:
_LoaderProto_default_instance_	caffe.pb.cc	/^} _LoaderProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::LoaderProtoDefaultTypeInternal	file:
_MachineGroup_default_instance_	caffe.pb.cc	/^} _MachineGroup_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::MachineGroupDefaultTypeInternal	file:
_Machine_default_instance_	caffe.pb.cc	/^} _Machine_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::MachineDefaultTypeInternal	file:
_ModelUpdateProto_default_instance_	caffe.pb.cc	/^} _ModelUpdateProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::ModelUpdateProtoDefaultTypeInternal	file:
_MultinomialLogisticLossProto_default_instance_	caffe.pb.cc	/^} _MultinomialLogisticLossProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::MultinomialLogisticLossProtoDefaultTypeInternal	file:
_NetParameter_default_instance_	caffe.pb.cc	/^} _NetParameter_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::NetParameterDefaultTypeInternal	file:
_NetProto_default_instance_	caffe.pb.cc	/^} _NetProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::NetProtoDefaultTypeInternal	file:
_NetState_default_instance_	caffe.pb.cc	/^} _NetState_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::NetStateDefaultTypeInternal	file:
_NullUpdateProto_default_instance_	caffe.pb.cc	/^} _NullUpdateProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::NullUpdateProtoDefaultTypeInternal	file:
_ParamSpec_default_instance_	caffe.pb.cc	/^} _ParamSpec_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::ParamSpecDefaultTypeInternal	file:
_PlaceholderProto_default_instance_	caffe.pb.cc	/^} _PlaceholderProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::PlaceholderProtoDefaultTypeInternal	file:
_PlacementGroup_default_instance_	caffe.pb.cc	/^} _PlacementGroup_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::PlacementGroupDefaultTypeInternal	file:
_PoolingProto_default_instance_	caffe.pb.cc	/^} _PoolingProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::PoolingProtoDefaultTypeInternal	file:
_ReLUProto_default_instance_	caffe.pb.cc	/^} _ReLUProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::ReLUProtoDefaultTypeInternal	file:
_Resource_default_instance_	caffe.pb.cc	/^} _Resource_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::ResourceDefaultTypeInternal	file:
_SigmoidProto_default_instance_	caffe.pb.cc	/^} _SigmoidProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::SigmoidProtoDefaultTypeInternal	file:
_SoftmaxProto_default_instance_	caffe.pb.cc	/^} _SoftmaxProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::SoftmaxProtoDefaultTypeInternal	file:
_SolverProto_default_instance_	caffe.pb.cc	/^} _SolverProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::SolverProtoDefaultTypeInternal	file:
_SolverState_default_instance_	caffe.pb.cc	/^} _SolverState_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::SolverStateDefaultTypeInternal	file:
_SplitProto_default_instance_	caffe.pb.cc	/^} _SplitProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::SplitProtoDefaultTypeInternal	file:
_StoreProto_default_instance_	caffe.pb.cc	/^} _StoreProto_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::StoreProtoDefaultTypeInternal	file:
_Strategy_default_instance_	caffe.pb.cc	/^} _Strategy_default_instance_;$/;"	m	namespace:caffe	typeref:class:caffe::StrategyDefaultTypeInternal	file:
__print	logic.hpp	/^#define __print(/;"	d
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::BatchNormProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::BlobProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::BlobShape
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::BoxingProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::ConcatProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::ConvolutionProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::CopyProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::DeviceGroup
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::DeviceSet
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::FillerParameter
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::InnerProductProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::LRNProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::LayerProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::LayerSet
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::LoadPartialModelProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::LoaderProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::Machine
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::MachineGroup
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::ModelUpdateProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::MultinomialLogisticLossProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::NetParameter
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::NetProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::NetState
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::NullUpdateProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::ParamSpec
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::PlaceholderProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::PlacementGroup
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::PoolingProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::ReLUProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::Resource
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::SigmoidProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::SoftmaxProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::SolverProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::SolverState
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::SplitProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::StoreProto
_cached_size_	caffe.pb.h	/^  mutable int _cached_size_;$/;"	m	class:caffe::Strategy
_default_regularization_type_	caffe.pb.cc	/^::google::protobuf::internal::ExplicitlyConstructed< ::std::string> SolverProto::_default_regularization_type_;$/;"	m	class:caffe::SolverProto	file:
_default_regularization_type_	caffe.pb.h	/^  static ::google::protobuf::internal::ExplicitlyConstructed< ::std::string> _default_regularization_type_;$/;"	m	class:caffe::SolverProto
_default_type_	caffe.pb.cc	/^::google::protobuf::internal::ExplicitlyConstructed< ::std::string> FillerParameter::_default_type_;$/;"	m	class:caffe::FillerParameter	file:
_default_type_	caffe.pb.h	/^  static ::google::protobuf::internal::ExplicitlyConstructed< ::std::string> _default_type_;$/;"	m	class:caffe::FillerParameter
_dim_cached_byte_size_	caffe.pb.h	/^  mutable int _dim_cached_byte_size_;$/;"	m	class:caffe::BlobShape
_double_data_cached_byte_size_	caffe.pb.h	/^  mutable int _double_data_cached_byte_size_;$/;"	m	class:caffe::BlobProto
_float_data_cached_byte_size_	caffe.pb.h	/^  mutable int _float_data_cached_byte_size_;$/;"	m	class:caffe::BlobProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::BatchNormProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::BlobProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::BlobShape
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::BoxingProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::ConcatProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::ConvolutionProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::CopyProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::DeviceGroup
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::DeviceSet
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::FillerParameter
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::InnerProductProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::LRNProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::LayerProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::LayerSet
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::LoadPartialModelProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::LoaderProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::Machine
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::MachineGroup
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::ModelUpdateProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::MultinomialLogisticLossProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::NetParameter
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::NetProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::NetState
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::NullUpdateProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::ParamSpec
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::PlaceholderProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::PlacementGroup
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::PoolingProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::ReLUProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::Resource
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::SigmoidProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::SoftmaxProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::SolverProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::SolverState
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::SplitProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::StoreProto
_has_bits_	caffe.pb.h	/^  ::google::protobuf::internal::HasBits<1> _has_bits_;$/;"	m	class:caffe::Strategy
_int32_data_cached_byte_size_	caffe.pb.h	/^  mutable int _int32_data_cached_byte_size_;$/;"	m	class:caffe::BlobProto
_int64_data_cached_byte_size_	caffe.pb.h	/^  mutable int _int64_data_cached_byte_size_;$/;"	m	class:caffe::BlobProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::BatchNormProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::BlobProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::BlobShape
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::BoxingProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::ConcatProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::ConvolutionProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::CopyProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::DeviceGroup
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::DeviceSet
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::FillerParameter
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::InnerProductProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::LRNProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::LayerProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::LayerSet
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::LoadPartialModelProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::LoaderProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::Machine
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::MachineGroup
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::ModelUpdateProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::MultinomialLogisticLossProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::NetParameter
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::NetProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::NetState
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::NullUpdateProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::ParamSpec
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::PlaceholderProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::PlacementGroup
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::PoolingProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::ReLUProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::Resource
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::SigmoidProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::SoftmaxProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::SolverProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::SolverState
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::SplitProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::StoreProto
_internal_metadata_	caffe.pb.h	/^  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;$/;"	m	class:caffe::Strategy
add_device_id	caffe.pb.cc	/^void DeviceSet::add_device_id(::google::protobuf::int32 value) {$/;"	f	class:caffe::DeviceSet
add_device_id	caffe.pb.h	/^inline void DeviceSet::add_device_id(::google::protobuf::int32 value) {$/;"	f	class:caffe::DeviceSet
add_dim	caffe.pb.cc	/^void BlobShape::add_dim(::google::protobuf::int64 value) {$/;"	f	class:caffe::BlobShape
add_dim	caffe.pb.h	/^inline void BlobShape::add_dim(::google::protobuf::int64 value) {$/;"	f	class:caffe::BlobShape
add_double_data	caffe.pb.cc	/^void BlobProto::add_double_data(double value) {$/;"	f	class:caffe::BlobProto
add_double_data	caffe.pb.h	/^inline void BlobProto::add_double_data(double value) {$/;"	f	class:caffe::BlobProto
add_float_data	caffe.pb.cc	/^void BlobProto::add_float_data(float value) {$/;"	f	class:caffe::BlobProto
add_float_data	caffe.pb.h	/^inline void BlobProto::add_float_data(float value) {$/;"	f	class:caffe::BlobProto
add_in	caffe.pb.cc	/^::std::string* BoxingProto::add_in() {$/;"	f	class:caffe::BoxingProto
add_in	caffe.pb.cc	/^::std::string* ConcatProto::add_in() {$/;"	f	class:caffe::ConcatProto
add_in	caffe.pb.cc	/^::std::string* CopyProto::add_in() {$/;"	f	class:caffe::CopyProto
add_in	caffe.pb.cc	/^::std::string* NetProto::add_in() {$/;"	f	class:caffe::NetProto
add_in	caffe.pb.cc	/^void BoxingProto::add_in(const ::std::string& value) {$/;"	f	class:caffe::BoxingProto
add_in	caffe.pb.cc	/^void BoxingProto::add_in(const char* value) {$/;"	f	class:caffe::BoxingProto
add_in	caffe.pb.cc	/^void BoxingProto::add_in(const char* value, size_t size) {$/;"	f	class:caffe::BoxingProto
add_in	caffe.pb.cc	/^void ConcatProto::add_in(const ::std::string& value) {$/;"	f	class:caffe::ConcatProto
add_in	caffe.pb.cc	/^void ConcatProto::add_in(const char* value) {$/;"	f	class:caffe::ConcatProto
add_in	caffe.pb.cc	/^void ConcatProto::add_in(const char* value, size_t size) {$/;"	f	class:caffe::ConcatProto
add_in	caffe.pb.cc	/^void CopyProto::add_in(const ::std::string& value) {$/;"	f	class:caffe::CopyProto
add_in	caffe.pb.cc	/^void CopyProto::add_in(const char* value) {$/;"	f	class:caffe::CopyProto
add_in	caffe.pb.cc	/^void CopyProto::add_in(const char* value, size_t size) {$/;"	f	class:caffe::CopyProto
add_in	caffe.pb.cc	/^void NetProto::add_in(const ::std::string& value) {$/;"	f	class:caffe::NetProto
add_in	caffe.pb.cc	/^void NetProto::add_in(const char* value) {$/;"	f	class:caffe::NetProto
add_in	caffe.pb.cc	/^void NetProto::add_in(const char* value, size_t size) {$/;"	f	class:caffe::NetProto
add_in	caffe.pb.h	/^inline ::std::string* BoxingProto::add_in() {$/;"	f	class:caffe::BoxingProto
add_in	caffe.pb.h	/^inline ::std::string* ConcatProto::add_in() {$/;"	f	class:caffe::ConcatProto
add_in	caffe.pb.h	/^inline ::std::string* CopyProto::add_in() {$/;"	f	class:caffe::CopyProto
add_in	caffe.pb.h	/^inline ::std::string* NetProto::add_in() {$/;"	f	class:caffe::NetProto
add_in	caffe.pb.h	/^inline void BoxingProto::add_in(const ::std::string& value) {$/;"	f	class:caffe::BoxingProto
add_in	caffe.pb.h	/^inline void BoxingProto::add_in(const char* value) {$/;"	f	class:caffe::BoxingProto
add_in	caffe.pb.h	/^inline void BoxingProto::add_in(const char* value, size_t size) {$/;"	f	class:caffe::BoxingProto
add_in	caffe.pb.h	/^inline void ConcatProto::add_in(const ::std::string& value) {$/;"	f	class:caffe::ConcatProto
add_in	caffe.pb.h	/^inline void ConcatProto::add_in(const char* value) {$/;"	f	class:caffe::ConcatProto
add_in	caffe.pb.h	/^inline void ConcatProto::add_in(const char* value, size_t size) {$/;"	f	class:caffe::ConcatProto
add_in	caffe.pb.h	/^inline void CopyProto::add_in(const ::std::string& value) {$/;"	f	class:caffe::CopyProto
add_in	caffe.pb.h	/^inline void CopyProto::add_in(const char* value) {$/;"	f	class:caffe::CopyProto
add_in	caffe.pb.h	/^inline void CopyProto::add_in(const char* value, size_t size) {$/;"	f	class:caffe::CopyProto
add_in	caffe.pb.h	/^inline void NetProto::add_in(const ::std::string& value) {$/;"	f	class:caffe::NetProto
add_in	caffe.pb.h	/^inline void NetProto::add_in(const char* value) {$/;"	f	class:caffe::NetProto
add_in	caffe.pb.h	/^inline void NetProto::add_in(const char* value, size_t size) {$/;"	f	class:caffe::NetProto
add_input_shape	caffe.pb.cc	/^::caffe::BlobShape* NetParameter::add_input_shape() {$/;"	f	class:caffe::NetParameter
add_input_shape	caffe.pb.h	/^inline ::caffe::BlobShape* NetParameter::add_input_shape() {$/;"	f	class:caffe::NetParameter
add_int32_data	caffe.pb.cc	/^void BlobProto::add_int32_data(::google::protobuf::int32 value) {$/;"	f	class:caffe::BlobProto
add_int32_data	caffe.pb.h	/^inline void BlobProto::add_int32_data(::google::protobuf::int32 value) {$/;"	f	class:caffe::BlobProto
add_int64_data	caffe.pb.cc	/^void BlobProto::add_int64_data(::google::protobuf::int64 value) {$/;"	f	class:caffe::BlobProto
add_int64_data	caffe.pb.h	/^inline void BlobProto::add_int64_data(::google::protobuf::int64 value) {$/;"	f	class:caffe::BlobProto
add_layer	caffe.pb.cc	/^::caffe::LayerProto* NetParameter::add_layer() {$/;"	f	class:caffe::NetParameter
add_layer	caffe.pb.h	/^inline ::caffe::LayerProto* NetParameter::add_layer() {$/;"	f	class:caffe::NetParameter
add_layer_seek_pos	caffe.pb.cc	/^void StoreProto::add_layer_seek_pos(::google::protobuf::int64 value) {$/;"	f	class:caffe::StoreProto
add_layer_seek_pos	caffe.pb.h	/^inline void StoreProto::add_layer_seek_pos(::google::protobuf::int64 value) {$/;"	f	class:caffe::StoreProto
add_load_layer_names	caffe.pb.cc	/^::std::string* LoadPartialModelProto::add_load_layer_names() {$/;"	f	class:caffe::LoadPartialModelProto
add_load_layer_names	caffe.pb.cc	/^void LoadPartialModelProto::add_load_layer_names(const ::std::string& value) {$/;"	f	class:caffe::LoadPartialModelProto
add_load_layer_names	caffe.pb.cc	/^void LoadPartialModelProto::add_load_layer_names(const char* value) {$/;"	f	class:caffe::LoadPartialModelProto
add_load_layer_names	caffe.pb.cc	/^void LoadPartialModelProto::add_load_layer_names(const char* value, size_t size) {$/;"	f	class:caffe::LoadPartialModelProto
add_load_layer_names	caffe.pb.h	/^inline ::std::string* LoadPartialModelProto::add_load_layer_names() {$/;"	f	class:caffe::LoadPartialModelProto
add_load_layer_names	caffe.pb.h	/^inline void LoadPartialModelProto::add_load_layer_names(const ::std::string& value) {$/;"	f	class:caffe::LoadPartialModelProto
add_load_layer_names	caffe.pb.h	/^inline void LoadPartialModelProto::add_load_layer_names(const char* value) {$/;"	f	class:caffe::LoadPartialModelProto
add_load_layer_names	caffe.pb.h	/^inline void LoadPartialModelProto::add_load_layer_names(const char* value, size_t size) {$/;"	f	class:caffe::LoadPartialModelProto
add_load_layer_shapes	caffe.pb.cc	/^void LoadPartialModelProto::add_load_layer_shapes(::google::protobuf::int64 value) {$/;"	f	class:caffe::LoadPartialModelProto
add_load_layer_shapes	caffe.pb.h	/^inline void LoadPartialModelProto::add_load_layer_shapes(::google::protobuf::int64 value) {$/;"	f	class:caffe::LoadPartialModelProto
add_machine	caffe.pb.cc	/^::caffe::Machine* Resource::add_machine() {$/;"	f	class:caffe::Resource
add_machine	caffe.pb.h	/^inline ::caffe::Machine* Resource::add_machine() {$/;"	f	class:caffe::Resource
add_name	caffe.pb.cc	/^::std::string* LayerSet::add_name() {$/;"	f	class:caffe::LayerSet
add_name	caffe.pb.cc	/^void LayerSet::add_name(const ::std::string& value) {$/;"	f	class:caffe::LayerSet
add_name	caffe.pb.cc	/^void LayerSet::add_name(const char* value) {$/;"	f	class:caffe::LayerSet
add_name	caffe.pb.cc	/^void LayerSet::add_name(const char* value, size_t size) {$/;"	f	class:caffe::LayerSet
add_name	caffe.pb.h	/^inline ::std::string* LayerSet::add_name() {$/;"	f	class:caffe::LayerSet
add_name	caffe.pb.h	/^inline void LayerSet::add_name(const ::std::string& value) {$/;"	f	class:caffe::LayerSet
add_name	caffe.pb.h	/^inline void LayerSet::add_name(const char* value) {$/;"	f	class:caffe::LayerSet
add_name	caffe.pb.h	/^inline void LayerSet::add_name(const char* value, size_t size) {$/;"	f	class:caffe::LayerSet
add_out	caffe.pb.cc	/^::std::string* BoxingProto::add_out() {$/;"	f	class:caffe::BoxingProto
add_out	caffe.pb.cc	/^::std::string* CopyProto::add_out() {$/;"	f	class:caffe::CopyProto
add_out	caffe.pb.cc	/^::std::string* NetProto::add_out() {$/;"	f	class:caffe::NetProto
add_out	caffe.pb.cc	/^::std::string* SplitProto::add_out() {$/;"	f	class:caffe::SplitProto
add_out	caffe.pb.cc	/^void BoxingProto::add_out(const ::std::string& value) {$/;"	f	class:caffe::BoxingProto
add_out	caffe.pb.cc	/^void BoxingProto::add_out(const char* value) {$/;"	f	class:caffe::BoxingProto
add_out	caffe.pb.cc	/^void BoxingProto::add_out(const char* value, size_t size) {$/;"	f	class:caffe::BoxingProto
add_out	caffe.pb.cc	/^void CopyProto::add_out(const ::std::string& value) {$/;"	f	class:caffe::CopyProto
add_out	caffe.pb.cc	/^void CopyProto::add_out(const char* value) {$/;"	f	class:caffe::CopyProto
add_out	caffe.pb.cc	/^void CopyProto::add_out(const char* value, size_t size) {$/;"	f	class:caffe::CopyProto
add_out	caffe.pb.cc	/^void NetProto::add_out(const ::std::string& value) {$/;"	f	class:caffe::NetProto
add_out	caffe.pb.cc	/^void NetProto::add_out(const char* value) {$/;"	f	class:caffe::NetProto
add_out	caffe.pb.cc	/^void NetProto::add_out(const char* value, size_t size) {$/;"	f	class:caffe::NetProto
add_out	caffe.pb.cc	/^void SplitProto::add_out(const ::std::string& value) {$/;"	f	class:caffe::SplitProto
add_out	caffe.pb.cc	/^void SplitProto::add_out(const char* value) {$/;"	f	class:caffe::SplitProto
add_out	caffe.pb.cc	/^void SplitProto::add_out(const char* value, size_t size) {$/;"	f	class:caffe::SplitProto
add_out	caffe.pb.h	/^inline ::std::string* BoxingProto::add_out() {$/;"	f	class:caffe::BoxingProto
add_out	caffe.pb.h	/^inline ::std::string* CopyProto::add_out() {$/;"	f	class:caffe::CopyProto
add_out	caffe.pb.h	/^inline ::std::string* NetProto::add_out() {$/;"	f	class:caffe::NetProto
add_out	caffe.pb.h	/^inline ::std::string* SplitProto::add_out() {$/;"	f	class:caffe::SplitProto
add_out	caffe.pb.h	/^inline void BoxingProto::add_out(const ::std::string& value) {$/;"	f	class:caffe::BoxingProto
add_out	caffe.pb.h	/^inline void BoxingProto::add_out(const char* value) {$/;"	f	class:caffe::BoxingProto
add_out	caffe.pb.h	/^inline void BoxingProto::add_out(const char* value, size_t size) {$/;"	f	class:caffe::BoxingProto
add_out	caffe.pb.h	/^inline void CopyProto::add_out(const ::std::string& value) {$/;"	f	class:caffe::CopyProto
add_out	caffe.pb.h	/^inline void CopyProto::add_out(const char* value) {$/;"	f	class:caffe::CopyProto
add_out	caffe.pb.h	/^inline void CopyProto::add_out(const char* value, size_t size) {$/;"	f	class:caffe::CopyProto
add_out	caffe.pb.h	/^inline void NetProto::add_out(const ::std::string& value) {$/;"	f	class:caffe::NetProto
add_out	caffe.pb.h	/^inline void NetProto::add_out(const char* value) {$/;"	f	class:caffe::NetProto
add_out	caffe.pb.h	/^inline void NetProto::add_out(const char* value, size_t size) {$/;"	f	class:caffe::NetProto
add_out	caffe.pb.h	/^inline void SplitProto::add_out(const ::std::string& value) {$/;"	f	class:caffe::SplitProto
add_out	caffe.pb.h	/^inline void SplitProto::add_out(const char* value) {$/;"	f	class:caffe::SplitProto
add_out	caffe.pb.h	/^inline void SplitProto::add_out(const char* value, size_t size) {$/;"	f	class:caffe::SplitProto
add_param	caffe.pb.cc	/^::caffe::ParamSpec* ConvolutionProto::add_param() {$/;"	f	class:caffe::ConvolutionProto
add_param	caffe.pb.cc	/^::caffe::ParamSpec* InnerProductProto::add_param() {$/;"	f	class:caffe::InnerProductProto
add_param	caffe.pb.h	/^inline ::caffe::ParamSpec* ConvolutionProto::add_param() {$/;"	f	class:caffe::ConvolutionProto
add_param	caffe.pb.h	/^inline ::caffe::ParamSpec* InnerProductProto::add_param() {$/;"	f	class:caffe::InnerProductProto
add_placement_group	caffe.pb.cc	/^::caffe::PlacementGroup* Strategy::add_placement_group() {$/;"	f	class:caffe::Strategy
add_placement_group	caffe.pb.h	/^inline ::caffe::PlacementGroup* Strategy::add_placement_group() {$/;"	f	class:caffe::Strategy
add_stage	caffe.pb.cc	/^::std::string* NetState::add_stage() {$/;"	f	class:caffe::NetState
add_stage	caffe.pb.cc	/^void NetState::add_stage(const ::std::string& value) {$/;"	f	class:caffe::NetState
add_stage	caffe.pb.cc	/^void NetState::add_stage(const char* value) {$/;"	f	class:caffe::NetState
add_stage	caffe.pb.cc	/^void NetState::add_stage(const char* value, size_t size) {$/;"	f	class:caffe::NetState
add_stage	caffe.pb.h	/^inline ::std::string* NetState::add_stage() {$/;"	f	class:caffe::NetState
add_stage	caffe.pb.h	/^inline void NetState::add_stage(const ::std::string& value) {$/;"	f	class:caffe::NetState
add_stage	caffe.pb.h	/^inline void NetState::add_stage(const char* value) {$/;"	f	class:caffe::NetState
add_stage	caffe.pb.h	/^inline void NetState::add_stage(const char* value, size_t size) {$/;"	f	class:caffe::NetState
add_stepvalue	caffe.pb.cc	/^void SolverProto::add_stepvalue(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
add_stepvalue	caffe.pb.h	/^inline void SolverProto::add_stepvalue(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
add_store_layer_names	caffe.pb.cc	/^::std::string* StoreProto::add_store_layer_names() {$/;"	f	class:caffe::StoreProto
add_store_layer_names	caffe.pb.cc	/^void StoreProto::add_store_layer_names(const ::std::string& value) {$/;"	f	class:caffe::StoreProto
add_store_layer_names	caffe.pb.cc	/^void StoreProto::add_store_layer_names(const char* value) {$/;"	f	class:caffe::StoreProto
add_store_layer_names	caffe.pb.cc	/^void StoreProto::add_store_layer_names(const char* value, size_t size) {$/;"	f	class:caffe::StoreProto
add_store_layer_names	caffe.pb.h	/^inline ::std::string* StoreProto::add_store_layer_names() {$/;"	f	class:caffe::StoreProto
add_store_layer_names	caffe.pb.h	/^inline void StoreProto::add_store_layer_names(const ::std::string& value) {$/;"	f	class:caffe::StoreProto
add_store_layer_names	caffe.pb.h	/^inline void StoreProto::add_store_layer_names(const char* value) {$/;"	f	class:caffe::StoreProto
add_store_layer_names	caffe.pb.h	/^inline void StoreProto::add_store_layer_names(const char* value, size_t size) {$/;"	f	class:caffe::StoreProto
add_store_layer_shapes	caffe.pb.cc	/^void StoreProto::add_store_layer_shapes(::google::protobuf::int64 value) {$/;"	f	class:caffe::StoreProto
add_store_layer_shapes	caffe.pb.h	/^inline void StoreProto::add_store_layer_shapes(::google::protobuf::int64 value) {$/;"	f	class:caffe::StoreProto
add_string_data	caffe.pb.cc	/^::std::string* BlobProto::add_string_data() {$/;"	f	class:caffe::BlobProto
add_string_data	caffe.pb.cc	/^void BlobProto::add_string_data(const ::std::string& value) {$/;"	f	class:caffe::BlobProto
add_string_data	caffe.pb.cc	/^void BlobProto::add_string_data(const char* value) {$/;"	f	class:caffe::BlobProto
add_string_data	caffe.pb.cc	/^void BlobProto::add_string_data(const void* value, size_t size) {$/;"	f	class:caffe::BlobProto
add_string_data	caffe.pb.h	/^inline ::std::string* BlobProto::add_string_data() {$/;"	f	class:caffe::BlobProto
add_string_data	caffe.pb.h	/^inline void BlobProto::add_string_data(const ::std::string& value) {$/;"	f	class:caffe::BlobProto
add_string_data	caffe.pb.h	/^inline void BlobProto::add_string_data(const char* value) {$/;"	f	class:caffe::BlobProto
add_string_data	caffe.pb.h	/^inline void BlobProto::add_string_data(const void* value, size_t size) {$/;"	f	class:caffe::BlobProto
add_test_iter	caffe.pb.cc	/^void SolverProto::add_test_iter(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
add_test_iter	caffe.pb.h	/^inline void SolverProto::add_test_iter(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
add_test_net	caffe.pb.cc	/^::std::string* SolverProto::add_test_net() {$/;"	f	class:caffe::SolverProto
add_test_net	caffe.pb.cc	/^void SolverProto::add_test_net(const ::std::string& value) {$/;"	f	class:caffe::SolverProto
add_test_net	caffe.pb.cc	/^void SolverProto::add_test_net(const char* value) {$/;"	f	class:caffe::SolverProto
add_test_net	caffe.pb.cc	/^void SolverProto::add_test_net(const char* value, size_t size) {$/;"	f	class:caffe::SolverProto
add_test_net	caffe.pb.h	/^inline ::std::string* SolverProto::add_test_net() {$/;"	f	class:caffe::SolverProto
add_test_net	caffe.pb.h	/^inline void SolverProto::add_test_net(const ::std::string& value) {$/;"	f	class:caffe::SolverProto
add_test_net	caffe.pb.h	/^inline void SolverProto::add_test_net(const char* value) {$/;"	f	class:caffe::SolverProto
add_test_net	caffe.pb.h	/^inline void SolverProto::add_test_net(const char* value, size_t size) {$/;"	f	class:caffe::SolverProto
add_test_state	caffe.pb.cc	/^::caffe::NetState* SolverProto::add_test_state() {$/;"	f	class:caffe::SolverProto
add_test_state	caffe.pb.h	/^inline ::caffe::NetState* SolverProto::add_test_state() {$/;"	f	class:caffe::SolverProto
alpha	caffe.pb.cc	/^float LRNProto::alpha() const {$/;"	f	class:caffe::LRNProto
alpha	caffe.pb.h	/^inline float LRNProto::alpha() const {$/;"	f	class:caffe::LRNProto
alpha_	caffe.pb.h	/^  float alpha_;$/;"	m	class:caffe::LRNProto
average_loss	caffe.pb.cc	/^::google::protobuf::int32 SolverProto::average_loss() const {$/;"	f	class:caffe::SolverProto
average_loss	caffe.pb.h	/^inline ::google::protobuf::int32 SolverProto::average_loss() const {$/;"	f	class:caffe::SolverProto
average_loss_	caffe.pb.h	/^  ::google::protobuf::int32 average_loss_;$/;"	m	class:caffe::SolverProto
axis	caffe.pb.cc	/^::google::protobuf::int32 ConcatProto::axis() const {$/;"	f	class:caffe::ConcatProto
axis	caffe.pb.cc	/^::google::protobuf::int32 InnerProductProto::axis() const {$/;"	f	class:caffe::InnerProductProto
axis	caffe.pb.cc	/^::google::protobuf::int32 SoftmaxProto::axis() const {$/;"	f	class:caffe::SoftmaxProto
axis	caffe.pb.h	/^inline ::google::protobuf::int32 ConcatProto::axis() const {$/;"	f	class:caffe::ConcatProto
axis	caffe.pb.h	/^inline ::google::protobuf::int32 InnerProductProto::axis() const {$/;"	f	class:caffe::InnerProductProto
axis	caffe.pb.h	/^inline ::google::protobuf::int32 SoftmaxProto::axis() const {$/;"	f	class:caffe::SoftmaxProto
axis_	caffe.pb.h	/^  ::google::protobuf::int32 axis_;$/;"	m	class:caffe::ConcatProto
axis_	caffe.pb.h	/^  ::google::protobuf::int32 axis_;$/;"	m	class:caffe::InnerProductProto
axis_	caffe.pb.h	/^  ::google::protobuf::int32 axis_;$/;"	m	class:caffe::SoftmaxProto
backward_in_op	caffe.pb.cc	/^::caffe::BoxingOp BoxingProto::backward_in_op() const {$/;"	f	class:caffe::BoxingProto
backward_in_op	caffe.pb.h	/^inline ::caffe::BoxingOp BoxingProto::backward_in_op() const {$/;"	f	class:caffe::BoxingProto
backward_in_op_	caffe.pb.h	/^  int backward_in_op_;$/;"	m	class:caffe::BoxingProto
backward_out_op	caffe.pb.cc	/^::caffe::BoxingOp BoxingProto::backward_out_op() const {$/;"	f	class:caffe::BoxingProto
backward_out_op	caffe.pb.h	/^inline ::caffe::BoxingOp BoxingProto::backward_out_op() const {$/;"	f	class:caffe::BoxingProto
backward_out_op_	caffe.pb.h	/^  int backward_out_op_;$/;"	m	class:caffe::BoxingProto
base	logic.hpp	/^namespace base {$/;"	n
base_lr	caffe.pb.cc	/^float SolverProto::base_lr() const {$/;"	f	class:caffe::SolverProto
base_lr	caffe.pb.h	/^inline float SolverProto::base_lr() const {$/;"	f	class:caffe::SolverProto
base_lr_	caffe.pb.h	/^  float base_lr_;$/;"	m	class:caffe::SolverProto
batchnorm_proto	caffe.pb.cc	/^const ::caffe::BatchNormProto& LayerProto::batchnorm_proto() const {$/;"	f	class:caffe::LayerProto
batchnorm_proto	caffe.pb.h	/^inline const ::caffe::BatchNormProto& LayerProto::batchnorm_proto() const {$/;"	f	class:caffe::LayerProto
batchnorm_proto_	caffe.pb.h	/^  ::caffe::BatchNormProto* batchnorm_proto_;$/;"	m	class:caffe::LayerProto
begin	caffe.pb.cc	/^::google::protobuf::int32 DeviceGroup::begin() const {$/;"	f	class:caffe::DeviceGroup
begin	caffe.pb.cc	/^::google::protobuf::int32 MachineGroup::begin() const {$/;"	f	class:caffe::MachineGroup
begin	caffe.pb.h	/^inline ::google::protobuf::int32 DeviceGroup::begin() const {$/;"	f	class:caffe::DeviceGroup
begin	caffe.pb.h	/^inline ::google::protobuf::int32 MachineGroup::begin() const {$/;"	f	class:caffe::MachineGroup
begin_	caffe.pb.h	/^  ::google::protobuf::int32 begin_;$/;"	m	class:caffe::DeviceGroup
begin_	caffe.pb.h	/^  ::google::protobuf::int32 begin_;$/;"	m	class:caffe::MachineGroup
beta	caffe.pb.cc	/^float LRNProto::beta() const {$/;"	f	class:caffe::LRNProto
beta	caffe.pb.h	/^inline float LRNProto::beta() const {$/;"	f	class:caffe::LRNProto
beta_	caffe.pb.h	/^  float beta_;$/;"	m	class:caffe::LRNProto
bias_filler	caffe.pb.cc	/^const ::caffe::FillerParameter& ConvolutionProto::bias_filler() const {$/;"	f	class:caffe::ConvolutionProto
bias_filler	caffe.pb.cc	/^const ::caffe::FillerParameter& InnerProductProto::bias_filler() const {$/;"	f	class:caffe::InnerProductProto
bias_filler	caffe.pb.h	/^inline const ::caffe::FillerParameter& ConvolutionProto::bias_filler() const {$/;"	f	class:caffe::ConvolutionProto
bias_filler	caffe.pb.h	/^inline const ::caffe::FillerParameter& InnerProductProto::bias_filler() const {$/;"	f	class:caffe::InnerProductProto
bias_filler_	caffe.pb.h	/^  ::caffe::FillerParameter* bias_filler_;$/;"	m	class:caffe::ConvolutionProto
bias_filler_	caffe.pb.h	/^  ::caffe::FillerParameter* bias_filler_;$/;"	m	class:caffe::InnerProductProto
bias_term	caffe.pb.cc	/^bool ConvolutionProto::bias_term() const {$/;"	f	class:caffe::ConvolutionProto
bias_term	caffe.pb.cc	/^bool InnerProductProto::bias_term() const {$/;"	f	class:caffe::InnerProductProto
bias_term	caffe.pb.h	/^inline bool ConvolutionProto::bias_term() const {$/;"	f	class:caffe::ConvolutionProto
bias_term	caffe.pb.h	/^inline bool InnerProductProto::bias_term() const {$/;"	f	class:caffe::InnerProductProto
bias_term_	caffe.pb.h	/^  bool bias_term_;$/;"	m	class:caffe::ConvolutionProto
bias_term_	caffe.pb.h	/^  bool bias_term_;$/;"	m	class:caffe::InnerProductProto
byte_data	caffe.pb.cc	/^const ::std::string& BlobProto::byte_data() const {$/;"	f	class:caffe::BlobProto
byte_data	caffe.pb.h	/^inline const ::std::string& BlobProto::byte_data() const {$/;"	f	class:caffe::BlobProto
byte_data_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr byte_data_;$/;"	m	class:caffe::BlobProto
caffe	caffe.pb.cc	/^namespace caffe {$/;"	n	file:
caffe	caffe.pb.h	/^namespace caffe {$/;"	n
channel	caffe.pb.cc	/^::google::protobuf::uint32 LoaderProto::channel() const {$/;"	f	class:caffe::LoaderProto
channel	caffe.pb.h	/^inline ::google::protobuf::uint32 LoaderProto::channel() const {$/;"	f	class:caffe::LoaderProto
channel_	caffe.pb.h	/^  ::google::protobuf::uint32 channel_;$/;"	m	class:caffe::LoaderProto
clear_alpha	caffe.pb.cc	/^void LRNProto::clear_alpha() {$/;"	f	class:caffe::LRNProto
clear_alpha	caffe.pb.h	/^inline void LRNProto::clear_alpha() {$/;"	f	class:caffe::LRNProto
clear_average_loss	caffe.pb.cc	/^void SolverProto::clear_average_loss() {$/;"	f	class:caffe::SolverProto
clear_average_loss	caffe.pb.h	/^inline void SolverProto::clear_average_loss() {$/;"	f	class:caffe::SolverProto
clear_axis	caffe.pb.cc	/^void ConcatProto::clear_axis() {$/;"	f	class:caffe::ConcatProto
clear_axis	caffe.pb.cc	/^void InnerProductProto::clear_axis() {$/;"	f	class:caffe::InnerProductProto
clear_axis	caffe.pb.cc	/^void SoftmaxProto::clear_axis() {$/;"	f	class:caffe::SoftmaxProto
clear_axis	caffe.pb.h	/^inline void ConcatProto::clear_axis() {$/;"	f	class:caffe::ConcatProto
clear_axis	caffe.pb.h	/^inline void InnerProductProto::clear_axis() {$/;"	f	class:caffe::InnerProductProto
clear_axis	caffe.pb.h	/^inline void SoftmaxProto::clear_axis() {$/;"	f	class:caffe::SoftmaxProto
clear_backward_in_op	caffe.pb.cc	/^void BoxingProto::clear_backward_in_op() {$/;"	f	class:caffe::BoxingProto
clear_backward_in_op	caffe.pb.h	/^inline void BoxingProto::clear_backward_in_op() {$/;"	f	class:caffe::BoxingProto
clear_backward_out_op	caffe.pb.cc	/^void BoxingProto::clear_backward_out_op() {$/;"	f	class:caffe::BoxingProto
clear_backward_out_op	caffe.pb.h	/^inline void BoxingProto::clear_backward_out_op() {$/;"	f	class:caffe::BoxingProto
clear_base_lr	caffe.pb.cc	/^void SolverProto::clear_base_lr() {$/;"	f	class:caffe::SolverProto
clear_base_lr	caffe.pb.h	/^inline void SolverProto::clear_base_lr() {$/;"	f	class:caffe::SolverProto
clear_batchnorm_proto	caffe.pb.cc	/^void LayerProto::clear_batchnorm_proto() {$/;"	f	class:caffe::LayerProto
clear_batchnorm_proto	caffe.pb.h	/^inline void LayerProto::clear_batchnorm_proto() {$/;"	f	class:caffe::LayerProto
clear_begin	caffe.pb.cc	/^void DeviceGroup::clear_begin() {$/;"	f	class:caffe::DeviceGroup
clear_begin	caffe.pb.cc	/^void MachineGroup::clear_begin() {$/;"	f	class:caffe::MachineGroup
clear_begin	caffe.pb.h	/^inline void DeviceGroup::clear_begin() {$/;"	f	class:caffe::DeviceGroup
clear_begin	caffe.pb.h	/^inline void MachineGroup::clear_begin() {$/;"	f	class:caffe::MachineGroup
clear_beta	caffe.pb.cc	/^void LRNProto::clear_beta() {$/;"	f	class:caffe::LRNProto
clear_beta	caffe.pb.h	/^inline void LRNProto::clear_beta() {$/;"	f	class:caffe::LRNProto
clear_bias_filler	caffe.pb.cc	/^void ConvolutionProto::clear_bias_filler() {$/;"	f	class:caffe::ConvolutionProto
clear_bias_filler	caffe.pb.cc	/^void InnerProductProto::clear_bias_filler() {$/;"	f	class:caffe::InnerProductProto
clear_bias_filler	caffe.pb.h	/^inline void ConvolutionProto::clear_bias_filler() {$/;"	f	class:caffe::ConvolutionProto
clear_bias_filler	caffe.pb.h	/^inline void InnerProductProto::clear_bias_filler() {$/;"	f	class:caffe::InnerProductProto
clear_bias_term	caffe.pb.cc	/^void ConvolutionProto::clear_bias_term() {$/;"	f	class:caffe::ConvolutionProto
clear_bias_term	caffe.pb.cc	/^void InnerProductProto::clear_bias_term() {$/;"	f	class:caffe::InnerProductProto
clear_bias_term	caffe.pb.h	/^inline void ConvolutionProto::clear_bias_term() {$/;"	f	class:caffe::ConvolutionProto
clear_bias_term	caffe.pb.h	/^inline void InnerProductProto::clear_bias_term() {$/;"	f	class:caffe::InnerProductProto
clear_byte_data	caffe.pb.cc	/^void BlobProto::clear_byte_data() {$/;"	f	class:caffe::BlobProto
clear_byte_data	caffe.pb.h	/^inline void BlobProto::clear_byte_data() {$/;"	f	class:caffe::BlobProto
clear_channel	caffe.pb.cc	/^void LoaderProto::clear_channel() {$/;"	f	class:caffe::LoaderProto
clear_channel	caffe.pb.h	/^inline void LoaderProto::clear_channel() {$/;"	f	class:caffe::LoaderProto
clear_clip_gradients	caffe.pb.cc	/^void SolverProto::clear_clip_gradients() {$/;"	f	class:caffe::SolverProto
clear_clip_gradients	caffe.pb.h	/^inline void SolverProto::clear_clip_gradients() {$/;"	f	class:caffe::SolverProto
clear_concat_proto	caffe.pb.cc	/^void LayerProto::clear_concat_proto() {$/;"	f	class:caffe::LayerProto
clear_concat_proto	caffe.pb.h	/^inline void LayerProto::clear_concat_proto() {$/;"	f	class:caffe::LayerProto
clear_convolution_proto	caffe.pb.cc	/^void LayerProto::clear_convolution_proto() {$/;"	f	class:caffe::LayerProto
clear_convolution_proto	caffe.pb.h	/^inline void LayerProto::clear_convolution_proto() {$/;"	f	class:caffe::LayerProto
clear_copy_type	caffe.pb.cc	/^void CopyProto::clear_copy_type() {$/;"	f	class:caffe::CopyProto
clear_copy_type	caffe.pb.h	/^inline void CopyProto::clear_copy_type() {$/;"	f	class:caffe::CopyProto
clear_current_step	caffe.pb.cc	/^void SolverState::clear_current_step() {$/;"	f	class:caffe::SolverState
clear_current_step	caffe.pb.h	/^inline void SolverState::clear_current_step() {$/;"	f	class:caffe::SolverState
clear_data	caffe.pb.cc	/^void LoaderProto::clear_data() {$/;"	f	class:caffe::LoaderProto
clear_data	caffe.pb.cc	/^void MultinomialLogisticLossProto::clear_data() {$/;"	f	class:caffe::MultinomialLogisticLossProto
clear_data	caffe.pb.h	/^inline void LoaderProto::clear_data() {$/;"	f	class:caffe::LoaderProto
clear_data	caffe.pb.h	/^inline void MultinomialLogisticLossProto::clear_data() {$/;"	f	class:caffe::MultinomialLogisticLossProto
clear_data_type	caffe.pb.cc	/^void BlobProto::clear_data_type() {$/;"	f	class:caffe::BlobProto
clear_data_type	caffe.pb.h	/^inline void BlobProto::clear_data_type() {$/;"	f	class:caffe::BlobProto
clear_debug_info	caffe.pb.cc	/^void NetParameter::clear_debug_info() {$/;"	f	class:caffe::NetParameter
clear_debug_info	caffe.pb.cc	/^void SolverProto::clear_debug_info() {$/;"	f	class:caffe::SolverProto
clear_debug_info	caffe.pb.h	/^inline void NetParameter::clear_debug_info() {$/;"	f	class:caffe::NetParameter
clear_debug_info	caffe.pb.h	/^inline void SolverProto::clear_debug_info() {$/;"	f	class:caffe::SolverProto
clear_decay_mult	caffe.pb.cc	/^void ParamSpec::clear_decay_mult() {$/;"	f	class:caffe::ParamSpec
clear_decay_mult	caffe.pb.h	/^inline void ParamSpec::clear_decay_mult() {$/;"	f	class:caffe::ParamSpec
clear_delta	caffe.pb.cc	/^void SolverProto::clear_delta() {$/;"	f	class:caffe::SolverProto
clear_delta	caffe.pb.h	/^inline void SolverProto::clear_delta() {$/;"	f	class:caffe::SolverProto
clear_device_group	caffe.pb.cc	/^void PlacementGroup::clear_device_group() {$/;"	f	class:caffe::PlacementGroup
clear_device_group	caffe.pb.h	/^inline void PlacementGroup::clear_device_group() {$/;"	f	class:caffe::PlacementGroup
clear_device_id	caffe.pb.cc	/^void DeviceSet::clear_device_id() {$/;"	f	class:caffe::DeviceSet
clear_device_id	caffe.pb.h	/^inline void DeviceSet::clear_device_id() {$/;"	f	class:caffe::DeviceSet
clear_device_set	caffe.pb.cc	/^void Machine::clear_device_set() {$/;"	f	class:caffe::Machine
clear_device_set	caffe.pb.h	/^inline void Machine::clear_device_set() {$/;"	f	class:caffe::Machine
clear_dim	caffe.pb.cc	/^void BlobShape::clear_dim() {$/;"	f	class:caffe::BlobShape
clear_dim	caffe.pb.h	/^inline void BlobShape::clear_dim() {$/;"	f	class:caffe::BlobShape
clear_display	caffe.pb.cc	/^void SolverProto::clear_display() {$/;"	f	class:caffe::SolverProto
clear_display	caffe.pb.h	/^inline void SolverProto::clear_display() {$/;"	f	class:caffe::SolverProto
clear_double_data	caffe.pb.cc	/^void BlobProto::clear_double_data() {$/;"	f	class:caffe::BlobProto
clear_double_data	caffe.pb.h	/^inline void BlobProto::clear_double_data() {$/;"	f	class:caffe::BlobProto
clear_end	caffe.pb.cc	/^void DeviceGroup::clear_end() {$/;"	f	class:caffe::DeviceGroup
clear_end	caffe.pb.cc	/^void MachineGroup::clear_end() {$/;"	f	class:caffe::MachineGroup
clear_end	caffe.pb.h	/^inline void DeviceGroup::clear_end() {$/;"	f	class:caffe::DeviceGroup
clear_end	caffe.pb.h	/^inline void MachineGroup::clear_end() {$/;"	f	class:caffe::MachineGroup
clear_engine	caffe.pb.cc	/^void ConvolutionProto::clear_engine() {$/;"	f	class:caffe::ConvolutionProto
clear_engine	caffe.pb.cc	/^void LRNProto::clear_engine() {$/;"	f	class:caffe::LRNProto
clear_engine	caffe.pb.cc	/^void PoolingProto::clear_engine() {$/;"	f	class:caffe::PoolingProto
clear_engine	caffe.pb.cc	/^void ReLUProto::clear_engine() {$/;"	f	class:caffe::ReLUProto
clear_engine	caffe.pb.cc	/^void SigmoidProto::clear_engine() {$/;"	f	class:caffe::SigmoidProto
clear_engine	caffe.pb.cc	/^void SoftmaxProto::clear_engine() {$/;"	f	class:caffe::SoftmaxProto
clear_engine	caffe.pb.cc	/^void StoreProto::clear_engine() {$/;"	f	class:caffe::StoreProto
clear_engine	caffe.pb.h	/^inline void ConvolutionProto::clear_engine() {$/;"	f	class:caffe::ConvolutionProto
clear_engine	caffe.pb.h	/^inline void LRNProto::clear_engine() {$/;"	f	class:caffe::LRNProto
clear_engine	caffe.pb.h	/^inline void PoolingProto::clear_engine() {$/;"	f	class:caffe::PoolingProto
clear_engine	caffe.pb.h	/^inline void ReLUProto::clear_engine() {$/;"	f	class:caffe::ReLUProto
clear_engine	caffe.pb.h	/^inline void SigmoidProto::clear_engine() {$/;"	f	class:caffe::SigmoidProto
clear_engine	caffe.pb.h	/^inline void SoftmaxProto::clear_engine() {$/;"	f	class:caffe::SoftmaxProto
clear_engine	caffe.pb.h	/^inline void StoreProto::clear_engine() {$/;"	f	class:caffe::StoreProto
clear_eps	caffe.pb.cc	/^void BatchNormProto::clear_eps() {$/;"	f	class:caffe::BatchNormProto
clear_eps	caffe.pb.h	/^inline void BatchNormProto::clear_eps() {$/;"	f	class:caffe::BatchNormProto
clear_float_data	caffe.pb.cc	/^void BlobProto::clear_float_data() {$/;"	f	class:caffe::BlobProto
clear_float_data	caffe.pb.h	/^inline void BlobProto::clear_float_data() {$/;"	f	class:caffe::BlobProto
clear_force_backward	caffe.pb.cc	/^void NetParameter::clear_force_backward() {$/;"	f	class:caffe::NetParameter
clear_force_backward	caffe.pb.h	/^inline void NetParameter::clear_force_backward() {$/;"	f	class:caffe::NetParameter
clear_forward_is_sender	caffe.pb.cc	/^void NetProto::clear_forward_is_sender() {$/;"	f	class:caffe::NetProto
clear_forward_is_sender	caffe.pb.h	/^inline void NetProto::clear_forward_is_sender() {$/;"	f	class:caffe::NetProto
clear_gamma	caffe.pb.cc	/^void SolverProto::clear_gamma() {$/;"	f	class:caffe::SolverProto
clear_gamma	caffe.pb.h	/^inline void SolverProto::clear_gamma() {$/;"	f	class:caffe::SolverProto
clear_global_pooling	caffe.pb.cc	/^void PoolingProto::clear_global_pooling() {$/;"	f	class:caffe::PoolingProto
clear_global_pooling	caffe.pb.h	/^inline void PoolingProto::clear_global_pooling() {$/;"	f	class:caffe::PoolingProto
clear_gradient	caffe.pb.cc	/^void ModelUpdateProto::clear_gradient() {$/;"	f	class:caffe::ModelUpdateProto
clear_gradient	caffe.pb.h	/^inline void ModelUpdateProto::clear_gradient() {$/;"	f	class:caffe::ModelUpdateProto
clear_group	caffe.pb.cc	/^void ConvolutionProto::clear_group() {$/;"	f	class:caffe::ConvolutionProto
clear_group	caffe.pb.h	/^inline void ConvolutionProto::clear_group() {$/;"	f	class:caffe::ConvolutionProto
clear_has_alpha	caffe.pb.cc	/^void LRNProto::clear_has_alpha() {$/;"	f	class:caffe::LRNProto
clear_has_alpha	caffe.pb.h	/^inline void LRNProto::clear_has_alpha() {$/;"	f	class:caffe::LRNProto
clear_has_average_loss	caffe.pb.cc	/^void SolverProto::clear_has_average_loss() {$/;"	f	class:caffe::SolverProto
clear_has_average_loss	caffe.pb.h	/^inline void SolverProto::clear_has_average_loss() {$/;"	f	class:caffe::SolverProto
clear_has_axis	caffe.pb.cc	/^void ConcatProto::clear_has_axis() {$/;"	f	class:caffe::ConcatProto
clear_has_axis	caffe.pb.cc	/^void InnerProductProto::clear_has_axis() {$/;"	f	class:caffe::InnerProductProto
clear_has_axis	caffe.pb.cc	/^void SoftmaxProto::clear_has_axis() {$/;"	f	class:caffe::SoftmaxProto
clear_has_axis	caffe.pb.h	/^inline void ConcatProto::clear_has_axis() {$/;"	f	class:caffe::ConcatProto
clear_has_axis	caffe.pb.h	/^inline void InnerProductProto::clear_has_axis() {$/;"	f	class:caffe::InnerProductProto
clear_has_axis	caffe.pb.h	/^inline void SoftmaxProto::clear_has_axis() {$/;"	f	class:caffe::SoftmaxProto
clear_has_backward_in_op	caffe.pb.cc	/^void BoxingProto::clear_has_backward_in_op() {$/;"	f	class:caffe::BoxingProto
clear_has_backward_in_op	caffe.pb.h	/^inline void BoxingProto::clear_has_backward_in_op() {$/;"	f	class:caffe::BoxingProto
clear_has_backward_out_op	caffe.pb.cc	/^void BoxingProto::clear_has_backward_out_op() {$/;"	f	class:caffe::BoxingProto
clear_has_backward_out_op	caffe.pb.h	/^inline void BoxingProto::clear_has_backward_out_op() {$/;"	f	class:caffe::BoxingProto
clear_has_base_lr	caffe.pb.cc	/^void SolverProto::clear_has_base_lr() {$/;"	f	class:caffe::SolverProto
clear_has_base_lr	caffe.pb.h	/^inline void SolverProto::clear_has_base_lr() {$/;"	f	class:caffe::SolverProto
clear_has_batchnorm_proto	caffe.pb.cc	/^void LayerProto::clear_has_batchnorm_proto() {$/;"	f	class:caffe::LayerProto
clear_has_batchnorm_proto	caffe.pb.h	/^inline void LayerProto::clear_has_batchnorm_proto() {$/;"	f	class:caffe::LayerProto
clear_has_begin	caffe.pb.cc	/^void DeviceGroup::clear_has_begin() {$/;"	f	class:caffe::DeviceGroup
clear_has_begin	caffe.pb.cc	/^void MachineGroup::clear_has_begin() {$/;"	f	class:caffe::MachineGroup
clear_has_begin	caffe.pb.h	/^inline void DeviceGroup::clear_has_begin() {$/;"	f	class:caffe::DeviceGroup
clear_has_begin	caffe.pb.h	/^inline void MachineGroup::clear_has_begin() {$/;"	f	class:caffe::MachineGroup
clear_has_beta	caffe.pb.cc	/^void LRNProto::clear_has_beta() {$/;"	f	class:caffe::LRNProto
clear_has_beta	caffe.pb.h	/^inline void LRNProto::clear_has_beta() {$/;"	f	class:caffe::LRNProto
clear_has_bias_filler	caffe.pb.cc	/^void ConvolutionProto::clear_has_bias_filler() {$/;"	f	class:caffe::ConvolutionProto
clear_has_bias_filler	caffe.pb.cc	/^void InnerProductProto::clear_has_bias_filler() {$/;"	f	class:caffe::InnerProductProto
clear_has_bias_filler	caffe.pb.h	/^inline void ConvolutionProto::clear_has_bias_filler() {$/;"	f	class:caffe::ConvolutionProto
clear_has_bias_filler	caffe.pb.h	/^inline void InnerProductProto::clear_has_bias_filler() {$/;"	f	class:caffe::InnerProductProto
clear_has_bias_term	caffe.pb.cc	/^void ConvolutionProto::clear_has_bias_term() {$/;"	f	class:caffe::ConvolutionProto
clear_has_bias_term	caffe.pb.cc	/^void InnerProductProto::clear_has_bias_term() {$/;"	f	class:caffe::InnerProductProto
clear_has_bias_term	caffe.pb.h	/^inline void ConvolutionProto::clear_has_bias_term() {$/;"	f	class:caffe::ConvolutionProto
clear_has_bias_term	caffe.pb.h	/^inline void InnerProductProto::clear_has_bias_term() {$/;"	f	class:caffe::InnerProductProto
clear_has_byte_data	caffe.pb.cc	/^void BlobProto::clear_has_byte_data() {$/;"	f	class:caffe::BlobProto
clear_has_byte_data	caffe.pb.h	/^inline void BlobProto::clear_has_byte_data() {$/;"	f	class:caffe::BlobProto
clear_has_channel	caffe.pb.cc	/^void LoaderProto::clear_has_channel() {$/;"	f	class:caffe::LoaderProto
clear_has_channel	caffe.pb.h	/^inline void LoaderProto::clear_has_channel() {$/;"	f	class:caffe::LoaderProto
clear_has_clip_gradients	caffe.pb.cc	/^void SolverProto::clear_has_clip_gradients() {$/;"	f	class:caffe::SolverProto
clear_has_clip_gradients	caffe.pb.h	/^inline void SolverProto::clear_has_clip_gradients() {$/;"	f	class:caffe::SolverProto
clear_has_concat_proto	caffe.pb.cc	/^void LayerProto::clear_has_concat_proto() {$/;"	f	class:caffe::LayerProto
clear_has_concat_proto	caffe.pb.h	/^inline void LayerProto::clear_has_concat_proto() {$/;"	f	class:caffe::LayerProto
clear_has_convolution_proto	caffe.pb.cc	/^void LayerProto::clear_has_convolution_proto() {$/;"	f	class:caffe::LayerProto
clear_has_convolution_proto	caffe.pb.h	/^inline void LayerProto::clear_has_convolution_proto() {$/;"	f	class:caffe::LayerProto
clear_has_copy_type	caffe.pb.cc	/^void CopyProto::clear_has_copy_type() {$/;"	f	class:caffe::CopyProto
clear_has_copy_type	caffe.pb.h	/^inline void CopyProto::clear_has_copy_type() {$/;"	f	class:caffe::CopyProto
clear_has_current_step	caffe.pb.cc	/^void SolverState::clear_has_current_step() {$/;"	f	class:caffe::SolverState
clear_has_current_step	caffe.pb.h	/^inline void SolverState::clear_has_current_step() {$/;"	f	class:caffe::SolverState
clear_has_data	caffe.pb.cc	/^void LoaderProto::clear_has_data() {$/;"	f	class:caffe::LoaderProto
clear_has_data	caffe.pb.cc	/^void MultinomialLogisticLossProto::clear_has_data() {$/;"	f	class:caffe::MultinomialLogisticLossProto
clear_has_data	caffe.pb.h	/^inline void LoaderProto::clear_has_data() {$/;"	f	class:caffe::LoaderProto
clear_has_data	caffe.pb.h	/^inline void MultinomialLogisticLossProto::clear_has_data() {$/;"	f	class:caffe::MultinomialLogisticLossProto
clear_has_data_type	caffe.pb.cc	/^void BlobProto::clear_has_data_type() {$/;"	f	class:caffe::BlobProto
clear_has_data_type	caffe.pb.h	/^inline void BlobProto::clear_has_data_type() {$/;"	f	class:caffe::BlobProto
clear_has_debug_info	caffe.pb.cc	/^void NetParameter::clear_has_debug_info() {$/;"	f	class:caffe::NetParameter
clear_has_debug_info	caffe.pb.cc	/^void SolverProto::clear_has_debug_info() {$/;"	f	class:caffe::SolverProto
clear_has_debug_info	caffe.pb.h	/^inline void NetParameter::clear_has_debug_info() {$/;"	f	class:caffe::NetParameter
clear_has_debug_info	caffe.pb.h	/^inline void SolverProto::clear_has_debug_info() {$/;"	f	class:caffe::SolverProto
clear_has_decay_mult	caffe.pb.cc	/^void ParamSpec::clear_has_decay_mult() {$/;"	f	class:caffe::ParamSpec
clear_has_decay_mult	caffe.pb.h	/^inline void ParamSpec::clear_has_decay_mult() {$/;"	f	class:caffe::ParamSpec
clear_has_delta	caffe.pb.cc	/^void SolverProto::clear_has_delta() {$/;"	f	class:caffe::SolverProto
clear_has_delta	caffe.pb.h	/^inline void SolverProto::clear_has_delta() {$/;"	f	class:caffe::SolverProto
clear_has_device_group	caffe.pb.cc	/^void PlacementGroup::clear_has_device_group() {$/;"	f	class:caffe::PlacementGroup
clear_has_device_group	caffe.pb.h	/^inline void PlacementGroup::clear_has_device_group() {$/;"	f	class:caffe::PlacementGroup
clear_has_device_set	caffe.pb.cc	/^void Machine::clear_has_device_set() {$/;"	f	class:caffe::Machine
clear_has_device_set	caffe.pb.h	/^inline void Machine::clear_has_device_set() {$/;"	f	class:caffe::Machine
clear_has_display	caffe.pb.cc	/^void SolverProto::clear_has_display() {$/;"	f	class:caffe::SolverProto
clear_has_display	caffe.pb.h	/^inline void SolverProto::clear_has_display() {$/;"	f	class:caffe::SolverProto
clear_has_end	caffe.pb.cc	/^void DeviceGroup::clear_has_end() {$/;"	f	class:caffe::DeviceGroup
clear_has_end	caffe.pb.cc	/^void MachineGroup::clear_has_end() {$/;"	f	class:caffe::MachineGroup
clear_has_end	caffe.pb.h	/^inline void DeviceGroup::clear_has_end() {$/;"	f	class:caffe::DeviceGroup
clear_has_end	caffe.pb.h	/^inline void MachineGroup::clear_has_end() {$/;"	f	class:caffe::MachineGroup
clear_has_engine	caffe.pb.cc	/^void ConvolutionProto::clear_has_engine() {$/;"	f	class:caffe::ConvolutionProto
clear_has_engine	caffe.pb.cc	/^void LRNProto::clear_has_engine() {$/;"	f	class:caffe::LRNProto
clear_has_engine	caffe.pb.cc	/^void PoolingProto::clear_has_engine() {$/;"	f	class:caffe::PoolingProto
clear_has_engine	caffe.pb.cc	/^void ReLUProto::clear_has_engine() {$/;"	f	class:caffe::ReLUProto
clear_has_engine	caffe.pb.cc	/^void SigmoidProto::clear_has_engine() {$/;"	f	class:caffe::SigmoidProto
clear_has_engine	caffe.pb.cc	/^void SoftmaxProto::clear_has_engine() {$/;"	f	class:caffe::SoftmaxProto
clear_has_engine	caffe.pb.cc	/^void StoreProto::clear_has_engine() {$/;"	f	class:caffe::StoreProto
clear_has_engine	caffe.pb.h	/^inline void ConvolutionProto::clear_has_engine() {$/;"	f	class:caffe::ConvolutionProto
clear_has_engine	caffe.pb.h	/^inline void LRNProto::clear_has_engine() {$/;"	f	class:caffe::LRNProto
clear_has_engine	caffe.pb.h	/^inline void PoolingProto::clear_has_engine() {$/;"	f	class:caffe::PoolingProto
clear_has_engine	caffe.pb.h	/^inline void ReLUProto::clear_has_engine() {$/;"	f	class:caffe::ReLUProto
clear_has_engine	caffe.pb.h	/^inline void SigmoidProto::clear_has_engine() {$/;"	f	class:caffe::SigmoidProto
clear_has_engine	caffe.pb.h	/^inline void SoftmaxProto::clear_has_engine() {$/;"	f	class:caffe::SoftmaxProto
clear_has_engine	caffe.pb.h	/^inline void StoreProto::clear_has_engine() {$/;"	f	class:caffe::StoreProto
clear_has_eps	caffe.pb.cc	/^void BatchNormProto::clear_has_eps() {$/;"	f	class:caffe::BatchNormProto
clear_has_eps	caffe.pb.h	/^inline void BatchNormProto::clear_has_eps() {$/;"	f	class:caffe::BatchNormProto
clear_has_force_backward	caffe.pb.cc	/^void NetParameter::clear_has_force_backward() {$/;"	f	class:caffe::NetParameter
clear_has_force_backward	caffe.pb.h	/^inline void NetParameter::clear_has_force_backward() {$/;"	f	class:caffe::NetParameter
clear_has_forward_is_sender	caffe.pb.cc	/^void NetProto::clear_has_forward_is_sender() {$/;"	f	class:caffe::NetProto
clear_has_forward_is_sender	caffe.pb.h	/^inline void NetProto::clear_has_forward_is_sender() {$/;"	f	class:caffe::NetProto
clear_has_gamma	caffe.pb.cc	/^void SolverProto::clear_has_gamma() {$/;"	f	class:caffe::SolverProto
clear_has_gamma	caffe.pb.h	/^inline void SolverProto::clear_has_gamma() {$/;"	f	class:caffe::SolverProto
clear_has_global_pooling	caffe.pb.cc	/^void PoolingProto::clear_has_global_pooling() {$/;"	f	class:caffe::PoolingProto
clear_has_global_pooling	caffe.pb.h	/^inline void PoolingProto::clear_has_global_pooling() {$/;"	f	class:caffe::PoolingProto
clear_has_gradient	caffe.pb.cc	/^void ModelUpdateProto::clear_has_gradient() {$/;"	f	class:caffe::ModelUpdateProto
clear_has_gradient	caffe.pb.h	/^inline void ModelUpdateProto::clear_has_gradient() {$/;"	f	class:caffe::ModelUpdateProto
clear_has_group	caffe.pb.cc	/^void ConvolutionProto::clear_has_group() {$/;"	f	class:caffe::ConvolutionProto
clear_has_group	caffe.pb.h	/^inline void ConvolutionProto::clear_has_group() {$/;"	f	class:caffe::ConvolutionProto
clear_has_height	caffe.pb.cc	/^void LoaderProto::clear_has_height() {$/;"	f	class:caffe::LoaderProto
clear_has_height	caffe.pb.h	/^inline void LoaderProto::clear_has_height() {$/;"	f	class:caffe::LoaderProto
clear_has_in	caffe.pb.cc	/^void ConvolutionProto::clear_has_in() {$/;"	f	class:caffe::ConvolutionProto
clear_has_in	caffe.pb.cc	/^void InnerProductProto::clear_has_in() {$/;"	f	class:caffe::InnerProductProto
clear_has_in	caffe.pb.cc	/^void LRNProto::clear_has_in() {$/;"	f	class:caffe::LRNProto
clear_has_in	caffe.pb.cc	/^void PlaceholderProto::clear_has_in() {$/;"	f	class:caffe::PlaceholderProto
clear_has_in	caffe.pb.cc	/^void PoolingProto::clear_has_in() {$/;"	f	class:caffe::PoolingProto
clear_has_in	caffe.pb.cc	/^void ReLUProto::clear_has_in() {$/;"	f	class:caffe::ReLUProto
clear_has_in	caffe.pb.cc	/^void SigmoidProto::clear_has_in() {$/;"	f	class:caffe::SigmoidProto
clear_has_in	caffe.pb.cc	/^void SoftmaxProto::clear_has_in() {$/;"	f	class:caffe::SoftmaxProto
clear_has_in	caffe.pb.cc	/^void SplitProto::clear_has_in() {$/;"	f	class:caffe::SplitProto
clear_has_in	caffe.pb.cc	/^void StoreProto::clear_has_in() {$/;"	f	class:caffe::StoreProto
clear_has_in	caffe.pb.h	/^inline void ConvolutionProto::clear_has_in() {$/;"	f	class:caffe::ConvolutionProto
clear_has_in	caffe.pb.h	/^inline void InnerProductProto::clear_has_in() {$/;"	f	class:caffe::InnerProductProto
clear_has_in	caffe.pb.h	/^inline void LRNProto::clear_has_in() {$/;"	f	class:caffe::LRNProto
clear_has_in	caffe.pb.h	/^inline void PlaceholderProto::clear_has_in() {$/;"	f	class:caffe::PlaceholderProto
clear_has_in	caffe.pb.h	/^inline void PoolingProto::clear_has_in() {$/;"	f	class:caffe::PoolingProto
clear_has_in	caffe.pb.h	/^inline void ReLUProto::clear_has_in() {$/;"	f	class:caffe::ReLUProto
clear_has_in	caffe.pb.h	/^inline void SigmoidProto::clear_has_in() {$/;"	f	class:caffe::SigmoidProto
clear_has_in	caffe.pb.h	/^inline void SoftmaxProto::clear_has_in() {$/;"	f	class:caffe::SoftmaxProto
clear_has_in	caffe.pb.h	/^inline void SplitProto::clear_has_in() {$/;"	f	class:caffe::SplitProto
clear_has_in	caffe.pb.h	/^inline void StoreProto::clear_has_in() {$/;"	f	class:caffe::StoreProto
clear_has_in_axis	caffe.pb.cc	/^void BoxingProto::clear_has_in_axis() {$/;"	f	class:caffe::BoxingProto
clear_has_in_axis	caffe.pb.h	/^inline void BoxingProto::clear_has_in_axis() {$/;"	f	class:caffe::BoxingProto
clear_has_in_envelope	caffe.pb.cc	/^void NetProto::clear_has_in_envelope() {$/;"	f	class:caffe::NetProto
clear_has_in_envelope	caffe.pb.h	/^inline void NetProto::clear_has_in_envelope() {$/;"	f	class:caffe::NetProto
clear_has_in_num	caffe.pb.cc	/^void BoxingProto::clear_has_in_num() {$/;"	f	class:caffe::BoxingProto
clear_has_in_num	caffe.pb.cc	/^void ConcatProto::clear_has_in_num() {$/;"	f	class:caffe::ConcatProto
clear_has_in_num	caffe.pb.cc	/^void NetProto::clear_has_in_num() {$/;"	f	class:caffe::NetProto
clear_has_in_num	caffe.pb.h	/^inline void BoxingProto::clear_has_in_num() {$/;"	f	class:caffe::BoxingProto
clear_has_in_num	caffe.pb.h	/^inline void ConcatProto::clear_has_in_num() {$/;"	f	class:caffe::ConcatProto
clear_has_in_num	caffe.pb.h	/^inline void NetProto::clear_has_in_num() {$/;"	f	class:caffe::NetProto
clear_has_in_op	caffe.pb.cc	/^void BoxingProto::clear_has_in_op() {$/;"	f	class:caffe::BoxingProto
clear_has_in_op	caffe.pb.h	/^inline void BoxingProto::clear_has_in_op() {$/;"	f	class:caffe::BoxingProto
clear_has_innerproduct_proto	caffe.pb.cc	/^void LayerProto::clear_has_innerproduct_proto() {$/;"	f	class:caffe::LayerProto
clear_has_innerproduct_proto	caffe.pb.h	/^inline void LayerProto::clear_has_innerproduct_proto() {$/;"	f	class:caffe::LayerProto
clear_has_iter	caffe.pb.cc	/^void SolverState::clear_has_iter() {$/;"	f	class:caffe::SolverState
clear_has_iter	caffe.pb.h	/^inline void SolverState::clear_has_iter() {$/;"	f	class:caffe::SolverState
clear_has_k	caffe.pb.cc	/^void LRNProto::clear_has_k() {$/;"	f	class:caffe::LRNProto
clear_has_k	caffe.pb.h	/^inline void LRNProto::clear_has_k() {$/;"	f	class:caffe::LRNProto
clear_has_kernel_h	caffe.pb.cc	/^void ConvolutionProto::clear_has_kernel_h() {$/;"	f	class:caffe::ConvolutionProto
clear_has_kernel_h	caffe.pb.cc	/^void PoolingProto::clear_has_kernel_h() {$/;"	f	class:caffe::PoolingProto
clear_has_kernel_h	caffe.pb.h	/^inline void ConvolutionProto::clear_has_kernel_h() {$/;"	f	class:caffe::ConvolutionProto
clear_has_kernel_h	caffe.pb.h	/^inline void PoolingProto::clear_has_kernel_h() {$/;"	f	class:caffe::PoolingProto
clear_has_kernel_size	caffe.pb.cc	/^void ConvolutionProto::clear_has_kernel_size() {$/;"	f	class:caffe::ConvolutionProto
clear_has_kernel_size	caffe.pb.cc	/^void PoolingProto::clear_has_kernel_size() {$/;"	f	class:caffe::PoolingProto
clear_has_kernel_size	caffe.pb.h	/^inline void ConvolutionProto::clear_has_kernel_size() {$/;"	f	class:caffe::ConvolutionProto
clear_has_kernel_size	caffe.pb.h	/^inline void PoolingProto::clear_has_kernel_size() {$/;"	f	class:caffe::PoolingProto
clear_has_kernel_w	caffe.pb.cc	/^void ConvolutionProto::clear_has_kernel_w() {$/;"	f	class:caffe::ConvolutionProto
clear_has_kernel_w	caffe.pb.cc	/^void PoolingProto::clear_has_kernel_w() {$/;"	f	class:caffe::PoolingProto
clear_has_kernel_w	caffe.pb.h	/^inline void ConvolutionProto::clear_has_kernel_w() {$/;"	f	class:caffe::ConvolutionProto
clear_has_kernel_w	caffe.pb.h	/^inline void PoolingProto::clear_has_kernel_w() {$/;"	f	class:caffe::PoolingProto
clear_has_label	caffe.pb.cc	/^void LoaderProto::clear_has_label() {$/;"	f	class:caffe::LoaderProto
clear_has_label	caffe.pb.cc	/^void MultinomialLogisticLossProto::clear_has_label() {$/;"	f	class:caffe::MultinomialLogisticLossProto
clear_has_label	caffe.pb.h	/^inline void LoaderProto::clear_has_label() {$/;"	f	class:caffe::LoaderProto
clear_has_label	caffe.pb.h	/^inline void MultinomialLogisticLossProto::clear_has_label() {$/;"	f	class:caffe::MultinomialLogisticLossProto
clear_has_layer_set	caffe.pb.cc	/^void PlacementGroup::clear_has_layer_set() {$/;"	f	class:caffe::PlacementGroup
clear_has_layer_set	caffe.pb.h	/^inline void PlacementGroup::clear_has_layer_set() {$/;"	f	class:caffe::PlacementGroup
clear_has_learned_net	caffe.pb.cc	/^void SolverState::clear_has_learned_net() {$/;"	f	class:caffe::SolverState
clear_has_learned_net	caffe.pb.h	/^inline void SolverState::clear_has_learned_net() {$/;"	f	class:caffe::SolverState
clear_has_level	caffe.pb.cc	/^void NetState::clear_has_level() {$/;"	f	class:caffe::NetState
clear_has_level	caffe.pb.h	/^inline void NetState::clear_has_level() {$/;"	f	class:caffe::NetState
clear_has_loader_proto	caffe.pb.cc	/^void LayerProto::clear_has_loader_proto() {$/;"	f	class:caffe::LayerProto
clear_has_loader_proto	caffe.pb.h	/^inline void LayerProto::clear_has_loader_proto() {$/;"	f	class:caffe::LayerProto
clear_has_loadpartialmodel_proto	caffe.pb.cc	/^void LayerProto::clear_has_loadpartialmodel_proto() {$/;"	f	class:caffe::LayerProto
clear_has_loadpartialmodel_proto	caffe.pb.h	/^inline void LayerProto::clear_has_loadpartialmodel_proto() {$/;"	f	class:caffe::LayerProto
clear_has_local_size	caffe.pb.cc	/^void LRNProto::clear_has_local_size() {$/;"	f	class:caffe::LRNProto
clear_has_local_size	caffe.pb.h	/^inline void LRNProto::clear_has_local_size() {$/;"	f	class:caffe::LRNProto
clear_has_loss	caffe.pb.cc	/^void MultinomialLogisticLossProto::clear_has_loss() {$/;"	f	class:caffe::MultinomialLogisticLossProto
clear_has_loss	caffe.pb.h	/^inline void MultinomialLogisticLossProto::clear_has_loss() {$/;"	f	class:caffe::MultinomialLogisticLossProto
clear_has_lr_mult	caffe.pb.cc	/^void ParamSpec::clear_has_lr_mult() {$/;"	f	class:caffe::ParamSpec
clear_has_lr_mult	caffe.pb.h	/^inline void ParamSpec::clear_has_lr_mult() {$/;"	f	class:caffe::ParamSpec
clear_has_lr_policy	caffe.pb.cc	/^void SolverProto::clear_has_lr_policy() {$/;"	f	class:caffe::SolverProto
clear_has_lr_policy	caffe.pb.h	/^inline void SolverProto::clear_has_lr_policy() {$/;"	f	class:caffe::SolverProto
clear_has_lrn_proto	caffe.pb.cc	/^void LayerProto::clear_has_lrn_proto() {$/;"	f	class:caffe::LayerProto
clear_has_lrn_proto	caffe.pb.h	/^inline void LayerProto::clear_has_lrn_proto() {$/;"	f	class:caffe::LayerProto
clear_has_machine_group	caffe.pb.cc	/^void PlacementGroup::clear_has_machine_group() {$/;"	f	class:caffe::PlacementGroup
clear_has_machine_group	caffe.pb.h	/^inline void PlacementGroup::clear_has_machine_group() {$/;"	f	class:caffe::PlacementGroup
clear_has_machine_id	caffe.pb.cc	/^void SolverProto::clear_has_machine_id() {$/;"	f	class:caffe::SolverProto
clear_has_machine_id	caffe.pb.h	/^inline void SolverProto::clear_has_machine_id() {$/;"	f	class:caffe::SolverProto
clear_has_max	caffe.pb.cc	/^void FillerParameter::clear_has_max() {$/;"	f	class:caffe::FillerParameter
clear_has_max	caffe.pb.h	/^inline void FillerParameter::clear_has_max() {$/;"	f	class:caffe::FillerParameter
clear_has_max_iter	caffe.pb.cc	/^void SolverProto::clear_has_max_iter() {$/;"	f	class:caffe::SolverProto
clear_has_max_iter	caffe.pb.h	/^inline void SolverProto::clear_has_max_iter() {$/;"	f	class:caffe::SolverProto
clear_has_mean	caffe.pb.cc	/^void FillerParameter::clear_has_mean() {$/;"	f	class:caffe::FillerParameter
clear_has_mean	caffe.pb.h	/^inline void FillerParameter::clear_has_mean() {$/;"	f	class:caffe::FillerParameter
clear_has_min	caffe.pb.cc	/^void FillerParameter::clear_has_min() {$/;"	f	class:caffe::FillerParameter
clear_has_min	caffe.pb.h	/^inline void FillerParameter::clear_has_min() {$/;"	f	class:caffe::FillerParameter
clear_has_modelupdate_proto	caffe.pb.cc	/^void LayerProto::clear_has_modelupdate_proto() {$/;"	f	class:caffe::LayerProto
clear_has_modelupdate_proto	caffe.pb.h	/^inline void LayerProto::clear_has_modelupdate_proto() {$/;"	f	class:caffe::LayerProto
clear_has_momentum	caffe.pb.cc	/^void SolverProto::clear_has_momentum() {$/;"	f	class:caffe::SolverProto
clear_has_momentum	caffe.pb.h	/^inline void SolverProto::clear_has_momentum() {$/;"	f	class:caffe::SolverProto
clear_has_moving_average_fraction	caffe.pb.cc	/^void BatchNormProto::clear_has_moving_average_fraction() {$/;"	f	class:caffe::BatchNormProto
clear_has_moving_average_fraction	caffe.pb.h	/^inline void BatchNormProto::clear_has_moving_average_fraction() {$/;"	f	class:caffe::BatchNormProto
clear_has_multinomiallogisticloss_proto	caffe.pb.cc	/^void LayerProto::clear_has_multinomiallogisticloss_proto() {$/;"	f	class:caffe::LayerProto
clear_has_multinomiallogisticloss_proto	caffe.pb.h	/^inline void LayerProto::clear_has_multinomiallogisticloss_proto() {$/;"	f	class:caffe::LayerProto
clear_has_name	caffe.pb.cc	/^void BlobProto::clear_has_name() {$/;"	f	class:caffe::BlobProto
clear_has_name	caffe.pb.cc	/^void LayerProto::clear_has_name() {$/;"	f	class:caffe::LayerProto
clear_has_name	caffe.pb.cc	/^void Machine::clear_has_name() {$/;"	f	class:caffe::Machine
clear_has_name	caffe.pb.cc	/^void NetParameter::clear_has_name() {$/;"	f	class:caffe::NetParameter
clear_has_name	caffe.pb.cc	/^void ParamSpec::clear_has_name() {$/;"	f	class:caffe::ParamSpec
clear_has_name	caffe.pb.cc	/^void PlacementGroup::clear_has_name() {$/;"	f	class:caffe::PlacementGroup
clear_has_name	caffe.pb.h	/^inline void BlobProto::clear_has_name() {$/;"	f	class:caffe::BlobProto
clear_has_name	caffe.pb.h	/^inline void LayerProto::clear_has_name() {$/;"	f	class:caffe::LayerProto
clear_has_name	caffe.pb.h	/^inline void Machine::clear_has_name() {$/;"	f	class:caffe::Machine
clear_has_name	caffe.pb.h	/^inline void NetParameter::clear_has_name() {$/;"	f	class:caffe::NetParameter
clear_has_name	caffe.pb.h	/^inline void ParamSpec::clear_has_name() {$/;"	f	class:caffe::ParamSpec
clear_has_name	caffe.pb.h	/^inline void PlacementGroup::clear_has_name() {$/;"	f	class:caffe::PlacementGroup
clear_has_negative_slope	caffe.pb.cc	/^void ReLUProto::clear_has_negative_slope() {$/;"	f	class:caffe::ReLUProto
clear_has_negative_slope	caffe.pb.h	/^inline void ReLUProto::clear_has_negative_slope() {$/;"	f	class:caffe::ReLUProto
clear_has_norm_region	caffe.pb.cc	/^void LRNProto::clear_has_norm_region() {$/;"	f	class:caffe::LRNProto
clear_has_norm_region	caffe.pb.h	/^inline void LRNProto::clear_has_norm_region() {$/;"	f	class:caffe::LRNProto
clear_has_nullupdate_proto	caffe.pb.cc	/^void LayerProto::clear_has_nullupdate_proto() {$/;"	f	class:caffe::LayerProto
clear_has_nullupdate_proto	caffe.pb.h	/^inline void LayerProto::clear_has_nullupdate_proto() {$/;"	f	class:caffe::LayerProto
clear_has_num	caffe.pb.cc	/^void CopyProto::clear_has_num() {$/;"	f	class:caffe::CopyProto
clear_has_num	caffe.pb.h	/^inline void CopyProto::clear_has_num() {$/;"	f	class:caffe::CopyProto
clear_has_num_batch_per_sync	caffe.pb.cc	/^void SolverProto::clear_has_num_batch_per_sync() {$/;"	f	class:caffe::SolverProto
clear_has_num_batch_per_sync	caffe.pb.h	/^inline void SolverProto::clear_has_num_batch_per_sync() {$/;"	f	class:caffe::SolverProto
clear_has_num_data_param_copy	caffe.pb.cc	/^void SolverProto::clear_has_num_data_param_copy() {$/;"	f	class:caffe::SolverProto
clear_has_num_data_param_copy	caffe.pb.h	/^inline void SolverProto::clear_has_num_data_param_copy() {$/;"	f	class:caffe::SolverProto
clear_has_num_model_param_copy	caffe.pb.cc	/^void SolverProto::clear_has_num_model_param_copy() {$/;"	f	class:caffe::SolverProto
clear_has_num_model_param_copy	caffe.pb.h	/^inline void SolverProto::clear_has_num_model_param_copy() {$/;"	f	class:caffe::SolverProto
clear_has_num_output	caffe.pb.cc	/^void ConvolutionProto::clear_has_num_output() {$/;"	f	class:caffe::ConvolutionProto
clear_has_num_output	caffe.pb.cc	/^void InnerProductProto::clear_has_num_output() {$/;"	f	class:caffe::InnerProductProto
clear_has_num_output	caffe.pb.h	/^inline void ConvolutionProto::clear_has_num_output() {$/;"	f	class:caffe::ConvolutionProto
clear_has_num_output	caffe.pb.h	/^inline void InnerProductProto::clear_has_num_output() {$/;"	f	class:caffe::InnerProductProto
clear_has_old_weight	caffe.pb.cc	/^void ModelUpdateProto::clear_has_old_weight() {$/;"	f	class:caffe::ModelUpdateProto
clear_has_old_weight	caffe.pb.h	/^inline void ModelUpdateProto::clear_has_old_weight() {$/;"	f	class:caffe::ModelUpdateProto
clear_has_out	caffe.pb.cc	/^void ConcatProto::clear_has_out() {$/;"	f	class:caffe::ConcatProto
clear_has_out	caffe.pb.cc	/^void ConvolutionProto::clear_has_out() {$/;"	f	class:caffe::ConvolutionProto
clear_has_out	caffe.pb.cc	/^void InnerProductProto::clear_has_out() {$/;"	f	class:caffe::InnerProductProto
clear_has_out	caffe.pb.cc	/^void LRNProto::clear_has_out() {$/;"	f	class:caffe::LRNProto
clear_has_out	caffe.pb.cc	/^void LoadPartialModelProto::clear_has_out() {$/;"	f	class:caffe::LoadPartialModelProto
clear_has_out	caffe.pb.cc	/^void PlaceholderProto::clear_has_out() {$/;"	f	class:caffe::PlaceholderProto
clear_has_out	caffe.pb.cc	/^void PoolingProto::clear_has_out() {$/;"	f	class:caffe::PoolingProto
clear_has_out	caffe.pb.cc	/^void ReLUProto::clear_has_out() {$/;"	f	class:caffe::ReLUProto
clear_has_out	caffe.pb.cc	/^void SigmoidProto::clear_has_out() {$/;"	f	class:caffe::SigmoidProto
clear_has_out	caffe.pb.cc	/^void SoftmaxProto::clear_has_out() {$/;"	f	class:caffe::SoftmaxProto
clear_has_out	caffe.pb.cc	/^void StoreProto::clear_has_out() {$/;"	f	class:caffe::StoreProto
clear_has_out	caffe.pb.h	/^inline void ConcatProto::clear_has_out() {$/;"	f	class:caffe::ConcatProto
clear_has_out	caffe.pb.h	/^inline void ConvolutionProto::clear_has_out() {$/;"	f	class:caffe::ConvolutionProto
clear_has_out	caffe.pb.h	/^inline void InnerProductProto::clear_has_out() {$/;"	f	class:caffe::InnerProductProto
clear_has_out	caffe.pb.h	/^inline void LRNProto::clear_has_out() {$/;"	f	class:caffe::LRNProto
clear_has_out	caffe.pb.h	/^inline void LoadPartialModelProto::clear_has_out() {$/;"	f	class:caffe::LoadPartialModelProto
clear_has_out	caffe.pb.h	/^inline void PlaceholderProto::clear_has_out() {$/;"	f	class:caffe::PlaceholderProto
clear_has_out	caffe.pb.h	/^inline void PoolingProto::clear_has_out() {$/;"	f	class:caffe::PoolingProto
clear_has_out	caffe.pb.h	/^inline void ReLUProto::clear_has_out() {$/;"	f	class:caffe::ReLUProto
clear_has_out	caffe.pb.h	/^inline void SigmoidProto::clear_has_out() {$/;"	f	class:caffe::SigmoidProto
clear_has_out	caffe.pb.h	/^inline void SoftmaxProto::clear_has_out() {$/;"	f	class:caffe::SoftmaxProto
clear_has_out	caffe.pb.h	/^inline void StoreProto::clear_has_out() {$/;"	f	class:caffe::StoreProto
clear_has_out_axis	caffe.pb.cc	/^void BoxingProto::clear_has_out_axis() {$/;"	f	class:caffe::BoxingProto
clear_has_out_axis	caffe.pb.h	/^inline void BoxingProto::clear_has_out_axis() {$/;"	f	class:caffe::BoxingProto
clear_has_out_envelope	caffe.pb.cc	/^void NetProto::clear_has_out_envelope() {$/;"	f	class:caffe::NetProto
clear_has_out_envelope	caffe.pb.h	/^inline void NetProto::clear_has_out_envelope() {$/;"	f	class:caffe::NetProto
clear_has_out_num	caffe.pb.cc	/^void BoxingProto::clear_has_out_num() {$/;"	f	class:caffe::BoxingProto
clear_has_out_num	caffe.pb.cc	/^void NetProto::clear_has_out_num() {$/;"	f	class:caffe::NetProto
clear_has_out_num	caffe.pb.cc	/^void SplitProto::clear_has_out_num() {$/;"	f	class:caffe::SplitProto
clear_has_out_num	caffe.pb.h	/^inline void BoxingProto::clear_has_out_num() {$/;"	f	class:caffe::BoxingProto
clear_has_out_num	caffe.pb.h	/^inline void NetProto::clear_has_out_num() {$/;"	f	class:caffe::NetProto
clear_has_out_num	caffe.pb.h	/^inline void SplitProto::clear_has_out_num() {$/;"	f	class:caffe::SplitProto
clear_has_out_op	caffe.pb.cc	/^void BoxingProto::clear_has_out_op() {$/;"	f	class:caffe::BoxingProto
clear_has_out_op	caffe.pb.h	/^inline void BoxingProto::clear_has_out_op() {$/;"	f	class:caffe::BoxingProto
clear_has_pad	caffe.pb.cc	/^void ConvolutionProto::clear_has_pad() {$/;"	f	class:caffe::ConvolutionProto
clear_has_pad	caffe.pb.cc	/^void PoolingProto::clear_has_pad() {$/;"	f	class:caffe::PoolingProto
clear_has_pad	caffe.pb.h	/^inline void ConvolutionProto::clear_has_pad() {$/;"	f	class:caffe::ConvolutionProto
clear_has_pad	caffe.pb.h	/^inline void PoolingProto::clear_has_pad() {$/;"	f	class:caffe::PoolingProto
clear_has_pad_h	caffe.pb.cc	/^void ConvolutionProto::clear_has_pad_h() {$/;"	f	class:caffe::ConvolutionProto
clear_has_pad_h	caffe.pb.cc	/^void PoolingProto::clear_has_pad_h() {$/;"	f	class:caffe::PoolingProto
clear_has_pad_h	caffe.pb.h	/^inline void ConvolutionProto::clear_has_pad_h() {$/;"	f	class:caffe::ConvolutionProto
clear_has_pad_h	caffe.pb.h	/^inline void PoolingProto::clear_has_pad_h() {$/;"	f	class:caffe::PoolingProto
clear_has_pad_w	caffe.pb.cc	/^void ConvolutionProto::clear_has_pad_w() {$/;"	f	class:caffe::ConvolutionProto
clear_has_pad_w	caffe.pb.cc	/^void PoolingProto::clear_has_pad_w() {$/;"	f	class:caffe::PoolingProto
clear_has_pad_w	caffe.pb.h	/^inline void ConvolutionProto::clear_has_pad_w() {$/;"	f	class:caffe::ConvolutionProto
clear_has_pad_w	caffe.pb.h	/^inline void PoolingProto::clear_has_pad_w() {$/;"	f	class:caffe::PoolingProto
clear_has_parallel_policy	caffe.pb.cc	/^void PlacementGroup::clear_has_parallel_policy() {$/;"	f	class:caffe::PlacementGroup
clear_has_parallel_policy	caffe.pb.h	/^inline void PlacementGroup::clear_has_parallel_policy() {$/;"	f	class:caffe::PlacementGroup
clear_has_phase	caffe.pb.cc	/^void NetState::clear_has_phase() {$/;"	f	class:caffe::NetState
clear_has_phase	caffe.pb.h	/^inline void NetState::clear_has_phase() {$/;"	f	class:caffe::NetState
clear_has_piece_size	caffe.pb.cc	/^void LoaderProto::clear_has_piece_size() {$/;"	f	class:caffe::LoaderProto
clear_has_piece_size	caffe.pb.h	/^inline void LoaderProto::clear_has_piece_size() {$/;"	f	class:caffe::LoaderProto
clear_has_placeholder_proto	caffe.pb.cc	/^void LayerProto::clear_has_placeholder_proto() {$/;"	f	class:caffe::LayerProto
clear_has_placeholder_proto	caffe.pb.h	/^inline void LayerProto::clear_has_placeholder_proto() {$/;"	f	class:caffe::LayerProto
clear_has_pool	caffe.pb.cc	/^void PoolingProto::clear_has_pool() {$/;"	f	class:caffe::PoolingProto
clear_has_pool	caffe.pb.h	/^inline void PoolingProto::clear_has_pool() {$/;"	f	class:caffe::PoolingProto
clear_has_pooling_proto	caffe.pb.cc	/^void LayerProto::clear_has_pooling_proto() {$/;"	f	class:caffe::LayerProto
clear_has_pooling_proto	caffe.pb.h	/^inline void LayerProto::clear_has_pooling_proto() {$/;"	f	class:caffe::LayerProto
clear_has_port	caffe.pb.cc	/^void Machine::clear_has_port() {$/;"	f	class:caffe::Machine
clear_has_port	caffe.pb.h	/^inline void Machine::clear_has_port() {$/;"	f	class:caffe::Machine
clear_has_power	caffe.pb.cc	/^void SolverProto::clear_has_power() {$/;"	f	class:caffe::SolverProto
clear_has_power	caffe.pb.h	/^inline void SolverProto::clear_has_power() {$/;"	f	class:caffe::SolverProto
clear_has_random_seed	caffe.pb.cc	/^void SolverProto::clear_has_random_seed() {$/;"	f	class:caffe::SolverProto
clear_has_random_seed	caffe.pb.h	/^inline void SolverProto::clear_has_random_seed() {$/;"	f	class:caffe::SolverProto
clear_has_regularization_type	caffe.pb.cc	/^void SolverProto::clear_has_regularization_type() {$/;"	f	class:caffe::SolverProto
clear_has_regularization_type	caffe.pb.h	/^inline void SolverProto::clear_has_regularization_type() {$/;"	f	class:caffe::SolverProto
clear_has_relu_proto	caffe.pb.cc	/^void LayerProto::clear_has_relu_proto() {$/;"	f	class:caffe::LayerProto
clear_has_relu_proto	caffe.pb.h	/^inline void LayerProto::clear_has_relu_proto() {$/;"	f	class:caffe::LayerProto
clear_has_resource	caffe.pb.cc	/^void SolverProto::clear_has_resource() {$/;"	f	class:caffe::SolverProto
clear_has_resource	caffe.pb.h	/^inline void SolverProto::clear_has_resource() {$/;"	f	class:caffe::SolverProto
clear_has_shape	caffe.pb.cc	/^void BlobProto::clear_has_shape() {$/;"	f	class:caffe::BlobProto
clear_has_shape	caffe.pb.h	/^inline void BlobProto::clear_has_shape() {$/;"	f	class:caffe::BlobProto
clear_has_share_mode	caffe.pb.cc	/^void ParamSpec::clear_has_share_mode() {$/;"	f	class:caffe::ParamSpec
clear_has_share_mode	caffe.pb.h	/^inline void ParamSpec::clear_has_share_mode() {$/;"	f	class:caffe::ParamSpec
clear_has_sigmoid_proto	caffe.pb.cc	/^void LayerProto::clear_has_sigmoid_proto() {$/;"	f	class:caffe::LayerProto
clear_has_sigmoid_proto	caffe.pb.h	/^inline void LayerProto::clear_has_sigmoid_proto() {$/;"	f	class:caffe::LayerProto
clear_has_snapshot	caffe.pb.cc	/^void SolverProto::clear_has_snapshot() {$/;"	f	class:caffe::SolverProto
clear_has_snapshot	caffe.pb.h	/^inline void SolverProto::clear_has_snapshot() {$/;"	f	class:caffe::SolverProto
clear_has_snapshot_after_train	caffe.pb.cc	/^void SolverProto::clear_has_snapshot_after_train() {$/;"	f	class:caffe::SolverProto
clear_has_snapshot_after_train	caffe.pb.h	/^inline void SolverProto::clear_has_snapshot_after_train() {$/;"	f	class:caffe::SolverProto
clear_has_snapshot_diff	caffe.pb.cc	/^void SolverProto::clear_has_snapshot_diff() {$/;"	f	class:caffe::SolverProto
clear_has_snapshot_diff	caffe.pb.h	/^inline void SolverProto::clear_has_snapshot_diff() {$/;"	f	class:caffe::SolverProto
clear_has_snapshot_prefix	caffe.pb.cc	/^void SolverProto::clear_has_snapshot_prefix() {$/;"	f	class:caffe::SolverProto
clear_has_snapshot_prefix	caffe.pb.h	/^inline void SolverProto::clear_has_snapshot_prefix() {$/;"	f	class:caffe::SolverProto
clear_has_softmax_proto	caffe.pb.cc	/^void LayerProto::clear_has_softmax_proto() {$/;"	f	class:caffe::LayerProto
clear_has_softmax_proto	caffe.pb.h	/^inline void LayerProto::clear_has_softmax_proto() {$/;"	f	class:caffe::LayerProto
clear_has_solver_type	caffe.pb.cc	/^void SolverProto::clear_has_solver_type() {$/;"	f	class:caffe::SolverProto
clear_has_solver_type	caffe.pb.h	/^inline void SolverProto::clear_has_solver_type() {$/;"	f	class:caffe::SolverProto
clear_has_source	caffe.pb.cc	/^void LoaderProto::clear_has_source() {$/;"	f	class:caffe::LoaderProto
clear_has_source	caffe.pb.h	/^inline void LoaderProto::clear_has_source() {$/;"	f	class:caffe::LoaderProto
clear_has_sparse	caffe.pb.cc	/^void FillerParameter::clear_has_sparse() {$/;"	f	class:caffe::FillerParameter
clear_has_sparse	caffe.pb.h	/^inline void FillerParameter::clear_has_sparse() {$/;"	f	class:caffe::FillerParameter
clear_has_split_proto	caffe.pb.cc	/^void LayerProto::clear_has_split_proto() {$/;"	f	class:caffe::LayerProto
clear_has_split_proto	caffe.pb.h	/^inline void LayerProto::clear_has_split_proto() {$/;"	f	class:caffe::LayerProto
clear_has_state	caffe.pb.cc	/^void NetParameter::clear_has_state() {$/;"	f	class:caffe::NetParameter
clear_has_state	caffe.pb.h	/^inline void NetParameter::clear_has_state() {$/;"	f	class:caffe::NetParameter
clear_has_std	caffe.pb.cc	/^void FillerParameter::clear_has_std() {$/;"	f	class:caffe::FillerParameter
clear_has_std	caffe.pb.h	/^inline void FillerParameter::clear_has_std() {$/;"	f	class:caffe::FillerParameter
clear_has_stepsize	caffe.pb.cc	/^void SolverProto::clear_has_stepsize() {$/;"	f	class:caffe::SolverProto
clear_has_stepsize	caffe.pb.h	/^inline void SolverProto::clear_has_stepsize() {$/;"	f	class:caffe::SolverProto
clear_has_stop	caffe.pb.cc	/^void StoreProto::clear_has_stop() {$/;"	f	class:caffe::StoreProto
clear_has_stop	caffe.pb.h	/^inline void StoreProto::clear_has_stop() {$/;"	f	class:caffe::StoreProto
clear_has_store_proto	caffe.pb.cc	/^void LayerProto::clear_has_store_proto() {$/;"	f	class:caffe::LayerProto
clear_has_store_proto	caffe.pb.h	/^inline void LayerProto::clear_has_store_proto() {$/;"	f	class:caffe::LayerProto
clear_has_strategy	caffe.pb.cc	/^void SolverProto::clear_has_strategy() {$/;"	f	class:caffe::SolverProto
clear_has_strategy	caffe.pb.h	/^inline void SolverProto::clear_has_strategy() {$/;"	f	class:caffe::SolverProto
clear_has_stride	caffe.pb.cc	/^void ConvolutionProto::clear_has_stride() {$/;"	f	class:caffe::ConvolutionProto
clear_has_stride	caffe.pb.cc	/^void PoolingProto::clear_has_stride() {$/;"	f	class:caffe::PoolingProto
clear_has_stride	caffe.pb.h	/^inline void ConvolutionProto::clear_has_stride() {$/;"	f	class:caffe::ConvolutionProto
clear_has_stride	caffe.pb.h	/^inline void PoolingProto::clear_has_stride() {$/;"	f	class:caffe::PoolingProto
clear_has_stride_h	caffe.pb.cc	/^void ConvolutionProto::clear_has_stride_h() {$/;"	f	class:caffe::ConvolutionProto
clear_has_stride_h	caffe.pb.cc	/^void PoolingProto::clear_has_stride_h() {$/;"	f	class:caffe::PoolingProto
clear_has_stride_h	caffe.pb.h	/^inline void ConvolutionProto::clear_has_stride_h() {$/;"	f	class:caffe::ConvolutionProto
clear_has_stride_h	caffe.pb.h	/^inline void PoolingProto::clear_has_stride_h() {$/;"	f	class:caffe::PoolingProto
clear_has_stride_w	caffe.pb.cc	/^void ConvolutionProto::clear_has_stride_w() {$/;"	f	class:caffe::ConvolutionProto
clear_has_stride_w	caffe.pb.cc	/^void PoolingProto::clear_has_stride_w() {$/;"	f	class:caffe::PoolingProto
clear_has_stride_w	caffe.pb.h	/^inline void ConvolutionProto::clear_has_stride_w() {$/;"	f	class:caffe::ConvolutionProto
clear_has_stride_w	caffe.pb.h	/^inline void PoolingProto::clear_has_stride_w() {$/;"	f	class:caffe::PoolingProto
clear_has_test_compute_loss	caffe.pb.cc	/^void SolverProto::clear_has_test_compute_loss() {$/;"	f	class:caffe::SolverProto
clear_has_test_compute_loss	caffe.pb.h	/^inline void SolverProto::clear_has_test_compute_loss() {$/;"	f	class:caffe::SolverProto
clear_has_test_initialization	caffe.pb.cc	/^void SolverProto::clear_has_test_initialization() {$/;"	f	class:caffe::SolverProto
clear_has_test_initialization	caffe.pb.h	/^inline void SolverProto::clear_has_test_initialization() {$/;"	f	class:caffe::SolverProto
clear_has_test_interval	caffe.pb.cc	/^void SolverProto::clear_has_test_interval() {$/;"	f	class:caffe::SolverProto
clear_has_test_interval	caffe.pb.h	/^inline void SolverProto::clear_has_test_interval() {$/;"	f	class:caffe::SolverProto
clear_has_train_net	caffe.pb.cc	/^void SolverProto::clear_has_train_net() {$/;"	f	class:caffe::SolverProto
clear_has_train_net	caffe.pb.h	/^inline void SolverProto::clear_has_train_net() {$/;"	f	class:caffe::SolverProto
clear_has_train_state	caffe.pb.cc	/^void SolverProto::clear_has_train_state() {$/;"	f	class:caffe::SolverProto
clear_has_train_state	caffe.pb.h	/^inline void SolverProto::clear_has_train_state() {$/;"	f	class:caffe::SolverProto
clear_has_type	caffe.pb.cc	/^void FillerParameter::clear_has_type() {$/;"	f	class:caffe::FillerParameter
clear_has_type	caffe.pb.cc	/^void LayerProto::clear_has_type() {$/;"	f	class:caffe::LayerProto
clear_has_type	caffe.pb.h	/^inline void FillerParameter::clear_has_type() {$/;"	f	class:caffe::FillerParameter
clear_has_type	caffe.pb.h	/^inline void LayerProto::clear_has_type() {$/;"	f	class:caffe::LayerProto
clear_has_use_global_stats	caffe.pb.cc	/^void BatchNormProto::clear_has_use_global_stats() {$/;"	f	class:caffe::BatchNormProto
clear_has_use_global_stats	caffe.pb.h	/^inline void BatchNormProto::clear_has_use_global_stats() {$/;"	f	class:caffe::BatchNormProto
clear_has_value	caffe.pb.cc	/^void FillerParameter::clear_has_value() {$/;"	f	class:caffe::FillerParameter
clear_has_value	caffe.pb.h	/^inline void FillerParameter::clear_has_value() {$/;"	f	class:caffe::FillerParameter
clear_has_weight	caffe.pb.cc	/^void ModelUpdateProto::clear_has_weight() {$/;"	f	class:caffe::ModelUpdateProto
clear_has_weight	caffe.pb.cc	/^void NullUpdateProto::clear_has_weight() {$/;"	f	class:caffe::NullUpdateProto
clear_has_weight	caffe.pb.h	/^inline void ModelUpdateProto::clear_has_weight() {$/;"	f	class:caffe::ModelUpdateProto
clear_has_weight	caffe.pb.h	/^inline void NullUpdateProto::clear_has_weight() {$/;"	f	class:caffe::NullUpdateProto
clear_has_weight_decay	caffe.pb.cc	/^void SolverProto::clear_has_weight_decay() {$/;"	f	class:caffe::SolverProto
clear_has_weight_decay	caffe.pb.h	/^inline void SolverProto::clear_has_weight_decay() {$/;"	f	class:caffe::SolverProto
clear_has_weight_filler	caffe.pb.cc	/^void ConvolutionProto::clear_has_weight_filler() {$/;"	f	class:caffe::ConvolutionProto
clear_has_weight_filler	caffe.pb.cc	/^void InnerProductProto::clear_has_weight_filler() {$/;"	f	class:caffe::InnerProductProto
clear_has_weight_filler	caffe.pb.h	/^inline void ConvolutionProto::clear_has_weight_filler() {$/;"	f	class:caffe::ConvolutionProto
clear_has_weight_filler	caffe.pb.h	/^inline void InnerProductProto::clear_has_weight_filler() {$/;"	f	class:caffe::InnerProductProto
clear_has_width	caffe.pb.cc	/^void LoaderProto::clear_has_width() {$/;"	f	class:caffe::LoaderProto
clear_has_width	caffe.pb.h	/^inline void LoaderProto::clear_has_width() {$/;"	f	class:caffe::LoaderProto
clear_height	caffe.pb.cc	/^void LoaderProto::clear_height() {$/;"	f	class:caffe::LoaderProto
clear_height	caffe.pb.h	/^inline void LoaderProto::clear_height() {$/;"	f	class:caffe::LoaderProto
clear_in	caffe.pb.cc	/^void BoxingProto::clear_in() {$/;"	f	class:caffe::BoxingProto
clear_in	caffe.pb.cc	/^void ConcatProto::clear_in() {$/;"	f	class:caffe::ConcatProto
clear_in	caffe.pb.cc	/^void ConvolutionProto::clear_in() {$/;"	f	class:caffe::ConvolutionProto
clear_in	caffe.pb.cc	/^void CopyProto::clear_in() {$/;"	f	class:caffe::CopyProto
clear_in	caffe.pb.cc	/^void InnerProductProto::clear_in() {$/;"	f	class:caffe::InnerProductProto
clear_in	caffe.pb.cc	/^void LRNProto::clear_in() {$/;"	f	class:caffe::LRNProto
clear_in	caffe.pb.cc	/^void NetProto::clear_in() {$/;"	f	class:caffe::NetProto
clear_in	caffe.pb.cc	/^void PlaceholderProto::clear_in() {$/;"	f	class:caffe::PlaceholderProto
clear_in	caffe.pb.cc	/^void PoolingProto::clear_in() {$/;"	f	class:caffe::PoolingProto
clear_in	caffe.pb.cc	/^void ReLUProto::clear_in() {$/;"	f	class:caffe::ReLUProto
clear_in	caffe.pb.cc	/^void SigmoidProto::clear_in() {$/;"	f	class:caffe::SigmoidProto
clear_in	caffe.pb.cc	/^void SoftmaxProto::clear_in() {$/;"	f	class:caffe::SoftmaxProto
clear_in	caffe.pb.cc	/^void SplitProto::clear_in() {$/;"	f	class:caffe::SplitProto
clear_in	caffe.pb.cc	/^void StoreProto::clear_in() {$/;"	f	class:caffe::StoreProto
clear_in	caffe.pb.h	/^inline void BoxingProto::clear_in() {$/;"	f	class:caffe::BoxingProto
clear_in	caffe.pb.h	/^inline void ConcatProto::clear_in() {$/;"	f	class:caffe::ConcatProto
clear_in	caffe.pb.h	/^inline void ConvolutionProto::clear_in() {$/;"	f	class:caffe::ConvolutionProto
clear_in	caffe.pb.h	/^inline void CopyProto::clear_in() {$/;"	f	class:caffe::CopyProto
clear_in	caffe.pb.h	/^inline void InnerProductProto::clear_in() {$/;"	f	class:caffe::InnerProductProto
clear_in	caffe.pb.h	/^inline void LRNProto::clear_in() {$/;"	f	class:caffe::LRNProto
clear_in	caffe.pb.h	/^inline void NetProto::clear_in() {$/;"	f	class:caffe::NetProto
clear_in	caffe.pb.h	/^inline void PlaceholderProto::clear_in() {$/;"	f	class:caffe::PlaceholderProto
clear_in	caffe.pb.h	/^inline void PoolingProto::clear_in() {$/;"	f	class:caffe::PoolingProto
clear_in	caffe.pb.h	/^inline void ReLUProto::clear_in() {$/;"	f	class:caffe::ReLUProto
clear_in	caffe.pb.h	/^inline void SigmoidProto::clear_in() {$/;"	f	class:caffe::SigmoidProto
clear_in	caffe.pb.h	/^inline void SoftmaxProto::clear_in() {$/;"	f	class:caffe::SoftmaxProto
clear_in	caffe.pb.h	/^inline void SplitProto::clear_in() {$/;"	f	class:caffe::SplitProto
clear_in	caffe.pb.h	/^inline void StoreProto::clear_in() {$/;"	f	class:caffe::StoreProto
clear_in_axis	caffe.pb.cc	/^void BoxingProto::clear_in_axis() {$/;"	f	class:caffe::BoxingProto
clear_in_axis	caffe.pb.h	/^inline void BoxingProto::clear_in_axis() {$/;"	f	class:caffe::BoxingProto
clear_in_envelope	caffe.pb.cc	/^void NetProto::clear_in_envelope() {$/;"	f	class:caffe::NetProto
clear_in_envelope	caffe.pb.h	/^inline void NetProto::clear_in_envelope() {$/;"	f	class:caffe::NetProto
clear_in_num	caffe.pb.cc	/^void BoxingProto::clear_in_num() {$/;"	f	class:caffe::BoxingProto
clear_in_num	caffe.pb.cc	/^void ConcatProto::clear_in_num() {$/;"	f	class:caffe::ConcatProto
clear_in_num	caffe.pb.cc	/^void NetProto::clear_in_num() {$/;"	f	class:caffe::NetProto
clear_in_num	caffe.pb.h	/^inline void BoxingProto::clear_in_num() {$/;"	f	class:caffe::BoxingProto
clear_in_num	caffe.pb.h	/^inline void ConcatProto::clear_in_num() {$/;"	f	class:caffe::ConcatProto
clear_in_num	caffe.pb.h	/^inline void NetProto::clear_in_num() {$/;"	f	class:caffe::NetProto
clear_in_op	caffe.pb.cc	/^void BoxingProto::clear_in_op() {$/;"	f	class:caffe::BoxingProto
clear_in_op	caffe.pb.h	/^inline void BoxingProto::clear_in_op() {$/;"	f	class:caffe::BoxingProto
clear_innerproduct_proto	caffe.pb.cc	/^void LayerProto::clear_innerproduct_proto() {$/;"	f	class:caffe::LayerProto
clear_innerproduct_proto	caffe.pb.h	/^inline void LayerProto::clear_innerproduct_proto() {$/;"	f	class:caffe::LayerProto
clear_input_shape	caffe.pb.cc	/^void NetParameter::clear_input_shape() {$/;"	f	class:caffe::NetParameter
clear_input_shape	caffe.pb.h	/^inline void NetParameter::clear_input_shape() {$/;"	f	class:caffe::NetParameter
clear_int32_data	caffe.pb.cc	/^void BlobProto::clear_int32_data() {$/;"	f	class:caffe::BlobProto
clear_int32_data	caffe.pb.h	/^inline void BlobProto::clear_int32_data() {$/;"	f	class:caffe::BlobProto
clear_int64_data	caffe.pb.cc	/^void BlobProto::clear_int64_data() {$/;"	f	class:caffe::BlobProto
clear_int64_data	caffe.pb.h	/^inline void BlobProto::clear_int64_data() {$/;"	f	class:caffe::BlobProto
clear_iter	caffe.pb.cc	/^void SolverState::clear_iter() {$/;"	f	class:caffe::SolverState
clear_iter	caffe.pb.h	/^inline void SolverState::clear_iter() {$/;"	f	class:caffe::SolverState
clear_k	caffe.pb.cc	/^void LRNProto::clear_k() {$/;"	f	class:caffe::LRNProto
clear_k	caffe.pb.h	/^inline void LRNProto::clear_k() {$/;"	f	class:caffe::LRNProto
clear_kernel_h	caffe.pb.cc	/^void ConvolutionProto::clear_kernel_h() {$/;"	f	class:caffe::ConvolutionProto
clear_kernel_h	caffe.pb.cc	/^void PoolingProto::clear_kernel_h() {$/;"	f	class:caffe::PoolingProto
clear_kernel_h	caffe.pb.h	/^inline void ConvolutionProto::clear_kernel_h() {$/;"	f	class:caffe::ConvolutionProto
clear_kernel_h	caffe.pb.h	/^inline void PoolingProto::clear_kernel_h() {$/;"	f	class:caffe::PoolingProto
clear_kernel_size	caffe.pb.cc	/^void ConvolutionProto::clear_kernel_size() {$/;"	f	class:caffe::ConvolutionProto
clear_kernel_size	caffe.pb.cc	/^void PoolingProto::clear_kernel_size() {$/;"	f	class:caffe::PoolingProto
clear_kernel_size	caffe.pb.h	/^inline void ConvolutionProto::clear_kernel_size() {$/;"	f	class:caffe::ConvolutionProto
clear_kernel_size	caffe.pb.h	/^inline void PoolingProto::clear_kernel_size() {$/;"	f	class:caffe::PoolingProto
clear_kernel_w	caffe.pb.cc	/^void ConvolutionProto::clear_kernel_w() {$/;"	f	class:caffe::ConvolutionProto
clear_kernel_w	caffe.pb.cc	/^void PoolingProto::clear_kernel_w() {$/;"	f	class:caffe::PoolingProto
clear_kernel_w	caffe.pb.h	/^inline void ConvolutionProto::clear_kernel_w() {$/;"	f	class:caffe::ConvolutionProto
clear_kernel_w	caffe.pb.h	/^inline void PoolingProto::clear_kernel_w() {$/;"	f	class:caffe::PoolingProto
clear_label	caffe.pb.cc	/^void LoaderProto::clear_label() {$/;"	f	class:caffe::LoaderProto
clear_label	caffe.pb.cc	/^void MultinomialLogisticLossProto::clear_label() {$/;"	f	class:caffe::MultinomialLogisticLossProto
clear_label	caffe.pb.h	/^inline void LoaderProto::clear_label() {$/;"	f	class:caffe::LoaderProto
clear_label	caffe.pb.h	/^inline void MultinomialLogisticLossProto::clear_label() {$/;"	f	class:caffe::MultinomialLogisticLossProto
clear_layer	caffe.pb.cc	/^void NetParameter::clear_layer() {$/;"	f	class:caffe::NetParameter
clear_layer	caffe.pb.h	/^inline void NetParameter::clear_layer() {$/;"	f	class:caffe::NetParameter
clear_layer_seek_pos	caffe.pb.cc	/^void StoreProto::clear_layer_seek_pos() {$/;"	f	class:caffe::StoreProto
clear_layer_seek_pos	caffe.pb.h	/^inline void StoreProto::clear_layer_seek_pos() {$/;"	f	class:caffe::StoreProto
clear_layer_set	caffe.pb.cc	/^void PlacementGroup::clear_layer_set() {$/;"	f	class:caffe::PlacementGroup
clear_layer_set	caffe.pb.h	/^inline void PlacementGroup::clear_layer_set() {$/;"	f	class:caffe::PlacementGroup
clear_learned_net	caffe.pb.cc	/^void SolverState::clear_learned_net() {$/;"	f	class:caffe::SolverState
clear_learned_net	caffe.pb.h	/^inline void SolverState::clear_learned_net() {$/;"	f	class:caffe::SolverState
clear_level	caffe.pb.cc	/^void NetState::clear_level() {$/;"	f	class:caffe::NetState
clear_level	caffe.pb.h	/^inline void NetState::clear_level() {$/;"	f	class:caffe::NetState
clear_load_layer_names	caffe.pb.cc	/^void LoadPartialModelProto::clear_load_layer_names() {$/;"	f	class:caffe::LoadPartialModelProto
clear_load_layer_names	caffe.pb.h	/^inline void LoadPartialModelProto::clear_load_layer_names() {$/;"	f	class:caffe::LoadPartialModelProto
clear_load_layer_shapes	caffe.pb.cc	/^void LoadPartialModelProto::clear_load_layer_shapes() {$/;"	f	class:caffe::LoadPartialModelProto
clear_load_layer_shapes	caffe.pb.h	/^inline void LoadPartialModelProto::clear_load_layer_shapes() {$/;"	f	class:caffe::LoadPartialModelProto
clear_loader_proto	caffe.pb.cc	/^void LayerProto::clear_loader_proto() {$/;"	f	class:caffe::LayerProto
clear_loader_proto	caffe.pb.h	/^inline void LayerProto::clear_loader_proto() {$/;"	f	class:caffe::LayerProto
clear_loadpartialmodel_proto	caffe.pb.cc	/^void LayerProto::clear_loadpartialmodel_proto() {$/;"	f	class:caffe::LayerProto
clear_loadpartialmodel_proto	caffe.pb.h	/^inline void LayerProto::clear_loadpartialmodel_proto() {$/;"	f	class:caffe::LayerProto
clear_local_size	caffe.pb.cc	/^void LRNProto::clear_local_size() {$/;"	f	class:caffe::LRNProto
clear_local_size	caffe.pb.h	/^inline void LRNProto::clear_local_size() {$/;"	f	class:caffe::LRNProto
clear_loss	caffe.pb.cc	/^void MultinomialLogisticLossProto::clear_loss() {$/;"	f	class:caffe::MultinomialLogisticLossProto
clear_loss	caffe.pb.h	/^inline void MultinomialLogisticLossProto::clear_loss() {$/;"	f	class:caffe::MultinomialLogisticLossProto
clear_lr_mult	caffe.pb.cc	/^void ParamSpec::clear_lr_mult() {$/;"	f	class:caffe::ParamSpec
clear_lr_mult	caffe.pb.h	/^inline void ParamSpec::clear_lr_mult() {$/;"	f	class:caffe::ParamSpec
clear_lr_policy	caffe.pb.cc	/^void SolverProto::clear_lr_policy() {$/;"	f	class:caffe::SolverProto
clear_lr_policy	caffe.pb.h	/^inline void SolverProto::clear_lr_policy() {$/;"	f	class:caffe::SolverProto
clear_lrn_proto	caffe.pb.cc	/^void LayerProto::clear_lrn_proto() {$/;"	f	class:caffe::LayerProto
clear_lrn_proto	caffe.pb.h	/^inline void LayerProto::clear_lrn_proto() {$/;"	f	class:caffe::LayerProto
clear_machine	caffe.pb.cc	/^void Resource::clear_machine() {$/;"	f	class:caffe::Resource
clear_machine	caffe.pb.h	/^inline void Resource::clear_machine() {$/;"	f	class:caffe::Resource
clear_machine_group	caffe.pb.cc	/^void PlacementGroup::clear_machine_group() {$/;"	f	class:caffe::PlacementGroup
clear_machine_group	caffe.pb.h	/^inline void PlacementGroup::clear_machine_group() {$/;"	f	class:caffe::PlacementGroup
clear_machine_id	caffe.pb.cc	/^void SolverProto::clear_machine_id() {$/;"	f	class:caffe::SolverProto
clear_machine_id	caffe.pb.h	/^inline void SolverProto::clear_machine_id() {$/;"	f	class:caffe::SolverProto
clear_max	caffe.pb.cc	/^void FillerParameter::clear_max() {$/;"	f	class:caffe::FillerParameter
clear_max	caffe.pb.h	/^inline void FillerParameter::clear_max() {$/;"	f	class:caffe::FillerParameter
clear_max_iter	caffe.pb.cc	/^void SolverProto::clear_max_iter() {$/;"	f	class:caffe::SolverProto
clear_max_iter	caffe.pb.h	/^inline void SolverProto::clear_max_iter() {$/;"	f	class:caffe::SolverProto
clear_mean	caffe.pb.cc	/^void FillerParameter::clear_mean() {$/;"	f	class:caffe::FillerParameter
clear_mean	caffe.pb.h	/^inline void FillerParameter::clear_mean() {$/;"	f	class:caffe::FillerParameter
clear_min	caffe.pb.cc	/^void FillerParameter::clear_min() {$/;"	f	class:caffe::FillerParameter
clear_min	caffe.pb.h	/^inline void FillerParameter::clear_min() {$/;"	f	class:caffe::FillerParameter
clear_modelupdate_proto	caffe.pb.cc	/^void LayerProto::clear_modelupdate_proto() {$/;"	f	class:caffe::LayerProto
clear_modelupdate_proto	caffe.pb.h	/^inline void LayerProto::clear_modelupdate_proto() {$/;"	f	class:caffe::LayerProto
clear_momentum	caffe.pb.cc	/^void SolverProto::clear_momentum() {$/;"	f	class:caffe::SolverProto
clear_momentum	caffe.pb.h	/^inline void SolverProto::clear_momentum() {$/;"	f	class:caffe::SolverProto
clear_moving_average_fraction	caffe.pb.cc	/^void BatchNormProto::clear_moving_average_fraction() {$/;"	f	class:caffe::BatchNormProto
clear_moving_average_fraction	caffe.pb.h	/^inline void BatchNormProto::clear_moving_average_fraction() {$/;"	f	class:caffe::BatchNormProto
clear_multinomiallogisticloss_proto	caffe.pb.cc	/^void LayerProto::clear_multinomiallogisticloss_proto() {$/;"	f	class:caffe::LayerProto
clear_multinomiallogisticloss_proto	caffe.pb.h	/^inline void LayerProto::clear_multinomiallogisticloss_proto() {$/;"	f	class:caffe::LayerProto
clear_name	caffe.pb.cc	/^void BlobProto::clear_name() {$/;"	f	class:caffe::BlobProto
clear_name	caffe.pb.cc	/^void LayerProto::clear_name() {$/;"	f	class:caffe::LayerProto
clear_name	caffe.pb.cc	/^void LayerSet::clear_name() {$/;"	f	class:caffe::LayerSet
clear_name	caffe.pb.cc	/^void Machine::clear_name() {$/;"	f	class:caffe::Machine
clear_name	caffe.pb.cc	/^void NetParameter::clear_name() {$/;"	f	class:caffe::NetParameter
clear_name	caffe.pb.cc	/^void ParamSpec::clear_name() {$/;"	f	class:caffe::ParamSpec
clear_name	caffe.pb.cc	/^void PlacementGroup::clear_name() {$/;"	f	class:caffe::PlacementGroup
clear_name	caffe.pb.h	/^inline void BlobProto::clear_name() {$/;"	f	class:caffe::BlobProto
clear_name	caffe.pb.h	/^inline void LayerProto::clear_name() {$/;"	f	class:caffe::LayerProto
clear_name	caffe.pb.h	/^inline void LayerSet::clear_name() {$/;"	f	class:caffe::LayerSet
clear_name	caffe.pb.h	/^inline void Machine::clear_name() {$/;"	f	class:caffe::Machine
clear_name	caffe.pb.h	/^inline void NetParameter::clear_name() {$/;"	f	class:caffe::NetParameter
clear_name	caffe.pb.h	/^inline void ParamSpec::clear_name() {$/;"	f	class:caffe::ParamSpec
clear_name	caffe.pb.h	/^inline void PlacementGroup::clear_name() {$/;"	f	class:caffe::PlacementGroup
clear_negative_slope	caffe.pb.cc	/^void ReLUProto::clear_negative_slope() {$/;"	f	class:caffe::ReLUProto
clear_negative_slope	caffe.pb.h	/^inline void ReLUProto::clear_negative_slope() {$/;"	f	class:caffe::ReLUProto
clear_norm_region	caffe.pb.cc	/^void LRNProto::clear_norm_region() {$/;"	f	class:caffe::LRNProto
clear_norm_region	caffe.pb.h	/^inline void LRNProto::clear_norm_region() {$/;"	f	class:caffe::LRNProto
clear_nullupdate_proto	caffe.pb.cc	/^void LayerProto::clear_nullupdate_proto() {$/;"	f	class:caffe::LayerProto
clear_nullupdate_proto	caffe.pb.h	/^inline void LayerProto::clear_nullupdate_proto() {$/;"	f	class:caffe::LayerProto
clear_num	caffe.pb.cc	/^void CopyProto::clear_num() {$/;"	f	class:caffe::CopyProto
clear_num	caffe.pb.h	/^inline void CopyProto::clear_num() {$/;"	f	class:caffe::CopyProto
clear_num_batch_per_sync	caffe.pb.cc	/^void SolverProto::clear_num_batch_per_sync() {$/;"	f	class:caffe::SolverProto
clear_num_batch_per_sync	caffe.pb.h	/^inline void SolverProto::clear_num_batch_per_sync() {$/;"	f	class:caffe::SolverProto
clear_num_data_param_copy	caffe.pb.cc	/^void SolverProto::clear_num_data_param_copy() {$/;"	f	class:caffe::SolverProto
clear_num_data_param_copy	caffe.pb.h	/^inline void SolverProto::clear_num_data_param_copy() {$/;"	f	class:caffe::SolverProto
clear_num_model_param_copy	caffe.pb.cc	/^void SolverProto::clear_num_model_param_copy() {$/;"	f	class:caffe::SolverProto
clear_num_model_param_copy	caffe.pb.h	/^inline void SolverProto::clear_num_model_param_copy() {$/;"	f	class:caffe::SolverProto
clear_num_output	caffe.pb.cc	/^void ConvolutionProto::clear_num_output() {$/;"	f	class:caffe::ConvolutionProto
clear_num_output	caffe.pb.cc	/^void InnerProductProto::clear_num_output() {$/;"	f	class:caffe::InnerProductProto
clear_num_output	caffe.pb.h	/^inline void ConvolutionProto::clear_num_output() {$/;"	f	class:caffe::ConvolutionProto
clear_num_output	caffe.pb.h	/^inline void InnerProductProto::clear_num_output() {$/;"	f	class:caffe::InnerProductProto
clear_old_weight	caffe.pb.cc	/^void ModelUpdateProto::clear_old_weight() {$/;"	f	class:caffe::ModelUpdateProto
clear_old_weight	caffe.pb.h	/^inline void ModelUpdateProto::clear_old_weight() {$/;"	f	class:caffe::ModelUpdateProto
clear_out	caffe.pb.cc	/^void BoxingProto::clear_out() {$/;"	f	class:caffe::BoxingProto
clear_out	caffe.pb.cc	/^void ConcatProto::clear_out() {$/;"	f	class:caffe::ConcatProto
clear_out	caffe.pb.cc	/^void ConvolutionProto::clear_out() {$/;"	f	class:caffe::ConvolutionProto
clear_out	caffe.pb.cc	/^void CopyProto::clear_out() {$/;"	f	class:caffe::CopyProto
clear_out	caffe.pb.cc	/^void InnerProductProto::clear_out() {$/;"	f	class:caffe::InnerProductProto
clear_out	caffe.pb.cc	/^void LRNProto::clear_out() {$/;"	f	class:caffe::LRNProto
clear_out	caffe.pb.cc	/^void LoadPartialModelProto::clear_out() {$/;"	f	class:caffe::LoadPartialModelProto
clear_out	caffe.pb.cc	/^void NetProto::clear_out() {$/;"	f	class:caffe::NetProto
clear_out	caffe.pb.cc	/^void PlaceholderProto::clear_out() {$/;"	f	class:caffe::PlaceholderProto
clear_out	caffe.pb.cc	/^void PoolingProto::clear_out() {$/;"	f	class:caffe::PoolingProto
clear_out	caffe.pb.cc	/^void ReLUProto::clear_out() {$/;"	f	class:caffe::ReLUProto
clear_out	caffe.pb.cc	/^void SigmoidProto::clear_out() {$/;"	f	class:caffe::SigmoidProto
clear_out	caffe.pb.cc	/^void SoftmaxProto::clear_out() {$/;"	f	class:caffe::SoftmaxProto
clear_out	caffe.pb.cc	/^void SplitProto::clear_out() {$/;"	f	class:caffe::SplitProto
clear_out	caffe.pb.cc	/^void StoreProto::clear_out() {$/;"	f	class:caffe::StoreProto
clear_out	caffe.pb.h	/^inline void BoxingProto::clear_out() {$/;"	f	class:caffe::BoxingProto
clear_out	caffe.pb.h	/^inline void ConcatProto::clear_out() {$/;"	f	class:caffe::ConcatProto
clear_out	caffe.pb.h	/^inline void ConvolutionProto::clear_out() {$/;"	f	class:caffe::ConvolutionProto
clear_out	caffe.pb.h	/^inline void CopyProto::clear_out() {$/;"	f	class:caffe::CopyProto
clear_out	caffe.pb.h	/^inline void InnerProductProto::clear_out() {$/;"	f	class:caffe::InnerProductProto
clear_out	caffe.pb.h	/^inline void LRNProto::clear_out() {$/;"	f	class:caffe::LRNProto
clear_out	caffe.pb.h	/^inline void LoadPartialModelProto::clear_out() {$/;"	f	class:caffe::LoadPartialModelProto
clear_out	caffe.pb.h	/^inline void NetProto::clear_out() {$/;"	f	class:caffe::NetProto
clear_out	caffe.pb.h	/^inline void PlaceholderProto::clear_out() {$/;"	f	class:caffe::PlaceholderProto
clear_out	caffe.pb.h	/^inline void PoolingProto::clear_out() {$/;"	f	class:caffe::PoolingProto
clear_out	caffe.pb.h	/^inline void ReLUProto::clear_out() {$/;"	f	class:caffe::ReLUProto
clear_out	caffe.pb.h	/^inline void SigmoidProto::clear_out() {$/;"	f	class:caffe::SigmoidProto
clear_out	caffe.pb.h	/^inline void SoftmaxProto::clear_out() {$/;"	f	class:caffe::SoftmaxProto
clear_out	caffe.pb.h	/^inline void SplitProto::clear_out() {$/;"	f	class:caffe::SplitProto
clear_out	caffe.pb.h	/^inline void StoreProto::clear_out() {$/;"	f	class:caffe::StoreProto
clear_out_axis	caffe.pb.cc	/^void BoxingProto::clear_out_axis() {$/;"	f	class:caffe::BoxingProto
clear_out_axis	caffe.pb.h	/^inline void BoxingProto::clear_out_axis() {$/;"	f	class:caffe::BoxingProto
clear_out_envelope	caffe.pb.cc	/^void NetProto::clear_out_envelope() {$/;"	f	class:caffe::NetProto
clear_out_envelope	caffe.pb.h	/^inline void NetProto::clear_out_envelope() {$/;"	f	class:caffe::NetProto
clear_out_num	caffe.pb.cc	/^void BoxingProto::clear_out_num() {$/;"	f	class:caffe::BoxingProto
clear_out_num	caffe.pb.cc	/^void NetProto::clear_out_num() {$/;"	f	class:caffe::NetProto
clear_out_num	caffe.pb.cc	/^void SplitProto::clear_out_num() {$/;"	f	class:caffe::SplitProto
clear_out_num	caffe.pb.h	/^inline void BoxingProto::clear_out_num() {$/;"	f	class:caffe::BoxingProto
clear_out_num	caffe.pb.h	/^inline void NetProto::clear_out_num() {$/;"	f	class:caffe::NetProto
clear_out_num	caffe.pb.h	/^inline void SplitProto::clear_out_num() {$/;"	f	class:caffe::SplitProto
clear_out_op	caffe.pb.cc	/^void BoxingProto::clear_out_op() {$/;"	f	class:caffe::BoxingProto
clear_out_op	caffe.pb.h	/^inline void BoxingProto::clear_out_op() {$/;"	f	class:caffe::BoxingProto
clear_pad	caffe.pb.cc	/^void ConvolutionProto::clear_pad() {$/;"	f	class:caffe::ConvolutionProto
clear_pad	caffe.pb.cc	/^void PoolingProto::clear_pad() {$/;"	f	class:caffe::PoolingProto
clear_pad	caffe.pb.h	/^inline void ConvolutionProto::clear_pad() {$/;"	f	class:caffe::ConvolutionProto
clear_pad	caffe.pb.h	/^inline void PoolingProto::clear_pad() {$/;"	f	class:caffe::PoolingProto
clear_pad_h	caffe.pb.cc	/^void ConvolutionProto::clear_pad_h() {$/;"	f	class:caffe::ConvolutionProto
clear_pad_h	caffe.pb.cc	/^void PoolingProto::clear_pad_h() {$/;"	f	class:caffe::PoolingProto
clear_pad_h	caffe.pb.h	/^inline void ConvolutionProto::clear_pad_h() {$/;"	f	class:caffe::ConvolutionProto
clear_pad_h	caffe.pb.h	/^inline void PoolingProto::clear_pad_h() {$/;"	f	class:caffe::PoolingProto
clear_pad_w	caffe.pb.cc	/^void ConvolutionProto::clear_pad_w() {$/;"	f	class:caffe::ConvolutionProto
clear_pad_w	caffe.pb.cc	/^void PoolingProto::clear_pad_w() {$/;"	f	class:caffe::PoolingProto
clear_pad_w	caffe.pb.h	/^inline void ConvolutionProto::clear_pad_w() {$/;"	f	class:caffe::ConvolutionProto
clear_pad_w	caffe.pb.h	/^inline void PoolingProto::clear_pad_w() {$/;"	f	class:caffe::PoolingProto
clear_parallel_policy	caffe.pb.cc	/^void PlacementGroup::clear_parallel_policy() {$/;"	f	class:caffe::PlacementGroup
clear_parallel_policy	caffe.pb.h	/^inline void PlacementGroup::clear_parallel_policy() {$/;"	f	class:caffe::PlacementGroup
clear_param	caffe.pb.cc	/^void ConvolutionProto::clear_param() {$/;"	f	class:caffe::ConvolutionProto
clear_param	caffe.pb.cc	/^void InnerProductProto::clear_param() {$/;"	f	class:caffe::InnerProductProto
clear_param	caffe.pb.h	/^inline void ConvolutionProto::clear_param() {$/;"	f	class:caffe::ConvolutionProto
clear_param	caffe.pb.h	/^inline void InnerProductProto::clear_param() {$/;"	f	class:caffe::InnerProductProto
clear_phase	caffe.pb.cc	/^void NetState::clear_phase() {$/;"	f	class:caffe::NetState
clear_phase	caffe.pb.h	/^inline void NetState::clear_phase() {$/;"	f	class:caffe::NetState
clear_piece_size	caffe.pb.cc	/^void LoaderProto::clear_piece_size() {$/;"	f	class:caffe::LoaderProto
clear_piece_size	caffe.pb.h	/^inline void LoaderProto::clear_piece_size() {$/;"	f	class:caffe::LoaderProto
clear_placeholder_proto	caffe.pb.cc	/^void LayerProto::clear_placeholder_proto() {$/;"	f	class:caffe::LayerProto
clear_placeholder_proto	caffe.pb.h	/^inline void LayerProto::clear_placeholder_proto() {$/;"	f	class:caffe::LayerProto
clear_placement_group	caffe.pb.cc	/^void Strategy::clear_placement_group() {$/;"	f	class:caffe::Strategy
clear_placement_group	caffe.pb.h	/^inline void Strategy::clear_placement_group() {$/;"	f	class:caffe::Strategy
clear_pool	caffe.pb.cc	/^void PoolingProto::clear_pool() {$/;"	f	class:caffe::PoolingProto
clear_pool	caffe.pb.h	/^inline void PoolingProto::clear_pool() {$/;"	f	class:caffe::PoolingProto
clear_pooling_proto	caffe.pb.cc	/^void LayerProto::clear_pooling_proto() {$/;"	f	class:caffe::LayerProto
clear_pooling_proto	caffe.pb.h	/^inline void LayerProto::clear_pooling_proto() {$/;"	f	class:caffe::LayerProto
clear_port	caffe.pb.cc	/^void Machine::clear_port() {$/;"	f	class:caffe::Machine
clear_port	caffe.pb.h	/^inline void Machine::clear_port() {$/;"	f	class:caffe::Machine
clear_power	caffe.pb.cc	/^void SolverProto::clear_power() {$/;"	f	class:caffe::SolverProto
clear_power	caffe.pb.h	/^inline void SolverProto::clear_power() {$/;"	f	class:caffe::SolverProto
clear_random_seed	caffe.pb.cc	/^void SolverProto::clear_random_seed() {$/;"	f	class:caffe::SolverProto
clear_random_seed	caffe.pb.h	/^inline void SolverProto::clear_random_seed() {$/;"	f	class:caffe::SolverProto
clear_regularization_type	caffe.pb.cc	/^void SolverProto::clear_regularization_type() {$/;"	f	class:caffe::SolverProto
clear_regularization_type	caffe.pb.h	/^inline void SolverProto::clear_regularization_type() {$/;"	f	class:caffe::SolverProto
clear_relu_proto	caffe.pb.cc	/^void LayerProto::clear_relu_proto() {$/;"	f	class:caffe::LayerProto
clear_relu_proto	caffe.pb.h	/^inline void LayerProto::clear_relu_proto() {$/;"	f	class:caffe::LayerProto
clear_resource	caffe.pb.cc	/^void SolverProto::clear_resource() {$/;"	f	class:caffe::SolverProto
clear_resource	caffe.pb.h	/^inline void SolverProto::clear_resource() {$/;"	f	class:caffe::SolverProto
clear_shape	caffe.pb.cc	/^void BlobProto::clear_shape() {$/;"	f	class:caffe::BlobProto
clear_shape	caffe.pb.h	/^inline void BlobProto::clear_shape() {$/;"	f	class:caffe::BlobProto
clear_share_mode	caffe.pb.cc	/^void ParamSpec::clear_share_mode() {$/;"	f	class:caffe::ParamSpec
clear_share_mode	caffe.pb.h	/^inline void ParamSpec::clear_share_mode() {$/;"	f	class:caffe::ParamSpec
clear_sigmoid_proto	caffe.pb.cc	/^void LayerProto::clear_sigmoid_proto() {$/;"	f	class:caffe::LayerProto
clear_sigmoid_proto	caffe.pb.h	/^inline void LayerProto::clear_sigmoid_proto() {$/;"	f	class:caffe::LayerProto
clear_snapshot	caffe.pb.cc	/^void SolverProto::clear_snapshot() {$/;"	f	class:caffe::SolverProto
clear_snapshot	caffe.pb.h	/^inline void SolverProto::clear_snapshot() {$/;"	f	class:caffe::SolverProto
clear_snapshot_after_train	caffe.pb.cc	/^void SolverProto::clear_snapshot_after_train() {$/;"	f	class:caffe::SolverProto
clear_snapshot_after_train	caffe.pb.h	/^inline void SolverProto::clear_snapshot_after_train() {$/;"	f	class:caffe::SolverProto
clear_snapshot_diff	caffe.pb.cc	/^void SolverProto::clear_snapshot_diff() {$/;"	f	class:caffe::SolverProto
clear_snapshot_diff	caffe.pb.h	/^inline void SolverProto::clear_snapshot_diff() {$/;"	f	class:caffe::SolverProto
clear_snapshot_prefix	caffe.pb.cc	/^void SolverProto::clear_snapshot_prefix() {$/;"	f	class:caffe::SolverProto
clear_snapshot_prefix	caffe.pb.h	/^inline void SolverProto::clear_snapshot_prefix() {$/;"	f	class:caffe::SolverProto
clear_softmax_proto	caffe.pb.cc	/^void LayerProto::clear_softmax_proto() {$/;"	f	class:caffe::LayerProto
clear_softmax_proto	caffe.pb.h	/^inline void LayerProto::clear_softmax_proto() {$/;"	f	class:caffe::LayerProto
clear_solver_type	caffe.pb.cc	/^void SolverProto::clear_solver_type() {$/;"	f	class:caffe::SolverProto
clear_solver_type	caffe.pb.h	/^inline void SolverProto::clear_solver_type() {$/;"	f	class:caffe::SolverProto
clear_source	caffe.pb.cc	/^void LoaderProto::clear_source() {$/;"	f	class:caffe::LoaderProto
clear_source	caffe.pb.h	/^inline void LoaderProto::clear_source() {$/;"	f	class:caffe::LoaderProto
clear_sparse	caffe.pb.cc	/^void FillerParameter::clear_sparse() {$/;"	f	class:caffe::FillerParameter
clear_sparse	caffe.pb.h	/^inline void FillerParameter::clear_sparse() {$/;"	f	class:caffe::FillerParameter
clear_split_proto	caffe.pb.cc	/^void LayerProto::clear_split_proto() {$/;"	f	class:caffe::LayerProto
clear_split_proto	caffe.pb.h	/^inline void LayerProto::clear_split_proto() {$/;"	f	class:caffe::LayerProto
clear_stage	caffe.pb.cc	/^void NetState::clear_stage() {$/;"	f	class:caffe::NetState
clear_stage	caffe.pb.h	/^inline void NetState::clear_stage() {$/;"	f	class:caffe::NetState
clear_state	caffe.pb.cc	/^void NetParameter::clear_state() {$/;"	f	class:caffe::NetParameter
clear_state	caffe.pb.h	/^inline void NetParameter::clear_state() {$/;"	f	class:caffe::NetParameter
clear_std	caffe.pb.cc	/^void FillerParameter::clear_std() {$/;"	f	class:caffe::FillerParameter
clear_std	caffe.pb.h	/^inline void FillerParameter::clear_std() {$/;"	f	class:caffe::FillerParameter
clear_stepsize	caffe.pb.cc	/^void SolverProto::clear_stepsize() {$/;"	f	class:caffe::SolverProto
clear_stepsize	caffe.pb.h	/^inline void SolverProto::clear_stepsize() {$/;"	f	class:caffe::SolverProto
clear_stepvalue	caffe.pb.cc	/^void SolverProto::clear_stepvalue() {$/;"	f	class:caffe::SolverProto
clear_stepvalue	caffe.pb.h	/^inline void SolverProto::clear_stepvalue() {$/;"	f	class:caffe::SolverProto
clear_stop	caffe.pb.cc	/^void StoreProto::clear_stop() {$/;"	f	class:caffe::StoreProto
clear_stop	caffe.pb.h	/^inline void StoreProto::clear_stop() {$/;"	f	class:caffe::StoreProto
clear_store_layer_names	caffe.pb.cc	/^void StoreProto::clear_store_layer_names() {$/;"	f	class:caffe::StoreProto
clear_store_layer_names	caffe.pb.h	/^inline void StoreProto::clear_store_layer_names() {$/;"	f	class:caffe::StoreProto
clear_store_layer_shapes	caffe.pb.cc	/^void StoreProto::clear_store_layer_shapes() {$/;"	f	class:caffe::StoreProto
clear_store_layer_shapes	caffe.pb.h	/^inline void StoreProto::clear_store_layer_shapes() {$/;"	f	class:caffe::StoreProto
clear_store_proto	caffe.pb.cc	/^void LayerProto::clear_store_proto() {$/;"	f	class:caffe::LayerProto
clear_store_proto	caffe.pb.h	/^inline void LayerProto::clear_store_proto() {$/;"	f	class:caffe::LayerProto
clear_strategy	caffe.pb.cc	/^void SolverProto::clear_strategy() {$/;"	f	class:caffe::SolverProto
clear_strategy	caffe.pb.h	/^inline void SolverProto::clear_strategy() {$/;"	f	class:caffe::SolverProto
clear_stride	caffe.pb.cc	/^void ConvolutionProto::clear_stride() {$/;"	f	class:caffe::ConvolutionProto
clear_stride	caffe.pb.cc	/^void PoolingProto::clear_stride() {$/;"	f	class:caffe::PoolingProto
clear_stride	caffe.pb.h	/^inline void ConvolutionProto::clear_stride() {$/;"	f	class:caffe::ConvolutionProto
clear_stride	caffe.pb.h	/^inline void PoolingProto::clear_stride() {$/;"	f	class:caffe::PoolingProto
clear_stride_h	caffe.pb.cc	/^void ConvolutionProto::clear_stride_h() {$/;"	f	class:caffe::ConvolutionProto
clear_stride_h	caffe.pb.cc	/^void PoolingProto::clear_stride_h() {$/;"	f	class:caffe::PoolingProto
clear_stride_h	caffe.pb.h	/^inline void ConvolutionProto::clear_stride_h() {$/;"	f	class:caffe::ConvolutionProto
clear_stride_h	caffe.pb.h	/^inline void PoolingProto::clear_stride_h() {$/;"	f	class:caffe::PoolingProto
clear_stride_w	caffe.pb.cc	/^void ConvolutionProto::clear_stride_w() {$/;"	f	class:caffe::ConvolutionProto
clear_stride_w	caffe.pb.cc	/^void PoolingProto::clear_stride_w() {$/;"	f	class:caffe::PoolingProto
clear_stride_w	caffe.pb.h	/^inline void ConvolutionProto::clear_stride_w() {$/;"	f	class:caffe::ConvolutionProto
clear_stride_w	caffe.pb.h	/^inline void PoolingProto::clear_stride_w() {$/;"	f	class:caffe::PoolingProto
clear_string_data	caffe.pb.cc	/^void BlobProto::clear_string_data() {$/;"	f	class:caffe::BlobProto
clear_string_data	caffe.pb.h	/^inline void BlobProto::clear_string_data() {$/;"	f	class:caffe::BlobProto
clear_test_compute_loss	caffe.pb.cc	/^void SolverProto::clear_test_compute_loss() {$/;"	f	class:caffe::SolverProto
clear_test_compute_loss	caffe.pb.h	/^inline void SolverProto::clear_test_compute_loss() {$/;"	f	class:caffe::SolverProto
clear_test_initialization	caffe.pb.cc	/^void SolverProto::clear_test_initialization() {$/;"	f	class:caffe::SolverProto
clear_test_initialization	caffe.pb.h	/^inline void SolverProto::clear_test_initialization() {$/;"	f	class:caffe::SolverProto
clear_test_interval	caffe.pb.cc	/^void SolverProto::clear_test_interval() {$/;"	f	class:caffe::SolverProto
clear_test_interval	caffe.pb.h	/^inline void SolverProto::clear_test_interval() {$/;"	f	class:caffe::SolverProto
clear_test_iter	caffe.pb.cc	/^void SolverProto::clear_test_iter() {$/;"	f	class:caffe::SolverProto
clear_test_iter	caffe.pb.h	/^inline void SolverProto::clear_test_iter() {$/;"	f	class:caffe::SolverProto
clear_test_net	caffe.pb.cc	/^void SolverProto::clear_test_net() {$/;"	f	class:caffe::SolverProto
clear_test_net	caffe.pb.h	/^inline void SolverProto::clear_test_net() {$/;"	f	class:caffe::SolverProto
clear_test_state	caffe.pb.cc	/^void SolverProto::clear_test_state() {$/;"	f	class:caffe::SolverProto
clear_test_state	caffe.pb.h	/^inline void SolverProto::clear_test_state() {$/;"	f	class:caffe::SolverProto
clear_train_net	caffe.pb.cc	/^void SolverProto::clear_train_net() {$/;"	f	class:caffe::SolverProto
clear_train_net	caffe.pb.h	/^inline void SolverProto::clear_train_net() {$/;"	f	class:caffe::SolverProto
clear_train_state	caffe.pb.cc	/^void SolverProto::clear_train_state() {$/;"	f	class:caffe::SolverProto
clear_train_state	caffe.pb.h	/^inline void SolverProto::clear_train_state() {$/;"	f	class:caffe::SolverProto
clear_type	caffe.pb.cc	/^void FillerParameter::clear_type() {$/;"	f	class:caffe::FillerParameter
clear_type	caffe.pb.cc	/^void LayerProto::clear_type() {$/;"	f	class:caffe::LayerProto
clear_type	caffe.pb.h	/^inline void FillerParameter::clear_type() {$/;"	f	class:caffe::FillerParameter
clear_type	caffe.pb.h	/^inline void LayerProto::clear_type() {$/;"	f	class:caffe::LayerProto
clear_use_global_stats	caffe.pb.cc	/^void BatchNormProto::clear_use_global_stats() {$/;"	f	class:caffe::BatchNormProto
clear_use_global_stats	caffe.pb.h	/^inline void BatchNormProto::clear_use_global_stats() {$/;"	f	class:caffe::BatchNormProto
clear_value	caffe.pb.cc	/^void FillerParameter::clear_value() {$/;"	f	class:caffe::FillerParameter
clear_value	caffe.pb.h	/^inline void FillerParameter::clear_value() {$/;"	f	class:caffe::FillerParameter
clear_weight	caffe.pb.cc	/^void ModelUpdateProto::clear_weight() {$/;"	f	class:caffe::ModelUpdateProto
clear_weight	caffe.pb.cc	/^void NullUpdateProto::clear_weight() {$/;"	f	class:caffe::NullUpdateProto
clear_weight	caffe.pb.h	/^inline void ModelUpdateProto::clear_weight() {$/;"	f	class:caffe::ModelUpdateProto
clear_weight	caffe.pb.h	/^inline void NullUpdateProto::clear_weight() {$/;"	f	class:caffe::NullUpdateProto
clear_weight_decay	caffe.pb.cc	/^void SolverProto::clear_weight_decay() {$/;"	f	class:caffe::SolverProto
clear_weight_decay	caffe.pb.h	/^inline void SolverProto::clear_weight_decay() {$/;"	f	class:caffe::SolverProto
clear_weight_filler	caffe.pb.cc	/^void ConvolutionProto::clear_weight_filler() {$/;"	f	class:caffe::ConvolutionProto
clear_weight_filler	caffe.pb.cc	/^void InnerProductProto::clear_weight_filler() {$/;"	f	class:caffe::InnerProductProto
clear_weight_filler	caffe.pb.h	/^inline void ConvolutionProto::clear_weight_filler() {$/;"	f	class:caffe::ConvolutionProto
clear_weight_filler	caffe.pb.h	/^inline void InnerProductProto::clear_weight_filler() {$/;"	f	class:caffe::InnerProductProto
clear_width	caffe.pb.cc	/^void LoaderProto::clear_width() {$/;"	f	class:caffe::LoaderProto
clear_width	caffe.pb.h	/^inline void LoaderProto::clear_width() {$/;"	f	class:caffe::LoaderProto
clip_gradients	caffe.pb.cc	/^float SolverProto::clip_gradients() const {$/;"	f	class:caffe::SolverProto
clip_gradients	caffe.pb.h	/^inline float SolverProto::clip_gradients() const {$/;"	f	class:caffe::SolverProto
clip_gradients_	caffe.pb.h	/^  float clip_gradients_;$/;"	m	class:caffe::SolverProto
concat_proto	caffe.pb.cc	/^const ::caffe::ConcatProto& LayerProto::concat_proto() const {$/;"	f	class:caffe::LayerProto
concat_proto	caffe.pb.h	/^inline const ::caffe::ConcatProto& LayerProto::concat_proto() const {$/;"	f	class:caffe::LayerProto
concat_proto_	caffe.pb.h	/^  ::caffe::ConcatProto* concat_proto_;$/;"	m	class:caffe::LayerProto
convolution_proto	caffe.pb.cc	/^const ::caffe::ConvolutionProto& LayerProto::convolution_proto() const {$/;"	f	class:caffe::LayerProto
convolution_proto	caffe.pb.h	/^inline const ::caffe::ConvolutionProto& LayerProto::convolution_proto() const {$/;"	f	class:caffe::LayerProto
convolution_proto_	caffe.pb.h	/^  ::caffe::ConvolutionProto* convolution_proto_;$/;"	m	class:caffe::LayerProto
copy_type	caffe.pb.cc	/^::caffe::CopyType CopyProto::copy_type() const {$/;"	f	class:caffe::CopyProto
copy_type	caffe.pb.h	/^inline ::caffe::CopyType CopyProto::copy_type() const {$/;"	f	class:caffe::CopyProto
copy_type_	caffe.pb.h	/^  int copy_type_;$/;"	m	class:caffe::CopyProto
current_step	caffe.pb.cc	/^::google::protobuf::int32 SolverState::current_step() const {$/;"	f	class:caffe::SolverState
current_step	caffe.pb.h	/^inline ::google::protobuf::int32 SolverState::current_step() const {$/;"	f	class:caffe::SolverState
current_step_	caffe.pb.h	/^  ::google::protobuf::int32 current_step_;$/;"	m	class:caffe::SolverState
data	caffe.pb.cc	/^const ::std::string& LoaderProto::data() const {$/;"	f	class:caffe::LoaderProto
data	caffe.pb.cc	/^const ::std::string& MultinomialLogisticLossProto::data() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
data	caffe.pb.h	/^inline const ::std::string& LoaderProto::data() const {$/;"	f	class:caffe::LoaderProto
data	caffe.pb.h	/^inline const ::std::string& MultinomialLogisticLossProto::data() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
data_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr data_;$/;"	m	class:caffe::LoaderProto
data_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr data_;$/;"	m	class:caffe::MultinomialLogisticLossProto
data_type	caffe.pb.cc	/^::caffe::BlobProto_DataType BlobProto::data_type() const {$/;"	f	class:caffe::BlobProto
data_type	caffe.pb.h	/^inline ::caffe::BlobProto_DataType BlobProto::data_type() const {$/;"	f	class:caffe::BlobProto
data_type_	caffe.pb.h	/^  int data_type_;$/;"	m	class:caffe::BlobProto
dataflow	graph.cc	/^namespace dataflow {$/;"	n	file:
dataflow	graph.h	/^namespace dataflow {$/;"	n
dataflow	graph_parser.h	/^namespace dataflow {$/;"	n
dataflow	layer_type.h	/^namespace dataflow {$/;"	n
dataflow	object_pool.h	/^namespace dataflow {$/;"	n
dataflow	object_pool_test.cc	/^namespace dataflow {$/;"	n	file:
dataflow	ops.h	/^namespace dataflow {$/;"	n
debug_info	caffe.pb.cc	/^bool NetParameter::debug_info() const {$/;"	f	class:caffe::NetParameter
debug_info	caffe.pb.cc	/^bool SolverProto::debug_info() const {$/;"	f	class:caffe::SolverProto
debug_info	caffe.pb.h	/^inline bool NetParameter::debug_info() const {$/;"	f	class:caffe::NetParameter
debug_info	caffe.pb.h	/^inline bool SolverProto::debug_info() const {$/;"	f	class:caffe::SolverProto
debug_info_	caffe.pb.h	/^  bool debug_info_;$/;"	m	class:caffe::NetParameter
debug_info_	caffe.pb.h	/^  bool debug_info_;$/;"	m	class:caffe::SolverProto
decay_mult	caffe.pb.cc	/^float ParamSpec::decay_mult() const {$/;"	f	class:caffe::ParamSpec
decay_mult	caffe.pb.h	/^inline float ParamSpec::decay_mult() const {$/;"	f	class:caffe::ParamSpec
decay_mult_	caffe.pb.h	/^  float decay_mult_;$/;"	m	class:caffe::ParamSpec
default_instance	caffe.pb.cc	/^const BatchNormProto& BatchNormProto::default_instance() {$/;"	f	class:caffe::BatchNormProto
default_instance	caffe.pb.cc	/^const BlobProto& BlobProto::default_instance() {$/;"	f	class:caffe::BlobProto
default_instance	caffe.pb.cc	/^const BlobShape& BlobShape::default_instance() {$/;"	f	class:caffe::BlobShape
default_instance	caffe.pb.cc	/^const BoxingProto& BoxingProto::default_instance() {$/;"	f	class:caffe::BoxingProto
default_instance	caffe.pb.cc	/^const ConcatProto& ConcatProto::default_instance() {$/;"	f	class:caffe::ConcatProto
default_instance	caffe.pb.cc	/^const ConvolutionProto& ConvolutionProto::default_instance() {$/;"	f	class:caffe::ConvolutionProto
default_instance	caffe.pb.cc	/^const CopyProto& CopyProto::default_instance() {$/;"	f	class:caffe::CopyProto
default_instance	caffe.pb.cc	/^const DeviceGroup& DeviceGroup::default_instance() {$/;"	f	class:caffe::DeviceGroup
default_instance	caffe.pb.cc	/^const DeviceSet& DeviceSet::default_instance() {$/;"	f	class:caffe::DeviceSet
default_instance	caffe.pb.cc	/^const FillerParameter& FillerParameter::default_instance() {$/;"	f	class:caffe::FillerParameter
default_instance	caffe.pb.cc	/^const InnerProductProto& InnerProductProto::default_instance() {$/;"	f	class:caffe::InnerProductProto
default_instance	caffe.pb.cc	/^const LRNProto& LRNProto::default_instance() {$/;"	f	class:caffe::LRNProto
default_instance	caffe.pb.cc	/^const LayerProto& LayerProto::default_instance() {$/;"	f	class:caffe::LayerProto
default_instance	caffe.pb.cc	/^const LayerSet& LayerSet::default_instance() {$/;"	f	class:caffe::LayerSet
default_instance	caffe.pb.cc	/^const LoadPartialModelProto& LoadPartialModelProto::default_instance() {$/;"	f	class:caffe::LoadPartialModelProto
default_instance	caffe.pb.cc	/^const LoaderProto& LoaderProto::default_instance() {$/;"	f	class:caffe::LoaderProto
default_instance	caffe.pb.cc	/^const Machine& Machine::default_instance() {$/;"	f	class:caffe::Machine
default_instance	caffe.pb.cc	/^const MachineGroup& MachineGroup::default_instance() {$/;"	f	class:caffe::MachineGroup
default_instance	caffe.pb.cc	/^const ModelUpdateProto& ModelUpdateProto::default_instance() {$/;"	f	class:caffe::ModelUpdateProto
default_instance	caffe.pb.cc	/^const MultinomialLogisticLossProto& MultinomialLogisticLossProto::default_instance() {$/;"	f	class:caffe::MultinomialLogisticLossProto
default_instance	caffe.pb.cc	/^const NetParameter& NetParameter::default_instance() {$/;"	f	class:caffe::NetParameter
default_instance	caffe.pb.cc	/^const NetProto& NetProto::default_instance() {$/;"	f	class:caffe::NetProto
default_instance	caffe.pb.cc	/^const NetState& NetState::default_instance() {$/;"	f	class:caffe::NetState
default_instance	caffe.pb.cc	/^const NullUpdateProto& NullUpdateProto::default_instance() {$/;"	f	class:caffe::NullUpdateProto
default_instance	caffe.pb.cc	/^const ParamSpec& ParamSpec::default_instance() {$/;"	f	class:caffe::ParamSpec
default_instance	caffe.pb.cc	/^const PlaceholderProto& PlaceholderProto::default_instance() {$/;"	f	class:caffe::PlaceholderProto
default_instance	caffe.pb.cc	/^const PlacementGroup& PlacementGroup::default_instance() {$/;"	f	class:caffe::PlacementGroup
default_instance	caffe.pb.cc	/^const PoolingProto& PoolingProto::default_instance() {$/;"	f	class:caffe::PoolingProto
default_instance	caffe.pb.cc	/^const ReLUProto& ReLUProto::default_instance() {$/;"	f	class:caffe::ReLUProto
default_instance	caffe.pb.cc	/^const Resource& Resource::default_instance() {$/;"	f	class:caffe::Resource
default_instance	caffe.pb.cc	/^const SigmoidProto& SigmoidProto::default_instance() {$/;"	f	class:caffe::SigmoidProto
default_instance	caffe.pb.cc	/^const SoftmaxProto& SoftmaxProto::default_instance() {$/;"	f	class:caffe::SoftmaxProto
default_instance	caffe.pb.cc	/^const SolverProto& SolverProto::default_instance() {$/;"	f	class:caffe::SolverProto
default_instance	caffe.pb.cc	/^const SolverState& SolverState::default_instance() {$/;"	f	class:caffe::SolverState
default_instance	caffe.pb.cc	/^const SplitProto& SplitProto::default_instance() {$/;"	f	class:caffe::SplitProto
default_instance	caffe.pb.cc	/^const StoreProto& StoreProto::default_instance() {$/;"	f	class:caffe::StoreProto
default_instance	caffe.pb.cc	/^const Strategy& Strategy::default_instance() {$/;"	f	class:caffe::Strategy
delta	caffe.pb.cc	/^float SolverProto::delta() const {$/;"	f	class:caffe::SolverProto
delta	caffe.pb.h	/^inline float SolverProto::delta() const {$/;"	f	class:caffe::SolverProto
delta_	caffe.pb.h	/^  float delta_;$/;"	m	class:caffe::SolverProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* BatchNormProto::descriptor() {$/;"	f	class:caffe::BatchNormProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* BlobProto::descriptor() {$/;"	f	class:caffe::BlobProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* BlobShape::descriptor() {$/;"	f	class:caffe::BlobShape
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* BoxingProto::descriptor() {$/;"	f	class:caffe::BoxingProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* ConcatProto::descriptor() {$/;"	f	class:caffe::ConcatProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* ConvolutionProto::descriptor() {$/;"	f	class:caffe::ConvolutionProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* CopyProto::descriptor() {$/;"	f	class:caffe::CopyProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* DeviceGroup::descriptor() {$/;"	f	class:caffe::DeviceGroup
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* DeviceSet::descriptor() {$/;"	f	class:caffe::DeviceSet
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* FillerParameter::descriptor() {$/;"	f	class:caffe::FillerParameter
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* InnerProductProto::descriptor() {$/;"	f	class:caffe::InnerProductProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* LRNProto::descriptor() {$/;"	f	class:caffe::LRNProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* LayerProto::descriptor() {$/;"	f	class:caffe::LayerProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* LayerSet::descriptor() {$/;"	f	class:caffe::LayerSet
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* LoadPartialModelProto::descriptor() {$/;"	f	class:caffe::LoadPartialModelProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* LoaderProto::descriptor() {$/;"	f	class:caffe::LoaderProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* Machine::descriptor() {$/;"	f	class:caffe::Machine
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* MachineGroup::descriptor() {$/;"	f	class:caffe::MachineGroup
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* ModelUpdateProto::descriptor() {$/;"	f	class:caffe::ModelUpdateProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* MultinomialLogisticLossProto::descriptor() {$/;"	f	class:caffe::MultinomialLogisticLossProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* NetParameter::descriptor() {$/;"	f	class:caffe::NetParameter
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* NetProto::descriptor() {$/;"	f	class:caffe::NetProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* NetState::descriptor() {$/;"	f	class:caffe::NetState
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* NullUpdateProto::descriptor() {$/;"	f	class:caffe::NullUpdateProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* ParamSpec::descriptor() {$/;"	f	class:caffe::ParamSpec
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* PlaceholderProto::descriptor() {$/;"	f	class:caffe::PlaceholderProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* PlacementGroup::descriptor() {$/;"	f	class:caffe::PlacementGroup
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* PoolingProto::descriptor() {$/;"	f	class:caffe::PoolingProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* ReLUProto::descriptor() {$/;"	f	class:caffe::ReLUProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* Resource::descriptor() {$/;"	f	class:caffe::Resource
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* SigmoidProto::descriptor() {$/;"	f	class:caffe::SigmoidProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* SoftmaxProto::descriptor() {$/;"	f	class:caffe::SoftmaxProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* SolverProto::descriptor() {$/;"	f	class:caffe::SolverProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* SolverState::descriptor() {$/;"	f	class:caffe::SolverState
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* SplitProto::descriptor() {$/;"	f	class:caffe::SplitProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* StoreProto::descriptor() {$/;"	f	class:caffe::StoreProto
descriptor	caffe.pb.cc	/^const ::google::protobuf::Descriptor* Strategy::descriptor() {$/;"	f	class:caffe::Strategy
device_group	caffe.pb.cc	/^const ::caffe::DeviceGroup& PlacementGroup::device_group() const {$/;"	f	class:caffe::PlacementGroup
device_group	caffe.pb.h	/^inline const ::caffe::DeviceGroup& PlacementGroup::device_group() const {$/;"	f	class:caffe::PlacementGroup
device_group_	caffe.pb.h	/^  ::caffe::DeviceGroup* device_group_;$/;"	m	class:caffe::PlacementGroup
device_id	caffe.pb.cc	/^::google::protobuf::int32 DeviceSet::device_id(int index) const {$/;"	f	class:caffe::DeviceSet
device_id	caffe.pb.cc	/^DeviceSet::device_id() const {$/;"	f	class:caffe::DeviceSet
device_id	caffe.pb.h	/^DeviceSet::device_id() const {$/;"	f	class:caffe::DeviceSet
device_id	caffe.pb.h	/^inline ::google::protobuf::int32 DeviceSet::device_id(int index) const {$/;"	f	class:caffe::DeviceSet
device_id_	caffe.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > device_id_;$/;"	m	class:caffe::DeviceSet
device_id_size	caffe.pb.cc	/^int DeviceSet::device_id_size() const {$/;"	f	class:caffe::DeviceSet
device_id_size	caffe.pb.h	/^inline int DeviceSet::device_id_size() const {$/;"	f	class:caffe::DeviceSet
device_set	caffe.pb.cc	/^const ::caffe::DeviceSet& Machine::device_set() const {$/;"	f	class:caffe::Machine
device_set	caffe.pb.h	/^inline const ::caffe::DeviceSet& Machine::device_set() const {$/;"	f	class:caffe::Machine
device_set_	caffe.pb.h	/^  ::caffe::DeviceSet* device_set_;$/;"	m	class:caffe::Machine
dim	caffe.pb.cc	/^::google::protobuf::int64 BlobShape::dim(int index) const {$/;"	f	class:caffe::BlobShape
dim	caffe.pb.cc	/^BlobShape::dim() const {$/;"	f	class:caffe::BlobShape
dim	caffe.pb.h	/^BlobShape::dim() const {$/;"	f	class:caffe::BlobShape
dim	caffe.pb.h	/^inline ::google::protobuf::int64 BlobShape::dim(int index) const {$/;"	f	class:caffe::BlobShape
dim_	caffe.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > dim_;$/;"	m	class:caffe::BlobShape
dim_size	caffe.pb.cc	/^int BlobShape::dim_size() const {$/;"	f	class:caffe::BlobShape
dim_size	caffe.pb.h	/^inline int BlobShape::dim_size() const {$/;"	f	class:caffe::BlobShape
display	caffe.pb.cc	/^::google::protobuf::int32 SolverProto::display() const {$/;"	f	class:caffe::SolverProto
display	caffe.pb.h	/^inline ::google::protobuf::int32 SolverProto::display() const {$/;"	f	class:caffe::SolverProto
display_	caffe.pb.h	/^  ::google::protobuf::int32 display_;$/;"	m	class:caffe::SolverProto
double_data	caffe.pb.cc	/^BlobProto::double_data() const {$/;"	f	class:caffe::BlobProto
double_data	caffe.pb.cc	/^double BlobProto::double_data(int index) const {$/;"	f	class:caffe::BlobProto
double_data	caffe.pb.h	/^BlobProto::double_data() const {$/;"	f	class:caffe::BlobProto
double_data	caffe.pb.h	/^inline double BlobProto::double_data(int index) const {$/;"	f	class:caffe::BlobProto
double_data_	caffe.pb.h	/^  ::google::protobuf::RepeatedField< double > double_data_;$/;"	m	class:caffe::BlobProto
double_data_size	caffe.pb.cc	/^int BlobProto::double_data_size() const {$/;"	f	class:caffe::BlobProto
double_data_size	caffe.pb.h	/^inline int BlobProto::double_data_size() const {$/;"	f	class:caffe::BlobProto
dst	graph.h	/^  int dst;$/;"	m	struct:dataflow::EdgeInfo
edge_index_	graph.h	/^  std::unordered_map<std::string, int> edge_index_;$/;"	m	class:dataflow::Graph
edge_pool_	graph.h	/^  static ObjectPool<Edge> edge_pool_;$/;"	m	class:dataflow::Graph
edges_	graph.h	/^  std::unordered_map<int, Edge*> edges_;$/;"	m	class:dataflow::Graph
end	caffe.pb.cc	/^::google::protobuf::int32 DeviceGroup::end() const {$/;"	f	class:caffe::DeviceGroup
end	caffe.pb.cc	/^::google::protobuf::int32 MachineGroup::end() const {$/;"	f	class:caffe::MachineGroup
end	caffe.pb.h	/^inline ::google::protobuf::int32 DeviceGroup::end() const {$/;"	f	class:caffe::DeviceGroup
end	caffe.pb.h	/^inline ::google::protobuf::int32 MachineGroup::end() const {$/;"	f	class:caffe::MachineGroup
end_	caffe.pb.h	/^  ::google::protobuf::int32 end_;$/;"	m	class:caffe::DeviceGroup
end_	caffe.pb.h	/^  ::google::protobuf::int32 end_;$/;"	m	class:caffe::MachineGroup
engine	caffe.pb.cc	/^::caffe::ConvolutionProto_Engine ConvolutionProto::engine() const {$/;"	f	class:caffe::ConvolutionProto
engine	caffe.pb.cc	/^::caffe::LRNProto_Engine LRNProto::engine() const {$/;"	f	class:caffe::LRNProto
engine	caffe.pb.cc	/^::caffe::PoolingProto_Engine PoolingProto::engine() const {$/;"	f	class:caffe::PoolingProto
engine	caffe.pb.cc	/^::caffe::ReLUProto_Engine ReLUProto::engine() const {$/;"	f	class:caffe::ReLUProto
engine	caffe.pb.cc	/^::caffe::SigmoidProto_Engine SigmoidProto::engine() const {$/;"	f	class:caffe::SigmoidProto
engine	caffe.pb.cc	/^::caffe::SoftmaxProto_Engine SoftmaxProto::engine() const {$/;"	f	class:caffe::SoftmaxProto
engine	caffe.pb.cc	/^::caffe::StoreProto_Engine StoreProto::engine() const {$/;"	f	class:caffe::StoreProto
engine	caffe.pb.h	/^inline ::caffe::ConvolutionProto_Engine ConvolutionProto::engine() const {$/;"	f	class:caffe::ConvolutionProto
engine	caffe.pb.h	/^inline ::caffe::LRNProto_Engine LRNProto::engine() const {$/;"	f	class:caffe::LRNProto
engine	caffe.pb.h	/^inline ::caffe::PoolingProto_Engine PoolingProto::engine() const {$/;"	f	class:caffe::PoolingProto
engine	caffe.pb.h	/^inline ::caffe::ReLUProto_Engine ReLUProto::engine() const {$/;"	f	class:caffe::ReLUProto
engine	caffe.pb.h	/^inline ::caffe::SigmoidProto_Engine SigmoidProto::engine() const {$/;"	f	class:caffe::SigmoidProto
engine	caffe.pb.h	/^inline ::caffe::SoftmaxProto_Engine SoftmaxProto::engine() const {$/;"	f	class:caffe::SoftmaxProto
engine	caffe.pb.h	/^inline ::caffe::StoreProto_Engine StoreProto::engine() const {$/;"	f	class:caffe::StoreProto
engine_	caffe.pb.h	/^  int engine_;$/;"	m	class:caffe::ConvolutionProto
engine_	caffe.pb.h	/^  int engine_;$/;"	m	class:caffe::LRNProto
engine_	caffe.pb.h	/^  int engine_;$/;"	m	class:caffe::PoolingProto
engine_	caffe.pb.h	/^  int engine_;$/;"	m	class:caffe::ReLUProto
engine_	caffe.pb.h	/^  int engine_;$/;"	m	class:caffe::SigmoidProto
engine_	caffe.pb.h	/^  int engine_;$/;"	m	class:caffe::SoftmaxProto
engine_	caffe.pb.h	/^  int engine_;$/;"	m	class:caffe::StoreProto
eps	caffe.pb.cc	/^float BatchNormProto::eps() const {$/;"	f	class:caffe::BatchNormProto
eps	caffe.pb.h	/^inline float BatchNormProto::eps() const {$/;"	f	class:caffe::BatchNormProto
eps_	caffe.pb.h	/^  float eps_;$/;"	m	class:caffe::BatchNormProto
file_default_instances	caffe.pb.cc	/^static ::google::protobuf::Message const * const file_default_instances[] = {$/;"	m	class:caffe::protobuf_caffe_2eproto::google::protobuf	file:
file_level_enum_descriptors	caffe.pb.cc	/^const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[17];$/;"	m	namespace:caffe::protobuf_caffe_2eproto::__anon1	file:
file_level_metadata	caffe.pb.cc	/^::google::protobuf::Metadata file_level_metadata[37];$/;"	m	namespace:caffe::protobuf_caffe_2eproto::__anon1	file:
float_data	caffe.pb.cc	/^BlobProto::float_data() const {$/;"	f	class:caffe::BlobProto
float_data	caffe.pb.cc	/^float BlobProto::float_data(int index) const {$/;"	f	class:caffe::BlobProto
float_data	caffe.pb.h	/^BlobProto::float_data() const {$/;"	f	class:caffe::BlobProto
float_data	caffe.pb.h	/^inline float BlobProto::float_data(int index) const {$/;"	f	class:caffe::BlobProto
float_data_	caffe.pb.h	/^  ::google::protobuf::RepeatedField< float > float_data_;$/;"	m	class:caffe::BlobProto
float_data_size	caffe.pb.cc	/^int BlobProto::float_data_size() const {$/;"	f	class:caffe::BlobProto
float_data_size	caffe.pb.h	/^inline int BlobProto::float_data_size() const {$/;"	f	class:caffe::BlobProto
force_backward	caffe.pb.cc	/^bool NetParameter::force_backward() const {$/;"	f	class:caffe::NetParameter
force_backward	caffe.pb.h	/^inline bool NetParameter::force_backward() const {$/;"	f	class:caffe::NetParameter
force_backward_	caffe.pb.h	/^  bool force_backward_;$/;"	m	class:caffe::NetParameter
forward_is_sender	caffe.pb.cc	/^bool NetProto::forward_is_sender() const {$/;"	f	class:caffe::NetProto
forward_is_sender	caffe.pb.h	/^inline bool NetProto::forward_is_sender() const {$/;"	f	class:caffe::NetProto
forward_is_sender_	caffe.pb.h	/^  bool forward_is_sender_;$/;"	m	class:caffe::NetProto
free_vec_	object_pool.h	/^  std::queue<Type*> free_vec_;$/;"	m	class:dataflow::ObjectPool
gamma	caffe.pb.cc	/^float SolverProto::gamma() const {$/;"	f	class:caffe::SolverProto
gamma	caffe.pb.h	/^inline float SolverProto::gamma() const {$/;"	f	class:caffe::SolverProto
gamma_	caffe.pb.h	/^  float gamma_;$/;"	m	class:caffe::SolverProto
global_pooling	caffe.pb.cc	/^bool PoolingProto::global_pooling() const {$/;"	f	class:caffe::PoolingProto
global_pooling	caffe.pb.h	/^inline bool PoolingProto::global_pooling() const {$/;"	f	class:caffe::PoolingProto
global_pooling_	caffe.pb.h	/^  bool global_pooling_;$/;"	m	class:caffe::PoolingProto
google	caffe.pb.h	/^namespace google {$/;"	n
gradient	caffe.pb.cc	/^const ::std::string& ModelUpdateProto::gradient() const {$/;"	f	class:caffe::ModelUpdateProto
gradient	caffe.pb.h	/^inline const ::std::string& ModelUpdateProto::gradient() const {$/;"	f	class:caffe::ModelUpdateProto
gradient_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr gradient_;$/;"	m	class:caffe::ModelUpdateProto
group	caffe.pb.cc	/^::google::protobuf::uint32 ConvolutionProto::group() const {$/;"	f	class:caffe::ConvolutionProto
group	caffe.pb.h	/^inline ::google::protobuf::uint32 ConvolutionProto::group() const {$/;"	f	class:caffe::ConvolutionProto
group_	caffe.pb.h	/^  ::google::protobuf::uint32 group_;$/;"	m	class:caffe::ConvolutionProto
has_alpha	caffe.pb.cc	/^bool LRNProto::has_alpha() const {$/;"	f	class:caffe::LRNProto
has_alpha	caffe.pb.h	/^inline bool LRNProto::has_alpha() const {$/;"	f	class:caffe::LRNProto
has_average_loss	caffe.pb.cc	/^bool SolverProto::has_average_loss() const {$/;"	f	class:caffe::SolverProto
has_average_loss	caffe.pb.h	/^inline bool SolverProto::has_average_loss() const {$/;"	f	class:caffe::SolverProto
has_axis	caffe.pb.cc	/^bool ConcatProto::has_axis() const {$/;"	f	class:caffe::ConcatProto
has_axis	caffe.pb.cc	/^bool InnerProductProto::has_axis() const {$/;"	f	class:caffe::InnerProductProto
has_axis	caffe.pb.cc	/^bool SoftmaxProto::has_axis() const {$/;"	f	class:caffe::SoftmaxProto
has_axis	caffe.pb.h	/^inline bool ConcatProto::has_axis() const {$/;"	f	class:caffe::ConcatProto
has_axis	caffe.pb.h	/^inline bool InnerProductProto::has_axis() const {$/;"	f	class:caffe::InnerProductProto
has_axis	caffe.pb.h	/^inline bool SoftmaxProto::has_axis() const {$/;"	f	class:caffe::SoftmaxProto
has_backward_in_op	caffe.pb.cc	/^bool BoxingProto::has_backward_in_op() const {$/;"	f	class:caffe::BoxingProto
has_backward_in_op	caffe.pb.h	/^inline bool BoxingProto::has_backward_in_op() const {$/;"	f	class:caffe::BoxingProto
has_backward_out_op	caffe.pb.cc	/^bool BoxingProto::has_backward_out_op() const {$/;"	f	class:caffe::BoxingProto
has_backward_out_op	caffe.pb.h	/^inline bool BoxingProto::has_backward_out_op() const {$/;"	f	class:caffe::BoxingProto
has_base_lr	caffe.pb.cc	/^bool SolverProto::has_base_lr() const {$/;"	f	class:caffe::SolverProto
has_base_lr	caffe.pb.h	/^inline bool SolverProto::has_base_lr() const {$/;"	f	class:caffe::SolverProto
has_batchnorm_proto	caffe.pb.cc	/^bool LayerProto::has_batchnorm_proto() const {$/;"	f	class:caffe::LayerProto
has_batchnorm_proto	caffe.pb.h	/^inline bool LayerProto::has_batchnorm_proto() const {$/;"	f	class:caffe::LayerProto
has_begin	caffe.pb.cc	/^bool DeviceGroup::has_begin() const {$/;"	f	class:caffe::DeviceGroup
has_begin	caffe.pb.cc	/^bool MachineGroup::has_begin() const {$/;"	f	class:caffe::MachineGroup
has_begin	caffe.pb.h	/^inline bool DeviceGroup::has_begin() const {$/;"	f	class:caffe::DeviceGroup
has_begin	caffe.pb.h	/^inline bool MachineGroup::has_begin() const {$/;"	f	class:caffe::MachineGroup
has_beta	caffe.pb.cc	/^bool LRNProto::has_beta() const {$/;"	f	class:caffe::LRNProto
has_beta	caffe.pb.h	/^inline bool LRNProto::has_beta() const {$/;"	f	class:caffe::LRNProto
has_bias_filler	caffe.pb.cc	/^bool ConvolutionProto::has_bias_filler() const {$/;"	f	class:caffe::ConvolutionProto
has_bias_filler	caffe.pb.cc	/^bool InnerProductProto::has_bias_filler() const {$/;"	f	class:caffe::InnerProductProto
has_bias_filler	caffe.pb.h	/^inline bool ConvolutionProto::has_bias_filler() const {$/;"	f	class:caffe::ConvolutionProto
has_bias_filler	caffe.pb.h	/^inline bool InnerProductProto::has_bias_filler() const {$/;"	f	class:caffe::InnerProductProto
has_bias_term	caffe.pb.cc	/^bool ConvolutionProto::has_bias_term() const {$/;"	f	class:caffe::ConvolutionProto
has_bias_term	caffe.pb.cc	/^bool InnerProductProto::has_bias_term() const {$/;"	f	class:caffe::InnerProductProto
has_bias_term	caffe.pb.h	/^inline bool ConvolutionProto::has_bias_term() const {$/;"	f	class:caffe::ConvolutionProto
has_bias_term	caffe.pb.h	/^inline bool InnerProductProto::has_bias_term() const {$/;"	f	class:caffe::InnerProductProto
has_byte_data	caffe.pb.cc	/^bool BlobProto::has_byte_data() const {$/;"	f	class:caffe::BlobProto
has_byte_data	caffe.pb.h	/^inline bool BlobProto::has_byte_data() const {$/;"	f	class:caffe::BlobProto
has_channel	caffe.pb.cc	/^bool LoaderProto::has_channel() const {$/;"	f	class:caffe::LoaderProto
has_channel	caffe.pb.h	/^inline bool LoaderProto::has_channel() const {$/;"	f	class:caffe::LoaderProto
has_clip_gradients	caffe.pb.cc	/^bool SolverProto::has_clip_gradients() const {$/;"	f	class:caffe::SolverProto
has_clip_gradients	caffe.pb.h	/^inline bool SolverProto::has_clip_gradients() const {$/;"	f	class:caffe::SolverProto
has_concat_proto	caffe.pb.cc	/^bool LayerProto::has_concat_proto() const {$/;"	f	class:caffe::LayerProto
has_concat_proto	caffe.pb.h	/^inline bool LayerProto::has_concat_proto() const {$/;"	f	class:caffe::LayerProto
has_convolution_proto	caffe.pb.cc	/^bool LayerProto::has_convolution_proto() const {$/;"	f	class:caffe::LayerProto
has_convolution_proto	caffe.pb.h	/^inline bool LayerProto::has_convolution_proto() const {$/;"	f	class:caffe::LayerProto
has_copy_type	caffe.pb.cc	/^bool CopyProto::has_copy_type() const {$/;"	f	class:caffe::CopyProto
has_copy_type	caffe.pb.h	/^inline bool CopyProto::has_copy_type() const {$/;"	f	class:caffe::CopyProto
has_current_step	caffe.pb.cc	/^bool SolverState::has_current_step() const {$/;"	f	class:caffe::SolverState
has_current_step	caffe.pb.h	/^inline bool SolverState::has_current_step() const {$/;"	f	class:caffe::SolverState
has_data	caffe.pb.cc	/^bool LoaderProto::has_data() const {$/;"	f	class:caffe::LoaderProto
has_data	caffe.pb.cc	/^bool MultinomialLogisticLossProto::has_data() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
has_data	caffe.pb.h	/^inline bool LoaderProto::has_data() const {$/;"	f	class:caffe::LoaderProto
has_data	caffe.pb.h	/^inline bool MultinomialLogisticLossProto::has_data() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
has_data_type	caffe.pb.cc	/^bool BlobProto::has_data_type() const {$/;"	f	class:caffe::BlobProto
has_data_type	caffe.pb.h	/^inline bool BlobProto::has_data_type() const {$/;"	f	class:caffe::BlobProto
has_debug_info	caffe.pb.cc	/^bool NetParameter::has_debug_info() const {$/;"	f	class:caffe::NetParameter
has_debug_info	caffe.pb.cc	/^bool SolverProto::has_debug_info() const {$/;"	f	class:caffe::SolverProto
has_debug_info	caffe.pb.h	/^inline bool NetParameter::has_debug_info() const {$/;"	f	class:caffe::NetParameter
has_debug_info	caffe.pb.h	/^inline bool SolverProto::has_debug_info() const {$/;"	f	class:caffe::SolverProto
has_decay_mult	caffe.pb.cc	/^bool ParamSpec::has_decay_mult() const {$/;"	f	class:caffe::ParamSpec
has_decay_mult	caffe.pb.h	/^inline bool ParamSpec::has_decay_mult() const {$/;"	f	class:caffe::ParamSpec
has_delta	caffe.pb.cc	/^bool SolverProto::has_delta() const {$/;"	f	class:caffe::SolverProto
has_delta	caffe.pb.h	/^inline bool SolverProto::has_delta() const {$/;"	f	class:caffe::SolverProto
has_device_group	caffe.pb.cc	/^bool PlacementGroup::has_device_group() const {$/;"	f	class:caffe::PlacementGroup
has_device_group	caffe.pb.h	/^inline bool PlacementGroup::has_device_group() const {$/;"	f	class:caffe::PlacementGroup
has_device_set	caffe.pb.cc	/^bool Machine::has_device_set() const {$/;"	f	class:caffe::Machine
has_device_set	caffe.pb.h	/^inline bool Machine::has_device_set() const {$/;"	f	class:caffe::Machine
has_display	caffe.pb.cc	/^bool SolverProto::has_display() const {$/;"	f	class:caffe::SolverProto
has_display	caffe.pb.h	/^inline bool SolverProto::has_display() const {$/;"	f	class:caffe::SolverProto
has_end	caffe.pb.cc	/^bool DeviceGroup::has_end() const {$/;"	f	class:caffe::DeviceGroup
has_end	caffe.pb.cc	/^bool MachineGroup::has_end() const {$/;"	f	class:caffe::MachineGroup
has_end	caffe.pb.h	/^inline bool DeviceGroup::has_end() const {$/;"	f	class:caffe::DeviceGroup
has_end	caffe.pb.h	/^inline bool MachineGroup::has_end() const {$/;"	f	class:caffe::MachineGroup
has_engine	caffe.pb.cc	/^bool ConvolutionProto::has_engine() const {$/;"	f	class:caffe::ConvolutionProto
has_engine	caffe.pb.cc	/^bool LRNProto::has_engine() const {$/;"	f	class:caffe::LRNProto
has_engine	caffe.pb.cc	/^bool PoolingProto::has_engine() const {$/;"	f	class:caffe::PoolingProto
has_engine	caffe.pb.cc	/^bool ReLUProto::has_engine() const {$/;"	f	class:caffe::ReLUProto
has_engine	caffe.pb.cc	/^bool SigmoidProto::has_engine() const {$/;"	f	class:caffe::SigmoidProto
has_engine	caffe.pb.cc	/^bool SoftmaxProto::has_engine() const {$/;"	f	class:caffe::SoftmaxProto
has_engine	caffe.pb.cc	/^bool StoreProto::has_engine() const {$/;"	f	class:caffe::StoreProto
has_engine	caffe.pb.h	/^inline bool ConvolutionProto::has_engine() const {$/;"	f	class:caffe::ConvolutionProto
has_engine	caffe.pb.h	/^inline bool LRNProto::has_engine() const {$/;"	f	class:caffe::LRNProto
has_engine	caffe.pb.h	/^inline bool PoolingProto::has_engine() const {$/;"	f	class:caffe::PoolingProto
has_engine	caffe.pb.h	/^inline bool ReLUProto::has_engine() const {$/;"	f	class:caffe::ReLUProto
has_engine	caffe.pb.h	/^inline bool SigmoidProto::has_engine() const {$/;"	f	class:caffe::SigmoidProto
has_engine	caffe.pb.h	/^inline bool SoftmaxProto::has_engine() const {$/;"	f	class:caffe::SoftmaxProto
has_engine	caffe.pb.h	/^inline bool StoreProto::has_engine() const {$/;"	f	class:caffe::StoreProto
has_eps	caffe.pb.cc	/^bool BatchNormProto::has_eps() const {$/;"	f	class:caffe::BatchNormProto
has_eps	caffe.pb.h	/^inline bool BatchNormProto::has_eps() const {$/;"	f	class:caffe::BatchNormProto
has_force_backward	caffe.pb.cc	/^bool NetParameter::has_force_backward() const {$/;"	f	class:caffe::NetParameter
has_force_backward	caffe.pb.h	/^inline bool NetParameter::has_force_backward() const {$/;"	f	class:caffe::NetParameter
has_forward_is_sender	caffe.pb.cc	/^bool NetProto::has_forward_is_sender() const {$/;"	f	class:caffe::NetProto
has_forward_is_sender	caffe.pb.h	/^inline bool NetProto::has_forward_is_sender() const {$/;"	f	class:caffe::NetProto
has_gamma	caffe.pb.cc	/^bool SolverProto::has_gamma() const {$/;"	f	class:caffe::SolverProto
has_gamma	caffe.pb.h	/^inline bool SolverProto::has_gamma() const {$/;"	f	class:caffe::SolverProto
has_global_pooling	caffe.pb.cc	/^bool PoolingProto::has_global_pooling() const {$/;"	f	class:caffe::PoolingProto
has_global_pooling	caffe.pb.h	/^inline bool PoolingProto::has_global_pooling() const {$/;"	f	class:caffe::PoolingProto
has_gradient	caffe.pb.cc	/^bool ModelUpdateProto::has_gradient() const {$/;"	f	class:caffe::ModelUpdateProto
has_gradient	caffe.pb.h	/^inline bool ModelUpdateProto::has_gradient() const {$/;"	f	class:caffe::ModelUpdateProto
has_group	caffe.pb.cc	/^bool ConvolutionProto::has_group() const {$/;"	f	class:caffe::ConvolutionProto
has_group	caffe.pb.h	/^inline bool ConvolutionProto::has_group() const {$/;"	f	class:caffe::ConvolutionProto
has_height	caffe.pb.cc	/^bool LoaderProto::has_height() const {$/;"	f	class:caffe::LoaderProto
has_height	caffe.pb.h	/^inline bool LoaderProto::has_height() const {$/;"	f	class:caffe::LoaderProto
has_in	caffe.pb.cc	/^bool ConvolutionProto::has_in() const {$/;"	f	class:caffe::ConvolutionProto
has_in	caffe.pb.cc	/^bool InnerProductProto::has_in() const {$/;"	f	class:caffe::InnerProductProto
has_in	caffe.pb.cc	/^bool LRNProto::has_in() const {$/;"	f	class:caffe::LRNProto
has_in	caffe.pb.cc	/^bool PlaceholderProto::has_in() const {$/;"	f	class:caffe::PlaceholderProto
has_in	caffe.pb.cc	/^bool PoolingProto::has_in() const {$/;"	f	class:caffe::PoolingProto
has_in	caffe.pb.cc	/^bool ReLUProto::has_in() const {$/;"	f	class:caffe::ReLUProto
has_in	caffe.pb.cc	/^bool SigmoidProto::has_in() const {$/;"	f	class:caffe::SigmoidProto
has_in	caffe.pb.cc	/^bool SoftmaxProto::has_in() const {$/;"	f	class:caffe::SoftmaxProto
has_in	caffe.pb.cc	/^bool SplitProto::has_in() const {$/;"	f	class:caffe::SplitProto
has_in	caffe.pb.cc	/^bool StoreProto::has_in() const {$/;"	f	class:caffe::StoreProto
has_in	caffe.pb.h	/^inline bool ConvolutionProto::has_in() const {$/;"	f	class:caffe::ConvolutionProto
has_in	caffe.pb.h	/^inline bool InnerProductProto::has_in() const {$/;"	f	class:caffe::InnerProductProto
has_in	caffe.pb.h	/^inline bool LRNProto::has_in() const {$/;"	f	class:caffe::LRNProto
has_in	caffe.pb.h	/^inline bool PlaceholderProto::has_in() const {$/;"	f	class:caffe::PlaceholderProto
has_in	caffe.pb.h	/^inline bool PoolingProto::has_in() const {$/;"	f	class:caffe::PoolingProto
has_in	caffe.pb.h	/^inline bool ReLUProto::has_in() const {$/;"	f	class:caffe::ReLUProto
has_in	caffe.pb.h	/^inline bool SigmoidProto::has_in() const {$/;"	f	class:caffe::SigmoidProto
has_in	caffe.pb.h	/^inline bool SoftmaxProto::has_in() const {$/;"	f	class:caffe::SoftmaxProto
has_in	caffe.pb.h	/^inline bool SplitProto::has_in() const {$/;"	f	class:caffe::SplitProto
has_in	caffe.pb.h	/^inline bool StoreProto::has_in() const {$/;"	f	class:caffe::StoreProto
has_in_axis	caffe.pb.cc	/^bool BoxingProto::has_in_axis() const {$/;"	f	class:caffe::BoxingProto
has_in_axis	caffe.pb.h	/^inline bool BoxingProto::has_in_axis() const {$/;"	f	class:caffe::BoxingProto
has_in_envelope	caffe.pb.cc	/^bool NetProto::has_in_envelope() const {$/;"	f	class:caffe::NetProto
has_in_envelope	caffe.pb.h	/^inline bool NetProto::has_in_envelope() const {$/;"	f	class:caffe::NetProto
has_in_num	caffe.pb.cc	/^bool BoxingProto::has_in_num() const {$/;"	f	class:caffe::BoxingProto
has_in_num	caffe.pb.cc	/^bool ConcatProto::has_in_num() const {$/;"	f	class:caffe::ConcatProto
has_in_num	caffe.pb.cc	/^bool NetProto::has_in_num() const {$/;"	f	class:caffe::NetProto
has_in_num	caffe.pb.h	/^inline bool BoxingProto::has_in_num() const {$/;"	f	class:caffe::BoxingProto
has_in_num	caffe.pb.h	/^inline bool ConcatProto::has_in_num() const {$/;"	f	class:caffe::ConcatProto
has_in_num	caffe.pb.h	/^inline bool NetProto::has_in_num() const {$/;"	f	class:caffe::NetProto
has_in_op	caffe.pb.cc	/^bool BoxingProto::has_in_op() const {$/;"	f	class:caffe::BoxingProto
has_in_op	caffe.pb.h	/^inline bool BoxingProto::has_in_op() const {$/;"	f	class:caffe::BoxingProto
has_innerproduct_proto	caffe.pb.cc	/^bool LayerProto::has_innerproduct_proto() const {$/;"	f	class:caffe::LayerProto
has_innerproduct_proto	caffe.pb.h	/^inline bool LayerProto::has_innerproduct_proto() const {$/;"	f	class:caffe::LayerProto
has_iter	caffe.pb.cc	/^bool SolverState::has_iter() const {$/;"	f	class:caffe::SolverState
has_iter	caffe.pb.h	/^inline bool SolverState::has_iter() const {$/;"	f	class:caffe::SolverState
has_k	caffe.pb.cc	/^bool LRNProto::has_k() const {$/;"	f	class:caffe::LRNProto
has_k	caffe.pb.h	/^inline bool LRNProto::has_k() const {$/;"	f	class:caffe::LRNProto
has_kernel_h	caffe.pb.cc	/^bool ConvolutionProto::has_kernel_h() const {$/;"	f	class:caffe::ConvolutionProto
has_kernel_h	caffe.pb.cc	/^bool PoolingProto::has_kernel_h() const {$/;"	f	class:caffe::PoolingProto
has_kernel_h	caffe.pb.h	/^inline bool ConvolutionProto::has_kernel_h() const {$/;"	f	class:caffe::ConvolutionProto
has_kernel_h	caffe.pb.h	/^inline bool PoolingProto::has_kernel_h() const {$/;"	f	class:caffe::PoolingProto
has_kernel_size	caffe.pb.cc	/^bool ConvolutionProto::has_kernel_size() const {$/;"	f	class:caffe::ConvolutionProto
has_kernel_size	caffe.pb.cc	/^bool PoolingProto::has_kernel_size() const {$/;"	f	class:caffe::PoolingProto
has_kernel_size	caffe.pb.h	/^inline bool ConvolutionProto::has_kernel_size() const {$/;"	f	class:caffe::ConvolutionProto
has_kernel_size	caffe.pb.h	/^inline bool PoolingProto::has_kernel_size() const {$/;"	f	class:caffe::PoolingProto
has_kernel_w	caffe.pb.cc	/^bool ConvolutionProto::has_kernel_w() const {$/;"	f	class:caffe::ConvolutionProto
has_kernel_w	caffe.pb.cc	/^bool PoolingProto::has_kernel_w() const {$/;"	f	class:caffe::PoolingProto
has_kernel_w	caffe.pb.h	/^inline bool ConvolutionProto::has_kernel_w() const {$/;"	f	class:caffe::ConvolutionProto
has_kernel_w	caffe.pb.h	/^inline bool PoolingProto::has_kernel_w() const {$/;"	f	class:caffe::PoolingProto
has_label	caffe.pb.cc	/^bool LoaderProto::has_label() const {$/;"	f	class:caffe::LoaderProto
has_label	caffe.pb.cc	/^bool MultinomialLogisticLossProto::has_label() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
has_label	caffe.pb.h	/^inline bool LoaderProto::has_label() const {$/;"	f	class:caffe::LoaderProto
has_label	caffe.pb.h	/^inline bool MultinomialLogisticLossProto::has_label() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
has_layer_set	caffe.pb.cc	/^bool PlacementGroup::has_layer_set() const {$/;"	f	class:caffe::PlacementGroup
has_layer_set	caffe.pb.h	/^inline bool PlacementGroup::has_layer_set() const {$/;"	f	class:caffe::PlacementGroup
has_learned_net	caffe.pb.cc	/^bool SolverState::has_learned_net() const {$/;"	f	class:caffe::SolverState
has_learned_net	caffe.pb.h	/^inline bool SolverState::has_learned_net() const {$/;"	f	class:caffe::SolverState
has_level	caffe.pb.cc	/^bool NetState::has_level() const {$/;"	f	class:caffe::NetState
has_level	caffe.pb.h	/^inline bool NetState::has_level() const {$/;"	f	class:caffe::NetState
has_loader_proto	caffe.pb.cc	/^bool LayerProto::has_loader_proto() const {$/;"	f	class:caffe::LayerProto
has_loader_proto	caffe.pb.h	/^inline bool LayerProto::has_loader_proto() const {$/;"	f	class:caffe::LayerProto
has_loadpartialmodel_proto	caffe.pb.cc	/^bool LayerProto::has_loadpartialmodel_proto() const {$/;"	f	class:caffe::LayerProto
has_loadpartialmodel_proto	caffe.pb.h	/^inline bool LayerProto::has_loadpartialmodel_proto() const {$/;"	f	class:caffe::LayerProto
has_local_size	caffe.pb.cc	/^bool LRNProto::has_local_size() const {$/;"	f	class:caffe::LRNProto
has_local_size	caffe.pb.h	/^inline bool LRNProto::has_local_size() const {$/;"	f	class:caffe::LRNProto
has_loss	caffe.pb.cc	/^bool MultinomialLogisticLossProto::has_loss() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
has_loss	caffe.pb.h	/^inline bool MultinomialLogisticLossProto::has_loss() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
has_lr_mult	caffe.pb.cc	/^bool ParamSpec::has_lr_mult() const {$/;"	f	class:caffe::ParamSpec
has_lr_mult	caffe.pb.h	/^inline bool ParamSpec::has_lr_mult() const {$/;"	f	class:caffe::ParamSpec
has_lr_policy	caffe.pb.cc	/^bool SolverProto::has_lr_policy() const {$/;"	f	class:caffe::SolverProto
has_lr_policy	caffe.pb.h	/^inline bool SolverProto::has_lr_policy() const {$/;"	f	class:caffe::SolverProto
has_lrn_proto	caffe.pb.cc	/^bool LayerProto::has_lrn_proto() const {$/;"	f	class:caffe::LayerProto
has_lrn_proto	caffe.pb.h	/^inline bool LayerProto::has_lrn_proto() const {$/;"	f	class:caffe::LayerProto
has_machine_group	caffe.pb.cc	/^bool PlacementGroup::has_machine_group() const {$/;"	f	class:caffe::PlacementGroup
has_machine_group	caffe.pb.h	/^inline bool PlacementGroup::has_machine_group() const {$/;"	f	class:caffe::PlacementGroup
has_machine_id	caffe.pb.cc	/^bool SolverProto::has_machine_id() const {$/;"	f	class:caffe::SolverProto
has_machine_id	caffe.pb.h	/^inline bool SolverProto::has_machine_id() const {$/;"	f	class:caffe::SolverProto
has_max	caffe.pb.cc	/^bool FillerParameter::has_max() const {$/;"	f	class:caffe::FillerParameter
has_max	caffe.pb.h	/^inline bool FillerParameter::has_max() const {$/;"	f	class:caffe::FillerParameter
has_max_iter	caffe.pb.cc	/^bool SolverProto::has_max_iter() const {$/;"	f	class:caffe::SolverProto
has_max_iter	caffe.pb.h	/^inline bool SolverProto::has_max_iter() const {$/;"	f	class:caffe::SolverProto
has_mean	caffe.pb.cc	/^bool FillerParameter::has_mean() const {$/;"	f	class:caffe::FillerParameter
has_mean	caffe.pb.h	/^inline bool FillerParameter::has_mean() const {$/;"	f	class:caffe::FillerParameter
has_min	caffe.pb.cc	/^bool FillerParameter::has_min() const {$/;"	f	class:caffe::FillerParameter
has_min	caffe.pb.h	/^inline bool FillerParameter::has_min() const {$/;"	f	class:caffe::FillerParameter
has_modelupdate_proto	caffe.pb.cc	/^bool LayerProto::has_modelupdate_proto() const {$/;"	f	class:caffe::LayerProto
has_modelupdate_proto	caffe.pb.h	/^inline bool LayerProto::has_modelupdate_proto() const {$/;"	f	class:caffe::LayerProto
has_momentum	caffe.pb.cc	/^bool SolverProto::has_momentum() const {$/;"	f	class:caffe::SolverProto
has_momentum	caffe.pb.h	/^inline bool SolverProto::has_momentum() const {$/;"	f	class:caffe::SolverProto
has_moving_average_fraction	caffe.pb.cc	/^bool BatchNormProto::has_moving_average_fraction() const {$/;"	f	class:caffe::BatchNormProto
has_moving_average_fraction	caffe.pb.h	/^inline bool BatchNormProto::has_moving_average_fraction() const {$/;"	f	class:caffe::BatchNormProto
has_multinomiallogisticloss_proto	caffe.pb.cc	/^bool LayerProto::has_multinomiallogisticloss_proto() const {$/;"	f	class:caffe::LayerProto
has_multinomiallogisticloss_proto	caffe.pb.h	/^inline bool LayerProto::has_multinomiallogisticloss_proto() const {$/;"	f	class:caffe::LayerProto
has_name	caffe.pb.cc	/^bool BlobProto::has_name() const {$/;"	f	class:caffe::BlobProto
has_name	caffe.pb.cc	/^bool LayerProto::has_name() const {$/;"	f	class:caffe::LayerProto
has_name	caffe.pb.cc	/^bool Machine::has_name() const {$/;"	f	class:caffe::Machine
has_name	caffe.pb.cc	/^bool NetParameter::has_name() const {$/;"	f	class:caffe::NetParameter
has_name	caffe.pb.cc	/^bool ParamSpec::has_name() const {$/;"	f	class:caffe::ParamSpec
has_name	caffe.pb.cc	/^bool PlacementGroup::has_name() const {$/;"	f	class:caffe::PlacementGroup
has_name	caffe.pb.h	/^inline bool BlobProto::has_name() const {$/;"	f	class:caffe::BlobProto
has_name	caffe.pb.h	/^inline bool LayerProto::has_name() const {$/;"	f	class:caffe::LayerProto
has_name	caffe.pb.h	/^inline bool Machine::has_name() const {$/;"	f	class:caffe::Machine
has_name	caffe.pb.h	/^inline bool NetParameter::has_name() const {$/;"	f	class:caffe::NetParameter
has_name	caffe.pb.h	/^inline bool ParamSpec::has_name() const {$/;"	f	class:caffe::ParamSpec
has_name	caffe.pb.h	/^inline bool PlacementGroup::has_name() const {$/;"	f	class:caffe::PlacementGroup
has_negative_slope	caffe.pb.cc	/^bool ReLUProto::has_negative_slope() const {$/;"	f	class:caffe::ReLUProto
has_negative_slope	caffe.pb.h	/^inline bool ReLUProto::has_negative_slope() const {$/;"	f	class:caffe::ReLUProto
has_norm_region	caffe.pb.cc	/^bool LRNProto::has_norm_region() const {$/;"	f	class:caffe::LRNProto
has_norm_region	caffe.pb.h	/^inline bool LRNProto::has_norm_region() const {$/;"	f	class:caffe::LRNProto
has_nullupdate_proto	caffe.pb.cc	/^bool LayerProto::has_nullupdate_proto() const {$/;"	f	class:caffe::LayerProto
has_nullupdate_proto	caffe.pb.h	/^inline bool LayerProto::has_nullupdate_proto() const {$/;"	f	class:caffe::LayerProto
has_num	caffe.pb.cc	/^bool CopyProto::has_num() const {$/;"	f	class:caffe::CopyProto
has_num	caffe.pb.h	/^inline bool CopyProto::has_num() const {$/;"	f	class:caffe::CopyProto
has_num_batch_per_sync	caffe.pb.cc	/^bool SolverProto::has_num_batch_per_sync() const {$/;"	f	class:caffe::SolverProto
has_num_batch_per_sync	caffe.pb.h	/^inline bool SolverProto::has_num_batch_per_sync() const {$/;"	f	class:caffe::SolverProto
has_num_data_param_copy	caffe.pb.cc	/^bool SolverProto::has_num_data_param_copy() const {$/;"	f	class:caffe::SolverProto
has_num_data_param_copy	caffe.pb.h	/^inline bool SolverProto::has_num_data_param_copy() const {$/;"	f	class:caffe::SolverProto
has_num_model_param_copy	caffe.pb.cc	/^bool SolverProto::has_num_model_param_copy() const {$/;"	f	class:caffe::SolverProto
has_num_model_param_copy	caffe.pb.h	/^inline bool SolverProto::has_num_model_param_copy() const {$/;"	f	class:caffe::SolverProto
has_num_output	caffe.pb.cc	/^bool ConvolutionProto::has_num_output() const {$/;"	f	class:caffe::ConvolutionProto
has_num_output	caffe.pb.cc	/^bool InnerProductProto::has_num_output() const {$/;"	f	class:caffe::InnerProductProto
has_num_output	caffe.pb.h	/^inline bool ConvolutionProto::has_num_output() const {$/;"	f	class:caffe::ConvolutionProto
has_num_output	caffe.pb.h	/^inline bool InnerProductProto::has_num_output() const {$/;"	f	class:caffe::InnerProductProto
has_old_weight	caffe.pb.cc	/^bool ModelUpdateProto::has_old_weight() const {$/;"	f	class:caffe::ModelUpdateProto
has_old_weight	caffe.pb.h	/^inline bool ModelUpdateProto::has_old_weight() const {$/;"	f	class:caffe::ModelUpdateProto
has_out	caffe.pb.cc	/^bool ConcatProto::has_out() const {$/;"	f	class:caffe::ConcatProto
has_out	caffe.pb.cc	/^bool ConvolutionProto::has_out() const {$/;"	f	class:caffe::ConvolutionProto
has_out	caffe.pb.cc	/^bool InnerProductProto::has_out() const {$/;"	f	class:caffe::InnerProductProto
has_out	caffe.pb.cc	/^bool LRNProto::has_out() const {$/;"	f	class:caffe::LRNProto
has_out	caffe.pb.cc	/^bool LoadPartialModelProto::has_out() const {$/;"	f	class:caffe::LoadPartialModelProto
has_out	caffe.pb.cc	/^bool PlaceholderProto::has_out() const {$/;"	f	class:caffe::PlaceholderProto
has_out	caffe.pb.cc	/^bool PoolingProto::has_out() const {$/;"	f	class:caffe::PoolingProto
has_out	caffe.pb.cc	/^bool ReLUProto::has_out() const {$/;"	f	class:caffe::ReLUProto
has_out	caffe.pb.cc	/^bool SigmoidProto::has_out() const {$/;"	f	class:caffe::SigmoidProto
has_out	caffe.pb.cc	/^bool SoftmaxProto::has_out() const {$/;"	f	class:caffe::SoftmaxProto
has_out	caffe.pb.cc	/^bool StoreProto::has_out() const {$/;"	f	class:caffe::StoreProto
has_out	caffe.pb.h	/^inline bool ConcatProto::has_out() const {$/;"	f	class:caffe::ConcatProto
has_out	caffe.pb.h	/^inline bool ConvolutionProto::has_out() const {$/;"	f	class:caffe::ConvolutionProto
has_out	caffe.pb.h	/^inline bool InnerProductProto::has_out() const {$/;"	f	class:caffe::InnerProductProto
has_out	caffe.pb.h	/^inline bool LRNProto::has_out() const {$/;"	f	class:caffe::LRNProto
has_out	caffe.pb.h	/^inline bool LoadPartialModelProto::has_out() const {$/;"	f	class:caffe::LoadPartialModelProto
has_out	caffe.pb.h	/^inline bool PlaceholderProto::has_out() const {$/;"	f	class:caffe::PlaceholderProto
has_out	caffe.pb.h	/^inline bool PoolingProto::has_out() const {$/;"	f	class:caffe::PoolingProto
has_out	caffe.pb.h	/^inline bool ReLUProto::has_out() const {$/;"	f	class:caffe::ReLUProto
has_out	caffe.pb.h	/^inline bool SigmoidProto::has_out() const {$/;"	f	class:caffe::SigmoidProto
has_out	caffe.pb.h	/^inline bool SoftmaxProto::has_out() const {$/;"	f	class:caffe::SoftmaxProto
has_out	caffe.pb.h	/^inline bool StoreProto::has_out() const {$/;"	f	class:caffe::StoreProto
has_out_axis	caffe.pb.cc	/^bool BoxingProto::has_out_axis() const {$/;"	f	class:caffe::BoxingProto
has_out_axis	caffe.pb.h	/^inline bool BoxingProto::has_out_axis() const {$/;"	f	class:caffe::BoxingProto
has_out_envelope	caffe.pb.cc	/^bool NetProto::has_out_envelope() const {$/;"	f	class:caffe::NetProto
has_out_envelope	caffe.pb.h	/^inline bool NetProto::has_out_envelope() const {$/;"	f	class:caffe::NetProto
has_out_num	caffe.pb.cc	/^bool BoxingProto::has_out_num() const {$/;"	f	class:caffe::BoxingProto
has_out_num	caffe.pb.cc	/^bool NetProto::has_out_num() const {$/;"	f	class:caffe::NetProto
has_out_num	caffe.pb.cc	/^bool SplitProto::has_out_num() const {$/;"	f	class:caffe::SplitProto
has_out_num	caffe.pb.h	/^inline bool BoxingProto::has_out_num() const {$/;"	f	class:caffe::BoxingProto
has_out_num	caffe.pb.h	/^inline bool NetProto::has_out_num() const {$/;"	f	class:caffe::NetProto
has_out_num	caffe.pb.h	/^inline bool SplitProto::has_out_num() const {$/;"	f	class:caffe::SplitProto
has_out_op	caffe.pb.cc	/^bool BoxingProto::has_out_op() const {$/;"	f	class:caffe::BoxingProto
has_out_op	caffe.pb.h	/^inline bool BoxingProto::has_out_op() const {$/;"	f	class:caffe::BoxingProto
has_pad	caffe.pb.cc	/^bool ConvolutionProto::has_pad() const {$/;"	f	class:caffe::ConvolutionProto
has_pad	caffe.pb.cc	/^bool PoolingProto::has_pad() const {$/;"	f	class:caffe::PoolingProto
has_pad	caffe.pb.h	/^inline bool ConvolutionProto::has_pad() const {$/;"	f	class:caffe::ConvolutionProto
has_pad	caffe.pb.h	/^inline bool PoolingProto::has_pad() const {$/;"	f	class:caffe::PoolingProto
has_pad_h	caffe.pb.cc	/^bool ConvolutionProto::has_pad_h() const {$/;"	f	class:caffe::ConvolutionProto
has_pad_h	caffe.pb.cc	/^bool PoolingProto::has_pad_h() const {$/;"	f	class:caffe::PoolingProto
has_pad_h	caffe.pb.h	/^inline bool ConvolutionProto::has_pad_h() const {$/;"	f	class:caffe::ConvolutionProto
has_pad_h	caffe.pb.h	/^inline bool PoolingProto::has_pad_h() const {$/;"	f	class:caffe::PoolingProto
has_pad_w	caffe.pb.cc	/^bool ConvolutionProto::has_pad_w() const {$/;"	f	class:caffe::ConvolutionProto
has_pad_w	caffe.pb.cc	/^bool PoolingProto::has_pad_w() const {$/;"	f	class:caffe::PoolingProto
has_pad_w	caffe.pb.h	/^inline bool ConvolutionProto::has_pad_w() const {$/;"	f	class:caffe::ConvolutionProto
has_pad_w	caffe.pb.h	/^inline bool PoolingProto::has_pad_w() const {$/;"	f	class:caffe::PoolingProto
has_parallel_policy	caffe.pb.cc	/^bool PlacementGroup::has_parallel_policy() const {$/;"	f	class:caffe::PlacementGroup
has_parallel_policy	caffe.pb.h	/^inline bool PlacementGroup::has_parallel_policy() const {$/;"	f	class:caffe::PlacementGroup
has_phase	caffe.pb.cc	/^bool NetState::has_phase() const {$/;"	f	class:caffe::NetState
has_phase	caffe.pb.h	/^inline bool NetState::has_phase() const {$/;"	f	class:caffe::NetState
has_piece_size	caffe.pb.cc	/^bool LoaderProto::has_piece_size() const {$/;"	f	class:caffe::LoaderProto
has_piece_size	caffe.pb.h	/^inline bool LoaderProto::has_piece_size() const {$/;"	f	class:caffe::LoaderProto
has_placeholder_proto	caffe.pb.cc	/^bool LayerProto::has_placeholder_proto() const {$/;"	f	class:caffe::LayerProto
has_placeholder_proto	caffe.pb.h	/^inline bool LayerProto::has_placeholder_proto() const {$/;"	f	class:caffe::LayerProto
has_pool	caffe.pb.cc	/^bool PoolingProto::has_pool() const {$/;"	f	class:caffe::PoolingProto
has_pool	caffe.pb.h	/^inline bool PoolingProto::has_pool() const {$/;"	f	class:caffe::PoolingProto
has_pooling_proto	caffe.pb.cc	/^bool LayerProto::has_pooling_proto() const {$/;"	f	class:caffe::LayerProto
has_pooling_proto	caffe.pb.h	/^inline bool LayerProto::has_pooling_proto() const {$/;"	f	class:caffe::LayerProto
has_port	caffe.pb.cc	/^bool Machine::has_port() const {$/;"	f	class:caffe::Machine
has_port	caffe.pb.h	/^inline bool Machine::has_port() const {$/;"	f	class:caffe::Machine
has_power	caffe.pb.cc	/^bool SolverProto::has_power() const {$/;"	f	class:caffe::SolverProto
has_power	caffe.pb.h	/^inline bool SolverProto::has_power() const {$/;"	f	class:caffe::SolverProto
has_random_seed	caffe.pb.cc	/^bool SolverProto::has_random_seed() const {$/;"	f	class:caffe::SolverProto
has_random_seed	caffe.pb.h	/^inline bool SolverProto::has_random_seed() const {$/;"	f	class:caffe::SolverProto
has_regularization_type	caffe.pb.cc	/^bool SolverProto::has_regularization_type() const {$/;"	f	class:caffe::SolverProto
has_regularization_type	caffe.pb.h	/^inline bool SolverProto::has_regularization_type() const {$/;"	f	class:caffe::SolverProto
has_relu_proto	caffe.pb.cc	/^bool LayerProto::has_relu_proto() const {$/;"	f	class:caffe::LayerProto
has_relu_proto	caffe.pb.h	/^inline bool LayerProto::has_relu_proto() const {$/;"	f	class:caffe::LayerProto
has_resource	caffe.pb.cc	/^bool SolverProto::has_resource() const {$/;"	f	class:caffe::SolverProto
has_resource	caffe.pb.h	/^inline bool SolverProto::has_resource() const {$/;"	f	class:caffe::SolverProto
has_shape	caffe.pb.cc	/^bool BlobProto::has_shape() const {$/;"	f	class:caffe::BlobProto
has_shape	caffe.pb.h	/^inline bool BlobProto::has_shape() const {$/;"	f	class:caffe::BlobProto
has_share_mode	caffe.pb.cc	/^bool ParamSpec::has_share_mode() const {$/;"	f	class:caffe::ParamSpec
has_share_mode	caffe.pb.h	/^inline bool ParamSpec::has_share_mode() const {$/;"	f	class:caffe::ParamSpec
has_sigmoid_proto	caffe.pb.cc	/^bool LayerProto::has_sigmoid_proto() const {$/;"	f	class:caffe::LayerProto
has_sigmoid_proto	caffe.pb.h	/^inline bool LayerProto::has_sigmoid_proto() const {$/;"	f	class:caffe::LayerProto
has_snapshot	caffe.pb.cc	/^bool SolverProto::has_snapshot() const {$/;"	f	class:caffe::SolverProto
has_snapshot	caffe.pb.h	/^inline bool SolverProto::has_snapshot() const {$/;"	f	class:caffe::SolverProto
has_snapshot_after_train	caffe.pb.cc	/^bool SolverProto::has_snapshot_after_train() const {$/;"	f	class:caffe::SolverProto
has_snapshot_after_train	caffe.pb.h	/^inline bool SolverProto::has_snapshot_after_train() const {$/;"	f	class:caffe::SolverProto
has_snapshot_diff	caffe.pb.cc	/^bool SolverProto::has_snapshot_diff() const {$/;"	f	class:caffe::SolverProto
has_snapshot_diff	caffe.pb.h	/^inline bool SolverProto::has_snapshot_diff() const {$/;"	f	class:caffe::SolverProto
has_snapshot_prefix	caffe.pb.cc	/^bool SolverProto::has_snapshot_prefix() const {$/;"	f	class:caffe::SolverProto
has_snapshot_prefix	caffe.pb.h	/^inline bool SolverProto::has_snapshot_prefix() const {$/;"	f	class:caffe::SolverProto
has_softmax_proto	caffe.pb.cc	/^bool LayerProto::has_softmax_proto() const {$/;"	f	class:caffe::LayerProto
has_softmax_proto	caffe.pb.h	/^inline bool LayerProto::has_softmax_proto() const {$/;"	f	class:caffe::LayerProto
has_solver_type	caffe.pb.cc	/^bool SolverProto::has_solver_type() const {$/;"	f	class:caffe::SolverProto
has_solver_type	caffe.pb.h	/^inline bool SolverProto::has_solver_type() const {$/;"	f	class:caffe::SolverProto
has_source	caffe.pb.cc	/^bool LoaderProto::has_source() const {$/;"	f	class:caffe::LoaderProto
has_source	caffe.pb.h	/^inline bool LoaderProto::has_source() const {$/;"	f	class:caffe::LoaderProto
has_sparse	caffe.pb.cc	/^bool FillerParameter::has_sparse() const {$/;"	f	class:caffe::FillerParameter
has_sparse	caffe.pb.h	/^inline bool FillerParameter::has_sparse() const {$/;"	f	class:caffe::FillerParameter
has_split_proto	caffe.pb.cc	/^bool LayerProto::has_split_proto() const {$/;"	f	class:caffe::LayerProto
has_split_proto	caffe.pb.h	/^inline bool LayerProto::has_split_proto() const {$/;"	f	class:caffe::LayerProto
has_state	caffe.pb.cc	/^bool NetParameter::has_state() const {$/;"	f	class:caffe::NetParameter
has_state	caffe.pb.h	/^inline bool NetParameter::has_state() const {$/;"	f	class:caffe::NetParameter
has_std	caffe.pb.cc	/^bool FillerParameter::has_std() const {$/;"	f	class:caffe::FillerParameter
has_std	caffe.pb.h	/^inline bool FillerParameter::has_std() const {$/;"	f	class:caffe::FillerParameter
has_stepsize	caffe.pb.cc	/^bool SolverProto::has_stepsize() const {$/;"	f	class:caffe::SolverProto
has_stepsize	caffe.pb.h	/^inline bool SolverProto::has_stepsize() const {$/;"	f	class:caffe::SolverProto
has_stop	caffe.pb.cc	/^bool StoreProto::has_stop() const {$/;"	f	class:caffe::StoreProto
has_stop	caffe.pb.h	/^inline bool StoreProto::has_stop() const {$/;"	f	class:caffe::StoreProto
has_store_proto	caffe.pb.cc	/^bool LayerProto::has_store_proto() const {$/;"	f	class:caffe::LayerProto
has_store_proto	caffe.pb.h	/^inline bool LayerProto::has_store_proto() const {$/;"	f	class:caffe::LayerProto
has_strategy	caffe.pb.cc	/^bool SolverProto::has_strategy() const {$/;"	f	class:caffe::SolverProto
has_strategy	caffe.pb.h	/^inline bool SolverProto::has_strategy() const {$/;"	f	class:caffe::SolverProto
has_stride	caffe.pb.cc	/^bool ConvolutionProto::has_stride() const {$/;"	f	class:caffe::ConvolutionProto
has_stride	caffe.pb.cc	/^bool PoolingProto::has_stride() const {$/;"	f	class:caffe::PoolingProto
has_stride	caffe.pb.h	/^inline bool ConvolutionProto::has_stride() const {$/;"	f	class:caffe::ConvolutionProto
has_stride	caffe.pb.h	/^inline bool PoolingProto::has_stride() const {$/;"	f	class:caffe::PoolingProto
has_stride_h	caffe.pb.cc	/^bool ConvolutionProto::has_stride_h() const {$/;"	f	class:caffe::ConvolutionProto
has_stride_h	caffe.pb.cc	/^bool PoolingProto::has_stride_h() const {$/;"	f	class:caffe::PoolingProto
has_stride_h	caffe.pb.h	/^inline bool ConvolutionProto::has_stride_h() const {$/;"	f	class:caffe::ConvolutionProto
has_stride_h	caffe.pb.h	/^inline bool PoolingProto::has_stride_h() const {$/;"	f	class:caffe::PoolingProto
has_stride_w	caffe.pb.cc	/^bool ConvolutionProto::has_stride_w() const {$/;"	f	class:caffe::ConvolutionProto
has_stride_w	caffe.pb.cc	/^bool PoolingProto::has_stride_w() const {$/;"	f	class:caffe::PoolingProto
has_stride_w	caffe.pb.h	/^inline bool ConvolutionProto::has_stride_w() const {$/;"	f	class:caffe::ConvolutionProto
has_stride_w	caffe.pb.h	/^inline bool PoolingProto::has_stride_w() const {$/;"	f	class:caffe::PoolingProto
has_test_compute_loss	caffe.pb.cc	/^bool SolverProto::has_test_compute_loss() const {$/;"	f	class:caffe::SolverProto
has_test_compute_loss	caffe.pb.h	/^inline bool SolverProto::has_test_compute_loss() const {$/;"	f	class:caffe::SolverProto
has_test_initialization	caffe.pb.cc	/^bool SolverProto::has_test_initialization() const {$/;"	f	class:caffe::SolverProto
has_test_initialization	caffe.pb.h	/^inline bool SolverProto::has_test_initialization() const {$/;"	f	class:caffe::SolverProto
has_test_interval	caffe.pb.cc	/^bool SolverProto::has_test_interval() const {$/;"	f	class:caffe::SolverProto
has_test_interval	caffe.pb.h	/^inline bool SolverProto::has_test_interval() const {$/;"	f	class:caffe::SolverProto
has_train_net	caffe.pb.cc	/^bool SolverProto::has_train_net() const {$/;"	f	class:caffe::SolverProto
has_train_net	caffe.pb.h	/^inline bool SolverProto::has_train_net() const {$/;"	f	class:caffe::SolverProto
has_train_state	caffe.pb.cc	/^bool SolverProto::has_train_state() const {$/;"	f	class:caffe::SolverProto
has_train_state	caffe.pb.h	/^inline bool SolverProto::has_train_state() const {$/;"	f	class:caffe::SolverProto
has_type	caffe.pb.cc	/^bool FillerParameter::has_type() const {$/;"	f	class:caffe::FillerParameter
has_type	caffe.pb.cc	/^bool LayerProto::has_type() const {$/;"	f	class:caffe::LayerProto
has_type	caffe.pb.h	/^inline bool FillerParameter::has_type() const {$/;"	f	class:caffe::FillerParameter
has_type	caffe.pb.h	/^inline bool LayerProto::has_type() const {$/;"	f	class:caffe::LayerProto
has_use_global_stats	caffe.pb.cc	/^bool BatchNormProto::has_use_global_stats() const {$/;"	f	class:caffe::BatchNormProto
has_use_global_stats	caffe.pb.h	/^inline bool BatchNormProto::has_use_global_stats() const {$/;"	f	class:caffe::BatchNormProto
has_value	caffe.pb.cc	/^bool FillerParameter::has_value() const {$/;"	f	class:caffe::FillerParameter
has_value	caffe.pb.h	/^inline bool FillerParameter::has_value() const {$/;"	f	class:caffe::FillerParameter
has_weight	caffe.pb.cc	/^bool ModelUpdateProto::has_weight() const {$/;"	f	class:caffe::ModelUpdateProto
has_weight	caffe.pb.cc	/^bool NullUpdateProto::has_weight() const {$/;"	f	class:caffe::NullUpdateProto
has_weight	caffe.pb.h	/^inline bool ModelUpdateProto::has_weight() const {$/;"	f	class:caffe::ModelUpdateProto
has_weight	caffe.pb.h	/^inline bool NullUpdateProto::has_weight() const {$/;"	f	class:caffe::NullUpdateProto
has_weight_decay	caffe.pb.cc	/^bool SolverProto::has_weight_decay() const {$/;"	f	class:caffe::SolverProto
has_weight_decay	caffe.pb.h	/^inline bool SolverProto::has_weight_decay() const {$/;"	f	class:caffe::SolverProto
has_weight_filler	caffe.pb.cc	/^bool ConvolutionProto::has_weight_filler() const {$/;"	f	class:caffe::ConvolutionProto
has_weight_filler	caffe.pb.cc	/^bool InnerProductProto::has_weight_filler() const {$/;"	f	class:caffe::InnerProductProto
has_weight_filler	caffe.pb.h	/^inline bool ConvolutionProto::has_weight_filler() const {$/;"	f	class:caffe::ConvolutionProto
has_weight_filler	caffe.pb.h	/^inline bool InnerProductProto::has_weight_filler() const {$/;"	f	class:caffe::InnerProductProto
has_width	caffe.pb.cc	/^bool LoaderProto::has_width() const {$/;"	f	class:caffe::LoaderProto
has_width	caffe.pb.h	/^inline bool LoaderProto::has_width() const {$/;"	f	class:caffe::LoaderProto
height	caffe.pb.cc	/^::google::protobuf::uint32 LoaderProto::height() const {$/;"	f	class:caffe::LoaderProto
height	caffe.pb.h	/^inline ::google::protobuf::uint32 LoaderProto::height() const {$/;"	f	class:caffe::LoaderProto
height_	caffe.pb.h	/^  ::google::protobuf::uint32 height_;$/;"	m	class:caffe::LoaderProto
id	graph.h	/^  int id;$/;"	m	struct:dataflow::EdgeInfo
id	graph.h	/^  int id;$/;"	m	struct:dataflow::NodeInfo
in	caffe.pb.cc	/^BoxingProto::in() const {$/;"	f	class:caffe::BoxingProto
in	caffe.pb.cc	/^ConcatProto::in() const {$/;"	f	class:caffe::ConcatProto
in	caffe.pb.cc	/^CopyProto::in() const {$/;"	f	class:caffe::CopyProto
in	caffe.pb.cc	/^NetProto::in() const {$/;"	f	class:caffe::NetProto
in	caffe.pb.cc	/^const ::std::string& BoxingProto::in(int index) const {$/;"	f	class:caffe::BoxingProto
in	caffe.pb.cc	/^const ::std::string& ConcatProto::in(int index) const {$/;"	f	class:caffe::ConcatProto
in	caffe.pb.cc	/^const ::std::string& ConvolutionProto::in() const {$/;"	f	class:caffe::ConvolutionProto
in	caffe.pb.cc	/^const ::std::string& CopyProto::in(int index) const {$/;"	f	class:caffe::CopyProto
in	caffe.pb.cc	/^const ::std::string& InnerProductProto::in() const {$/;"	f	class:caffe::InnerProductProto
in	caffe.pb.cc	/^const ::std::string& LRNProto::in() const {$/;"	f	class:caffe::LRNProto
in	caffe.pb.cc	/^const ::std::string& NetProto::in(int index) const {$/;"	f	class:caffe::NetProto
in	caffe.pb.cc	/^const ::std::string& PlaceholderProto::in() const {$/;"	f	class:caffe::PlaceholderProto
in	caffe.pb.cc	/^const ::std::string& PoolingProto::in() const {$/;"	f	class:caffe::PoolingProto
in	caffe.pb.cc	/^const ::std::string& ReLUProto::in() const {$/;"	f	class:caffe::ReLUProto
in	caffe.pb.cc	/^const ::std::string& SigmoidProto::in() const {$/;"	f	class:caffe::SigmoidProto
in	caffe.pb.cc	/^const ::std::string& SoftmaxProto::in() const {$/;"	f	class:caffe::SoftmaxProto
in	caffe.pb.cc	/^const ::std::string& SplitProto::in() const {$/;"	f	class:caffe::SplitProto
in	caffe.pb.cc	/^const ::std::string& StoreProto::in() const {$/;"	f	class:caffe::StoreProto
in	caffe.pb.h	/^BoxingProto::in() const {$/;"	f	class:caffe::BoxingProto
in	caffe.pb.h	/^ConcatProto::in() const {$/;"	f	class:caffe::ConcatProto
in	caffe.pb.h	/^CopyProto::in() const {$/;"	f	class:caffe::CopyProto
in	caffe.pb.h	/^NetProto::in() const {$/;"	f	class:caffe::NetProto
in	caffe.pb.h	/^inline const ::std::string& BoxingProto::in(int index) const {$/;"	f	class:caffe::BoxingProto
in	caffe.pb.h	/^inline const ::std::string& ConcatProto::in(int index) const {$/;"	f	class:caffe::ConcatProto
in	caffe.pb.h	/^inline const ::std::string& ConvolutionProto::in() const {$/;"	f	class:caffe::ConvolutionProto
in	caffe.pb.h	/^inline const ::std::string& CopyProto::in(int index) const {$/;"	f	class:caffe::CopyProto
in	caffe.pb.h	/^inline const ::std::string& InnerProductProto::in() const {$/;"	f	class:caffe::InnerProductProto
in	caffe.pb.h	/^inline const ::std::string& LRNProto::in() const {$/;"	f	class:caffe::LRNProto
in	caffe.pb.h	/^inline const ::std::string& NetProto::in(int index) const {$/;"	f	class:caffe::NetProto
in	caffe.pb.h	/^inline const ::std::string& PlaceholderProto::in() const {$/;"	f	class:caffe::PlaceholderProto
in	caffe.pb.h	/^inline const ::std::string& PoolingProto::in() const {$/;"	f	class:caffe::PoolingProto
in	caffe.pb.h	/^inline const ::std::string& ReLUProto::in() const {$/;"	f	class:caffe::ReLUProto
in	caffe.pb.h	/^inline const ::std::string& SigmoidProto::in() const {$/;"	f	class:caffe::SigmoidProto
in	caffe.pb.h	/^inline const ::std::string& SoftmaxProto::in() const {$/;"	f	class:caffe::SoftmaxProto
in	caffe.pb.h	/^inline const ::std::string& SplitProto::in() const {$/;"	f	class:caffe::SplitProto
in	caffe.pb.h	/^inline const ::std::string& StoreProto::in() const {$/;"	f	class:caffe::StoreProto
in_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> in_;$/;"	m	class:caffe::BoxingProto
in_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> in_;$/;"	m	class:caffe::ConcatProto
in_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> in_;$/;"	m	class:caffe::CopyProto
in_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> in_;$/;"	m	class:caffe::NetProto
in_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr in_;$/;"	m	class:caffe::ConvolutionProto
in_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr in_;$/;"	m	class:caffe::InnerProductProto
in_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr in_;$/;"	m	class:caffe::LRNProto
in_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr in_;$/;"	m	class:caffe::PlaceholderProto
in_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr in_;$/;"	m	class:caffe::PoolingProto
in_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr in_;$/;"	m	class:caffe::ReLUProto
in_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr in_;$/;"	m	class:caffe::SigmoidProto
in_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr in_;$/;"	m	class:caffe::SoftmaxProto
in_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr in_;$/;"	m	class:caffe::SplitProto
in_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr in_;$/;"	m	class:caffe::StoreProto
in_axis	caffe.pb.cc	/^::google::protobuf::int32 BoxingProto::in_axis() const {$/;"	f	class:caffe::BoxingProto
in_axis	caffe.pb.h	/^inline ::google::protobuf::int32 BoxingProto::in_axis() const {$/;"	f	class:caffe::BoxingProto
in_axis_	caffe.pb.h	/^  ::google::protobuf::int32 in_axis_;$/;"	m	class:caffe::BoxingProto
in_envelope	caffe.pb.cc	/^const ::std::string& NetProto::in_envelope() const {$/;"	f	class:caffe::NetProto
in_envelope	caffe.pb.h	/^inline const ::std::string& NetProto::in_envelope() const {$/;"	f	class:caffe::NetProto
in_envelope_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr in_envelope_;$/;"	m	class:caffe::NetProto
in_nodes	graph.h	/^  std::vector<std::string> in_nodes;$/;"	m	struct:dataflow::NodeInfo
in_num	caffe.pb.cc	/^::google::protobuf::uint32 BoxingProto::in_num() const {$/;"	f	class:caffe::BoxingProto
in_num	caffe.pb.cc	/^::google::protobuf::uint32 ConcatProto::in_num() const {$/;"	f	class:caffe::ConcatProto
in_num	caffe.pb.cc	/^::google::protobuf::uint32 NetProto::in_num() const {$/;"	f	class:caffe::NetProto
in_num	caffe.pb.h	/^inline ::google::protobuf::uint32 BoxingProto::in_num() const {$/;"	f	class:caffe::BoxingProto
in_num	caffe.pb.h	/^inline ::google::protobuf::uint32 ConcatProto::in_num() const {$/;"	f	class:caffe::ConcatProto
in_num	caffe.pb.h	/^inline ::google::protobuf::uint32 NetProto::in_num() const {$/;"	f	class:caffe::NetProto
in_num_	caffe.pb.h	/^  ::google::protobuf::uint32 in_num_;$/;"	m	class:caffe::BoxingProto
in_num_	caffe.pb.h	/^  ::google::protobuf::uint32 in_num_;$/;"	m	class:caffe::ConcatProto
in_num_	caffe.pb.h	/^  ::google::protobuf::uint32 in_num_;$/;"	m	class:caffe::NetProto
in_op	caffe.pb.cc	/^::caffe::BoxingOp BoxingProto::in_op() const {$/;"	f	class:caffe::BoxingProto
in_op	caffe.pb.h	/^inline ::caffe::BoxingOp BoxingProto::in_op() const {$/;"	f	class:caffe::BoxingProto
in_op_	caffe.pb.h	/^  int in_op_;$/;"	m	class:caffe::BoxingProto
in_size	caffe.pb.cc	/^int BoxingProto::in_size() const {$/;"	f	class:caffe::BoxingProto
in_size	caffe.pb.cc	/^int ConcatProto::in_size() const {$/;"	f	class:caffe::ConcatProto
in_size	caffe.pb.cc	/^int CopyProto::in_size() const {$/;"	f	class:caffe::CopyProto
in_size	caffe.pb.cc	/^int NetProto::in_size() const {$/;"	f	class:caffe::NetProto
in_size	caffe.pb.h	/^inline int BoxingProto::in_size() const {$/;"	f	class:caffe::BoxingProto
in_size	caffe.pb.h	/^inline int ConcatProto::in_size() const {$/;"	f	class:caffe::ConcatProto
in_size	caffe.pb.h	/^inline int CopyProto::in_size() const {$/;"	f	class:caffe::CopyProto
in_size	caffe.pb.h	/^inline int NetProto::in_size() const {$/;"	f	class:caffe::NetProto
info	graph.h	/^  EdgeInfo info;$/;"	m	struct:dataflow::Edge
info	graph.h	/^  NodeInfo info;$/;"	m	struct:dataflow::Node
innerproduct_proto	caffe.pb.cc	/^const ::caffe::InnerProductProto& LayerProto::innerproduct_proto() const {$/;"	f	class:caffe::LayerProto
innerproduct_proto	caffe.pb.h	/^inline const ::caffe::InnerProductProto& LayerProto::innerproduct_proto() const {$/;"	f	class:caffe::LayerProto
innerproduct_proto_	caffe.pb.h	/^  ::caffe::InnerProductProto* innerproduct_proto_;$/;"	m	class:caffe::LayerProto
input_shape	caffe.pb.cc	/^NetParameter::input_shape() const {$/;"	f	class:caffe::NetParameter
input_shape	caffe.pb.cc	/^const ::caffe::BlobShape& NetParameter::input_shape(int index) const {$/;"	f	class:caffe::NetParameter
input_shape	caffe.pb.h	/^NetParameter::input_shape() const {$/;"	f	class:caffe::NetParameter
input_shape	caffe.pb.h	/^inline const ::caffe::BlobShape& NetParameter::input_shape(int index) const {$/;"	f	class:caffe::NetParameter
input_shape_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::caffe::BlobShape > input_shape_;$/;"	m	class:caffe::NetParameter
input_shape_size	caffe.pb.cc	/^int NetParameter::input_shape_size() const {$/;"	f	class:caffe::NetParameter
input_shape_size	caffe.pb.h	/^inline int NetParameter::input_shape_size() const {$/;"	f	class:caffe::NetParameter
int32_data	caffe.pb.cc	/^::google::protobuf::int32 BlobProto::int32_data(int index) const {$/;"	f	class:caffe::BlobProto
int32_data	caffe.pb.cc	/^BlobProto::int32_data() const {$/;"	f	class:caffe::BlobProto
int32_data	caffe.pb.h	/^BlobProto::int32_data() const {$/;"	f	class:caffe::BlobProto
int32_data	caffe.pb.h	/^inline ::google::protobuf::int32 BlobProto::int32_data(int index) const {$/;"	f	class:caffe::BlobProto
int32_data_	caffe.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > int32_data_;$/;"	m	class:caffe::BlobProto
int32_data_size	caffe.pb.cc	/^int BlobProto::int32_data_size() const {$/;"	f	class:caffe::BlobProto
int32_data_size	caffe.pb.h	/^inline int BlobProto::int32_data_size() const {$/;"	f	class:caffe::BlobProto
int64_data	caffe.pb.cc	/^::google::protobuf::int64 BlobProto::int64_data(int index) const {$/;"	f	class:caffe::BlobProto
int64_data	caffe.pb.cc	/^BlobProto::int64_data() const {$/;"	f	class:caffe::BlobProto
int64_data	caffe.pb.h	/^BlobProto::int64_data() const {$/;"	f	class:caffe::BlobProto
int64_data	caffe.pb.h	/^inline ::google::protobuf::int64 BlobProto::int64_data(int index) const {$/;"	f	class:caffe::BlobProto
int64_data_	caffe.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > int64_data_;$/;"	m	class:caffe::BlobProto
int64_data_size	caffe.pb.cc	/^int BlobProto::int64_data_size() const {$/;"	f	class:caffe::BlobProto
int64_data_size	caffe.pb.h	/^inline int BlobProto::int64_data_size() const {$/;"	f	class:caffe::BlobProto
internal_default_instance	caffe.pb.h	/^  static inline const BatchNormProto* internal_default_instance() {$/;"	f	class:caffe::BatchNormProto
internal_default_instance	caffe.pb.h	/^  static inline const BlobProto* internal_default_instance() {$/;"	f	class:caffe::BlobProto
internal_default_instance	caffe.pb.h	/^  static inline const BlobShape* internal_default_instance() {$/;"	f	class:caffe::BlobShape
internal_default_instance	caffe.pb.h	/^  static inline const BoxingProto* internal_default_instance() {$/;"	f	class:caffe::BoxingProto
internal_default_instance	caffe.pb.h	/^  static inline const ConcatProto* internal_default_instance() {$/;"	f	class:caffe::ConcatProto
internal_default_instance	caffe.pb.h	/^  static inline const ConvolutionProto* internal_default_instance() {$/;"	f	class:caffe::ConvolutionProto
internal_default_instance	caffe.pb.h	/^  static inline const CopyProto* internal_default_instance() {$/;"	f	class:caffe::CopyProto
internal_default_instance	caffe.pb.h	/^  static inline const DeviceGroup* internal_default_instance() {$/;"	f	class:caffe::DeviceGroup
internal_default_instance	caffe.pb.h	/^  static inline const DeviceSet* internal_default_instance() {$/;"	f	class:caffe::DeviceSet
internal_default_instance	caffe.pb.h	/^  static inline const FillerParameter* internal_default_instance() {$/;"	f	class:caffe::FillerParameter
internal_default_instance	caffe.pb.h	/^  static inline const InnerProductProto* internal_default_instance() {$/;"	f	class:caffe::InnerProductProto
internal_default_instance	caffe.pb.h	/^  static inline const LRNProto* internal_default_instance() {$/;"	f	class:caffe::LRNProto
internal_default_instance	caffe.pb.h	/^  static inline const LayerProto* internal_default_instance() {$/;"	f	class:caffe::LayerProto
internal_default_instance	caffe.pb.h	/^  static inline const LayerSet* internal_default_instance() {$/;"	f	class:caffe::LayerSet
internal_default_instance	caffe.pb.h	/^  static inline const LoadPartialModelProto* internal_default_instance() {$/;"	f	class:caffe::LoadPartialModelProto
internal_default_instance	caffe.pb.h	/^  static inline const LoaderProto* internal_default_instance() {$/;"	f	class:caffe::LoaderProto
internal_default_instance	caffe.pb.h	/^  static inline const Machine* internal_default_instance() {$/;"	f	class:caffe::Machine
internal_default_instance	caffe.pb.h	/^  static inline const MachineGroup* internal_default_instance() {$/;"	f	class:caffe::MachineGroup
internal_default_instance	caffe.pb.h	/^  static inline const ModelUpdateProto* internal_default_instance() {$/;"	f	class:caffe::ModelUpdateProto
internal_default_instance	caffe.pb.h	/^  static inline const MultinomialLogisticLossProto* internal_default_instance() {$/;"	f	class:caffe::MultinomialLogisticLossProto
internal_default_instance	caffe.pb.h	/^  static inline const NetParameter* internal_default_instance() {$/;"	f	class:caffe::NetParameter
internal_default_instance	caffe.pb.h	/^  static inline const NetProto* internal_default_instance() {$/;"	f	class:caffe::NetProto
internal_default_instance	caffe.pb.h	/^  static inline const NetState* internal_default_instance() {$/;"	f	class:caffe::NetState
internal_default_instance	caffe.pb.h	/^  static inline const NullUpdateProto* internal_default_instance() {$/;"	f	class:caffe::NullUpdateProto
internal_default_instance	caffe.pb.h	/^  static inline const ParamSpec* internal_default_instance() {$/;"	f	class:caffe::ParamSpec
internal_default_instance	caffe.pb.h	/^  static inline const PlaceholderProto* internal_default_instance() {$/;"	f	class:caffe::PlaceholderProto
internal_default_instance	caffe.pb.h	/^  static inline const PlacementGroup* internal_default_instance() {$/;"	f	class:caffe::PlacementGroup
internal_default_instance	caffe.pb.h	/^  static inline const PoolingProto* internal_default_instance() {$/;"	f	class:caffe::PoolingProto
internal_default_instance	caffe.pb.h	/^  static inline const ReLUProto* internal_default_instance() {$/;"	f	class:caffe::ReLUProto
internal_default_instance	caffe.pb.h	/^  static inline const Resource* internal_default_instance() {$/;"	f	class:caffe::Resource
internal_default_instance	caffe.pb.h	/^  static inline const SigmoidProto* internal_default_instance() {$/;"	f	class:caffe::SigmoidProto
internal_default_instance	caffe.pb.h	/^  static inline const SoftmaxProto* internal_default_instance() {$/;"	f	class:caffe::SoftmaxProto
internal_default_instance	caffe.pb.h	/^  static inline const SolverProto* internal_default_instance() {$/;"	f	class:caffe::SolverProto
internal_default_instance	caffe.pb.h	/^  static inline const SolverState* internal_default_instance() {$/;"	f	class:caffe::SolverState
internal_default_instance	caffe.pb.h	/^  static inline const SplitProto* internal_default_instance() {$/;"	f	class:caffe::SplitProto
internal_default_instance	caffe.pb.h	/^  static inline const StoreProto* internal_default_instance() {$/;"	f	class:caffe::StoreProto
internal_default_instance	caffe.pb.h	/^  static inline const Strategy* internal_default_instance() {$/;"	f	class:caffe::Strategy
is_proto_enum	caffe.pb.h	/^template <> struct is_proto_enum< ::caffe::BlobProto_DataType> : ::google::protobuf::internal::true_type {};$/;"	s	namespace:google::protobuf
is_proto_enum	caffe.pb.h	/^template <> struct is_proto_enum< ::caffe::BoxingOp> : ::google::protobuf::internal::true_type {};$/;"	s	namespace:google::protobuf
is_proto_enum	caffe.pb.h	/^template <> struct is_proto_enum< ::caffe::ConvolutionProto_Engine> : ::google::protobuf::internal::true_type {};$/;"	s	namespace:google::protobuf
is_proto_enum	caffe.pb.h	/^template <> struct is_proto_enum< ::caffe::CopyType> : ::google::protobuf::internal::true_type {};$/;"	s	namespace:google::protobuf
is_proto_enum	caffe.pb.h	/^template <> struct is_proto_enum< ::caffe::LRNProto_Engine> : ::google::protobuf::internal::true_type {};$/;"	s	namespace:google::protobuf
is_proto_enum	caffe.pb.h	/^template <> struct is_proto_enum< ::caffe::LRNProto_NormRegion> : ::google::protobuf::internal::true_type {};$/;"	s	namespace:google::protobuf
is_proto_enum	caffe.pb.h	/^template <> struct is_proto_enum< ::caffe::ParallelPolicy> : ::google::protobuf::internal::true_type {};$/;"	s	namespace:google::protobuf
is_proto_enum	caffe.pb.h	/^template <> struct is_proto_enum< ::caffe::ParamSpec_DimCheckMode> : ::google::protobuf::internal::true_type {};$/;"	s	namespace:google::protobuf
is_proto_enum	caffe.pb.h	/^template <> struct is_proto_enum< ::caffe::Phase> : ::google::protobuf::internal::true_type {};$/;"	s	namespace:google::protobuf
is_proto_enum	caffe.pb.h	/^template <> struct is_proto_enum< ::caffe::PoolingProto_Engine> : ::google::protobuf::internal::true_type {};$/;"	s	namespace:google::protobuf
is_proto_enum	caffe.pb.h	/^template <> struct is_proto_enum< ::caffe::PoolingProto_PoolMethod> : ::google::protobuf::internal::true_type {};$/;"	s	namespace:google::protobuf
is_proto_enum	caffe.pb.h	/^template <> struct is_proto_enum< ::caffe::ReLUProto_Engine> : ::google::protobuf::internal::true_type {};$/;"	s	namespace:google::protobuf
is_proto_enum	caffe.pb.h	/^template <> struct is_proto_enum< ::caffe::SigmoidProto_Engine> : ::google::protobuf::internal::true_type {};$/;"	s	namespace:google::protobuf
is_proto_enum	caffe.pb.h	/^template <> struct is_proto_enum< ::caffe::SoftmaxProto_Engine> : ::google::protobuf::internal::true_type {};$/;"	s	namespace:google::protobuf
is_proto_enum	caffe.pb.h	/^template <> struct is_proto_enum< ::caffe::SolverProto_SolverMode> : ::google::protobuf::internal::true_type {};$/;"	s	namespace:google::protobuf
is_proto_enum	caffe.pb.h	/^template <> struct is_proto_enum< ::caffe::SolverProto_SolverType> : ::google::protobuf::internal::true_type {};$/;"	s	namespace:google::protobuf
is_proto_enum	caffe.pb.h	/^template <> struct is_proto_enum< ::caffe::StoreProto_Engine> : ::google::protobuf::internal::true_type {};$/;"	s	namespace:google::protobuf
is_sink	graph.h	/^  bool is_sink;$/;"	m	struct:dataflow::NodeInfo
is_src	graph.h	/^  bool is_src;$/;"	m	struct:dataflow::NodeInfo
iter	caffe.pb.cc	/^::google::protobuf::int32 SolverState::iter() const {$/;"	f	class:caffe::SolverState
iter	caffe.pb.h	/^inline ::google::protobuf::int32 SolverState::iter() const {$/;"	f	class:caffe::SolverState
iter_	caffe.pb.h	/^  ::google::protobuf::int32 iter_;$/;"	m	class:caffe::SolverState
k	caffe.pb.cc	/^float LRNProto::k() const {$/;"	f	class:caffe::LRNProto
k	caffe.pb.h	/^inline float LRNProto::k() const {$/;"	f	class:caffe::LRNProto
kAlphaFieldNumber	caffe.pb.cc	/^const int LRNProto::kAlphaFieldNumber;$/;"	m	class:caffe::LRNProto	file:
kAlphaFieldNumber	caffe.pb.h	/^  static const int kAlphaFieldNumber = 2;$/;"	m	class:caffe::LRNProto
kAverageLossFieldNumber	caffe.pb.cc	/^const int SolverProto::kAverageLossFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kAverageLossFieldNumber	caffe.pb.h	/^  static const int kAverageLossFieldNumber = 35;$/;"	m	class:caffe::SolverProto
kAxisFieldNumber	caffe.pb.cc	/^const int ConcatProto::kAxisFieldNumber;$/;"	m	class:caffe::ConcatProto	file:
kAxisFieldNumber	caffe.pb.cc	/^const int InnerProductProto::kAxisFieldNumber;$/;"	m	class:caffe::InnerProductProto	file:
kAxisFieldNumber	caffe.pb.cc	/^const int SoftmaxProto::kAxisFieldNumber;$/;"	m	class:caffe::SoftmaxProto	file:
kAxisFieldNumber	caffe.pb.h	/^  static const int kAxisFieldNumber = 2;$/;"	m	class:caffe::SoftmaxProto
kAxisFieldNumber	caffe.pb.h	/^  static const int kAxisFieldNumber = 4;$/;"	m	class:caffe::ConcatProto
kAxisFieldNumber	caffe.pb.h	/^  static const int kAxisFieldNumber = 5;$/;"	m	class:caffe::InnerProductProto
kBackwardInOpFieldNumber	caffe.pb.cc	/^const int BoxingProto::kBackwardInOpFieldNumber;$/;"	m	class:caffe::BoxingProto	file:
kBackwardInOpFieldNumber	caffe.pb.h	/^  static const int kBackwardInOpFieldNumber = 5;$/;"	m	class:caffe::BoxingProto
kBackwardOutOpFieldNumber	caffe.pb.cc	/^const int BoxingProto::kBackwardOutOpFieldNumber;$/;"	m	class:caffe::BoxingProto	file:
kBackwardOutOpFieldNumber	caffe.pb.h	/^  static const int kBackwardOutOpFieldNumber = 15;$/;"	m	class:caffe::BoxingProto
kBaseLrFieldNumber	caffe.pb.cc	/^const int SolverProto::kBaseLrFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kBaseLrFieldNumber	caffe.pb.h	/^  static const int kBaseLrFieldNumber = 33;$/;"	m	class:caffe::SolverProto
kBatchnormProtoFieldNumber	caffe.pb.cc	/^const int LayerProto::kBatchnormProtoFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kBatchnormProtoFieldNumber	caffe.pb.h	/^  static const int kBatchnormProtoFieldNumber = 135;$/;"	m	class:caffe::LayerProto
kBeginFieldNumber	caffe.pb.cc	/^const int DeviceGroup::kBeginFieldNumber;$/;"	m	class:caffe::DeviceGroup	file:
kBeginFieldNumber	caffe.pb.cc	/^const int MachineGroup::kBeginFieldNumber;$/;"	m	class:caffe::MachineGroup	file:
kBeginFieldNumber	caffe.pb.h	/^  static const int kBeginFieldNumber = 1;$/;"	m	class:caffe::DeviceGroup
kBeginFieldNumber	caffe.pb.h	/^  static const int kBeginFieldNumber = 1;$/;"	m	class:caffe::MachineGroup
kBetaFieldNumber	caffe.pb.cc	/^const int LRNProto::kBetaFieldNumber;$/;"	m	class:caffe::LRNProto	file:
kBetaFieldNumber	caffe.pb.h	/^  static const int kBetaFieldNumber = 3;$/;"	m	class:caffe::LRNProto
kBiasFillerFieldNumber	caffe.pb.cc	/^const int ConvolutionProto::kBiasFillerFieldNumber;$/;"	m	class:caffe::ConvolutionProto	file:
kBiasFillerFieldNumber	caffe.pb.cc	/^const int InnerProductProto::kBiasFillerFieldNumber;$/;"	m	class:caffe::InnerProductProto	file:
kBiasFillerFieldNumber	caffe.pb.h	/^  static const int kBiasFillerFieldNumber = 4;$/;"	m	class:caffe::InnerProductProto
kBiasFillerFieldNumber	caffe.pb.h	/^  static const int kBiasFillerFieldNumber = 8;$/;"	m	class:caffe::ConvolutionProto
kBiasTermFieldNumber	caffe.pb.cc	/^const int ConvolutionProto::kBiasTermFieldNumber;$/;"	m	class:caffe::ConvolutionProto	file:
kBiasTermFieldNumber	caffe.pb.cc	/^const int InnerProductProto::kBiasTermFieldNumber;$/;"	m	class:caffe::InnerProductProto	file:
kBiasTermFieldNumber	caffe.pb.h	/^  static const int kBiasTermFieldNumber = 2;$/;"	m	class:caffe::ConvolutionProto
kBiasTermFieldNumber	caffe.pb.h	/^  static const int kBiasTermFieldNumber = 2;$/;"	m	class:caffe::InnerProductProto
kByteDataFieldNumber	caffe.pb.cc	/^const int BlobProto::kByteDataFieldNumber;$/;"	m	class:caffe::BlobProto	file:
kByteDataFieldNumber	caffe.pb.h	/^  static const int kByteDataFieldNumber = 5;$/;"	m	class:caffe::BlobProto
kChannelFieldNumber	caffe.pb.cc	/^const int LoaderProto::kChannelFieldNumber;$/;"	m	class:caffe::LoaderProto	file:
kChannelFieldNumber	caffe.pb.h	/^  static const int kChannelFieldNumber = 122;$/;"	m	class:caffe::LoaderProto
kClipGradientsFieldNumber	caffe.pb.cc	/^const int SolverProto::kClipGradientsFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kClipGradientsFieldNumber	caffe.pb.h	/^  static const int kClipGradientsFieldNumber = 46;$/;"	m	class:caffe::SolverProto
kConcatProtoFieldNumber	caffe.pb.cc	/^const int LayerProto::kConcatProtoFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kConcatProtoFieldNumber	caffe.pb.h	/^  static const int kConcatProtoFieldNumber = 132;$/;"	m	class:caffe::LayerProto
kConvolutionProtoFieldNumber	caffe.pb.cc	/^const int LayerProto::kConvolutionProtoFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kConvolutionProtoFieldNumber	caffe.pb.h	/^  static const int kConvolutionProtoFieldNumber = 106;$/;"	m	class:caffe::LayerProto
kCopyTypeFieldNumber	caffe.pb.cc	/^const int CopyProto::kCopyTypeFieldNumber;$/;"	m	class:caffe::CopyProto	file:
kCopyTypeFieldNumber	caffe.pb.h	/^  static const int kCopyTypeFieldNumber = 2;$/;"	m	class:caffe::CopyProto
kCurrentStepFieldNumber	caffe.pb.cc	/^const int SolverState::kCurrentStepFieldNumber;$/;"	m	class:caffe::SolverState	file:
kCurrentStepFieldNumber	caffe.pb.h	/^  static const int kCurrentStepFieldNumber = 4;$/;"	m	class:caffe::SolverState
kDataFieldNumber	caffe.pb.cc	/^const int LoaderProto::kDataFieldNumber;$/;"	m	class:caffe::LoaderProto	file:
kDataFieldNumber	caffe.pb.cc	/^const int MultinomialLogisticLossProto::kDataFieldNumber;$/;"	m	class:caffe::MultinomialLogisticLossProto	file:
kDataFieldNumber	caffe.pb.h	/^  static const int kDataFieldNumber = 120;$/;"	m	class:caffe::LoaderProto
kDataFieldNumber	caffe.pb.h	/^  static const int kDataFieldNumber = 120;$/;"	m	class:caffe::MultinomialLogisticLossProto
kDataParallelOnMultipleDevices	caffe.pb.h	/^  kDataParallelOnMultipleDevices = 2,$/;"	e	enum:caffe::ParallelPolicy
kDataParallelOnMultipleMachines	caffe.pb.h	/^  kDataParallelOnMultipleMachines = 5,$/;"	e	enum:caffe::ParallelPolicy
kDataTypeFieldNumber	caffe.pb.cc	/^const int BlobProto::kDataTypeFieldNumber;$/;"	m	class:caffe::BlobProto	file:
kDataTypeFieldNumber	caffe.pb.h	/^  static const int kDataTypeFieldNumber = 2;$/;"	m	class:caffe::BlobProto
kDebugInfoFieldNumber	caffe.pb.cc	/^const int NetParameter::kDebugInfoFieldNumber;$/;"	m	class:caffe::NetParameter	file:
kDebugInfoFieldNumber	caffe.pb.cc	/^const int SolverProto::kDebugInfoFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kDebugInfoFieldNumber	caffe.pb.h	/^  static const int kDebugInfoFieldNumber = 60;$/;"	m	class:caffe::SolverProto
kDebugInfoFieldNumber	caffe.pb.h	/^  static const int kDebugInfoFieldNumber = 7;$/;"	m	class:caffe::NetParameter
kDecayMultFieldNumber	caffe.pb.cc	/^const int ParamSpec::kDecayMultFieldNumber;$/;"	m	class:caffe::ParamSpec	file:
kDecayMultFieldNumber	caffe.pb.h	/^  static const int kDecayMultFieldNumber = 4;$/;"	m	class:caffe::ParamSpec
kDeltaFieldNumber	caffe.pb.cc	/^const int SolverProto::kDeltaFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kDeltaFieldNumber	caffe.pb.h	/^  static const int kDeltaFieldNumber = 59;$/;"	m	class:caffe::SolverProto
kDeviceGroupFieldNumber	caffe.pb.cc	/^const int PlacementGroup::kDeviceGroupFieldNumber;$/;"	m	class:caffe::PlacementGroup	file:
kDeviceGroupFieldNumber	caffe.pb.h	/^  static const int kDeviceGroupFieldNumber = 3;$/;"	m	class:caffe::PlacementGroup
kDeviceIdFieldNumber	caffe.pb.cc	/^const int DeviceSet::kDeviceIdFieldNumber;$/;"	m	class:caffe::DeviceSet	file:
kDeviceIdFieldNumber	caffe.pb.h	/^  static const int kDeviceIdFieldNumber = 1;$/;"	m	class:caffe::DeviceSet
kDeviceSetFieldNumber	caffe.pb.cc	/^const int Machine::kDeviceSetFieldNumber;$/;"	m	class:caffe::Machine	file:
kDeviceSetFieldNumber	caffe.pb.h	/^  static const int kDeviceSetFieldNumber = 3;$/;"	m	class:caffe::Machine
kDimFieldNumber	caffe.pb.cc	/^const int BlobShape::kDimFieldNumber;$/;"	m	class:caffe::BlobShape	file:
kDimFieldNumber	caffe.pb.h	/^  static const int kDimFieldNumber = 1;$/;"	m	class:caffe::BlobShape
kDisplayFieldNumber	caffe.pb.cc	/^const int SolverProto::kDisplayFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kDisplayFieldNumber	caffe.pb.h	/^  static const int kDisplayFieldNumber = 34;$/;"	m	class:caffe::SolverProto
kDoubleDataFieldNumber	caffe.pb.cc	/^const int BlobProto::kDoubleDataFieldNumber;$/;"	m	class:caffe::BlobProto	file:
kDoubleDataFieldNumber	caffe.pb.h	/^  static const int kDoubleDataFieldNumber = 9;$/;"	m	class:caffe::BlobProto
kEndFieldNumber	caffe.pb.cc	/^const int DeviceGroup::kEndFieldNumber;$/;"	m	class:caffe::DeviceGroup	file:
kEndFieldNumber	caffe.pb.cc	/^const int MachineGroup::kEndFieldNumber;$/;"	m	class:caffe::MachineGroup	file:
kEndFieldNumber	caffe.pb.h	/^  static const int kEndFieldNumber = 2;$/;"	m	class:caffe::DeviceGroup
kEndFieldNumber	caffe.pb.h	/^  static const int kEndFieldNumber = 2;$/;"	m	class:caffe::MachineGroup
kEngineFieldNumber	caffe.pb.cc	/^const int ConvolutionProto::kEngineFieldNumber;$/;"	m	class:caffe::ConvolutionProto	file:
kEngineFieldNumber	caffe.pb.cc	/^const int LRNProto::kEngineFieldNumber;$/;"	m	class:caffe::LRNProto	file:
kEngineFieldNumber	caffe.pb.cc	/^const int PoolingProto::kEngineFieldNumber;$/;"	m	class:caffe::PoolingProto	file:
kEngineFieldNumber	caffe.pb.cc	/^const int ReLUProto::kEngineFieldNumber;$/;"	m	class:caffe::ReLUProto	file:
kEngineFieldNumber	caffe.pb.cc	/^const int SigmoidProto::kEngineFieldNumber;$/;"	m	class:caffe::SigmoidProto	file:
kEngineFieldNumber	caffe.pb.cc	/^const int SoftmaxProto::kEngineFieldNumber;$/;"	m	class:caffe::SoftmaxProto	file:
kEngineFieldNumber	caffe.pb.cc	/^const int StoreProto::kEngineFieldNumber;$/;"	m	class:caffe::StoreProto	file:
kEngineFieldNumber	caffe.pb.h	/^  static const int kEngineFieldNumber = 11;$/;"	m	class:caffe::PoolingProto
kEngineFieldNumber	caffe.pb.h	/^  static const int kEngineFieldNumber = 15;$/;"	m	class:caffe::ConvolutionProto
kEngineFieldNumber	caffe.pb.h	/^  static const int kEngineFieldNumber = 1;$/;"	m	class:caffe::SigmoidProto
kEngineFieldNumber	caffe.pb.h	/^  static const int kEngineFieldNumber = 1;$/;"	m	class:caffe::SoftmaxProto
kEngineFieldNumber	caffe.pb.h	/^  static const int kEngineFieldNumber = 1;$/;"	m	class:caffe::StoreProto
kEngineFieldNumber	caffe.pb.h	/^  static const int kEngineFieldNumber = 2;$/;"	m	class:caffe::ReLUProto
kEngineFieldNumber	caffe.pb.h	/^  static const int kEngineFieldNumber = 6;$/;"	m	class:caffe::LRNProto
kEpsFieldNumber	caffe.pb.cc	/^const int BatchNormProto::kEpsFieldNumber;$/;"	m	class:caffe::BatchNormProto	file:
kEpsFieldNumber	caffe.pb.h	/^  static const int kEpsFieldNumber = 3;$/;"	m	class:caffe::BatchNormProto
kFloatDataFieldNumber	caffe.pb.cc	/^const int BlobProto::kFloatDataFieldNumber;$/;"	m	class:caffe::BlobProto	file:
kFloatDataFieldNumber	caffe.pb.h	/^  static const int kFloatDataFieldNumber = 3;$/;"	m	class:caffe::BlobProto
kForceBackwardFieldNumber	caffe.pb.cc	/^const int NetParameter::kForceBackwardFieldNumber;$/;"	m	class:caffe::NetParameter	file:
kForceBackwardFieldNumber	caffe.pb.h	/^  static const int kForceBackwardFieldNumber = 5;$/;"	m	class:caffe::NetParameter
kForwardIsSenderFieldNumber	caffe.pb.cc	/^const int NetProto::kForwardIsSenderFieldNumber;$/;"	m	class:caffe::NetProto	file:
kForwardIsSenderFieldNumber	caffe.pb.h	/^  static const int kForwardIsSenderFieldNumber = 7;$/;"	m	class:caffe::NetProto
kGammaFieldNumber	caffe.pb.cc	/^const int SolverProto::kGammaFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kGammaFieldNumber	caffe.pb.h	/^  static const int kGammaFieldNumber = 39;$/;"	m	class:caffe::SolverProto
kGlobalPoolingFieldNumber	caffe.pb.cc	/^const int PoolingProto::kGlobalPoolingFieldNumber;$/;"	m	class:caffe::PoolingProto	file:
kGlobalPoolingFieldNumber	caffe.pb.h	/^  static const int kGlobalPoolingFieldNumber = 12;$/;"	m	class:caffe::PoolingProto
kGradientFieldNumber	caffe.pb.cc	/^const int ModelUpdateProto::kGradientFieldNumber;$/;"	m	class:caffe::ModelUpdateProto	file:
kGradientFieldNumber	caffe.pb.h	/^  static const int kGradientFieldNumber = 1;$/;"	m	class:caffe::ModelUpdateProto
kGroupFieldNumber	caffe.pb.cc	/^const int ConvolutionProto::kGroupFieldNumber;$/;"	m	class:caffe::ConvolutionProto	file:
kGroupFieldNumber	caffe.pb.h	/^  static const int kGroupFieldNumber = 5;$/;"	m	class:caffe::ConvolutionProto
kHeightFieldNumber	caffe.pb.cc	/^const int LoaderProto::kHeightFieldNumber;$/;"	m	class:caffe::LoaderProto	file:
kHeightFieldNumber	caffe.pb.h	/^  static const int kHeightFieldNumber = 123;$/;"	m	class:caffe::LoaderProto
kInAxisFieldNumber	caffe.pb.cc	/^const int BoxingProto::kInAxisFieldNumber;$/;"	m	class:caffe::BoxingProto	file:
kInAxisFieldNumber	caffe.pb.h	/^  static const int kInAxisFieldNumber = 4;$/;"	m	class:caffe::BoxingProto
kInEnvelopeFieldNumber	caffe.pb.cc	/^const int NetProto::kInEnvelopeFieldNumber;$/;"	m	class:caffe::NetProto	file:
kInEnvelopeFieldNumber	caffe.pb.h	/^  static const int kInEnvelopeFieldNumber = 1;$/;"	m	class:caffe::NetProto
kInFieldNumber	caffe.pb.cc	/^const int BoxingProto::kInFieldNumber;$/;"	m	class:caffe::BoxingProto	file:
kInFieldNumber	caffe.pb.cc	/^const int ConcatProto::kInFieldNumber;$/;"	m	class:caffe::ConcatProto	file:
kInFieldNumber	caffe.pb.cc	/^const int ConvolutionProto::kInFieldNumber;$/;"	m	class:caffe::ConvolutionProto	file:
kInFieldNumber	caffe.pb.cc	/^const int CopyProto::kInFieldNumber;$/;"	m	class:caffe::CopyProto	file:
kInFieldNumber	caffe.pb.cc	/^const int InnerProductProto::kInFieldNumber;$/;"	m	class:caffe::InnerProductProto	file:
kInFieldNumber	caffe.pb.cc	/^const int LRNProto::kInFieldNumber;$/;"	m	class:caffe::LRNProto	file:
kInFieldNumber	caffe.pb.cc	/^const int NetProto::kInFieldNumber;$/;"	m	class:caffe::NetProto	file:
kInFieldNumber	caffe.pb.cc	/^const int PlaceholderProto::kInFieldNumber;$/;"	m	class:caffe::PlaceholderProto	file:
kInFieldNumber	caffe.pb.cc	/^const int PoolingProto::kInFieldNumber;$/;"	m	class:caffe::PoolingProto	file:
kInFieldNumber	caffe.pb.cc	/^const int ReLUProto::kInFieldNumber;$/;"	m	class:caffe::ReLUProto	file:
kInFieldNumber	caffe.pb.cc	/^const int SigmoidProto::kInFieldNumber;$/;"	m	class:caffe::SigmoidProto	file:
kInFieldNumber	caffe.pb.cc	/^const int SoftmaxProto::kInFieldNumber;$/;"	m	class:caffe::SoftmaxProto	file:
kInFieldNumber	caffe.pb.cc	/^const int SplitProto::kInFieldNumber;$/;"	m	class:caffe::SplitProto	file:
kInFieldNumber	caffe.pb.cc	/^const int StoreProto::kInFieldNumber;$/;"	m	class:caffe::StoreProto	file:
kInFieldNumber	caffe.pb.h	/^  static const int kInFieldNumber = 100;$/;"	m	class:caffe::PlaceholderProto
kInFieldNumber	caffe.pb.h	/^  static const int kInFieldNumber = 120;$/;"	m	class:caffe::ConvolutionProto
kInFieldNumber	caffe.pb.h	/^  static const int kInFieldNumber = 120;$/;"	m	class:caffe::InnerProductProto
kInFieldNumber	caffe.pb.h	/^  static const int kInFieldNumber = 120;$/;"	m	class:caffe::LRNProto
kInFieldNumber	caffe.pb.h	/^  static const int kInFieldNumber = 120;$/;"	m	class:caffe::PoolingProto
kInFieldNumber	caffe.pb.h	/^  static const int kInFieldNumber = 120;$/;"	m	class:caffe::ReLUProto
kInFieldNumber	caffe.pb.h	/^  static const int kInFieldNumber = 120;$/;"	m	class:caffe::SigmoidProto
kInFieldNumber	caffe.pb.h	/^  static const int kInFieldNumber = 120;$/;"	m	class:caffe::SoftmaxProto
kInFieldNumber	caffe.pb.h	/^  static const int kInFieldNumber = 120;$/;"	m	class:caffe::StoreProto
kInFieldNumber	caffe.pb.h	/^  static const int kInFieldNumber = 2;$/;"	m	class:caffe::BoxingProto
kInFieldNumber	caffe.pb.h	/^  static const int kInFieldNumber = 2;$/;"	m	class:caffe::ConcatProto
kInFieldNumber	caffe.pb.h	/^  static const int kInFieldNumber = 2;$/;"	m	class:caffe::SplitProto
kInFieldNumber	caffe.pb.h	/^  static const int kInFieldNumber = 3;$/;"	m	class:caffe::CopyProto
kInFieldNumber	caffe.pb.h	/^  static const int kInFieldNumber = 3;$/;"	m	class:caffe::NetProto
kInNumFieldNumber	caffe.pb.cc	/^const int BoxingProto::kInNumFieldNumber;$/;"	m	class:caffe::BoxingProto	file:
kInNumFieldNumber	caffe.pb.cc	/^const int ConcatProto::kInNumFieldNumber;$/;"	m	class:caffe::ConcatProto	file:
kInNumFieldNumber	caffe.pb.cc	/^const int NetProto::kInNumFieldNumber;$/;"	m	class:caffe::NetProto	file:
kInNumFieldNumber	caffe.pb.h	/^  static const int kInNumFieldNumber = 1;$/;"	m	class:caffe::BoxingProto
kInNumFieldNumber	caffe.pb.h	/^  static const int kInNumFieldNumber = 1;$/;"	m	class:caffe::ConcatProto
kInNumFieldNumber	caffe.pb.h	/^  static const int kInNumFieldNumber = 2;$/;"	m	class:caffe::NetProto
kInOpFieldNumber	caffe.pb.cc	/^const int BoxingProto::kInOpFieldNumber;$/;"	m	class:caffe::BoxingProto	file:
kInOpFieldNumber	caffe.pb.h	/^  static const int kInOpFieldNumber = 3;$/;"	m	class:caffe::BoxingProto
kInnerproductProtoFieldNumber	caffe.pb.cc	/^const int LayerProto::kInnerproductProtoFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kInnerproductProtoFieldNumber	caffe.pb.h	/^  static const int kInnerproductProtoFieldNumber = 117;$/;"	m	class:caffe::LayerProto
kInputShapeFieldNumber	caffe.pb.cc	/^const int NetParameter::kInputShapeFieldNumber;$/;"	m	class:caffe::NetParameter	file:
kInputShapeFieldNumber	caffe.pb.h	/^  static const int kInputShapeFieldNumber = 8;$/;"	m	class:caffe::NetParameter
kInt32DataFieldNumber	caffe.pb.cc	/^const int BlobProto::kInt32DataFieldNumber;$/;"	m	class:caffe::BlobProto	file:
kInt32DataFieldNumber	caffe.pb.h	/^  static const int kInt32DataFieldNumber = 4;$/;"	m	class:caffe::BlobProto
kInt64DataFieldNumber	caffe.pb.cc	/^const int BlobProto::kInt64DataFieldNumber;$/;"	m	class:caffe::BlobProto	file:
kInt64DataFieldNumber	caffe.pb.h	/^  static const int kInt64DataFieldNumber = 10;$/;"	m	class:caffe::BlobProto
kIterFieldNumber	caffe.pb.cc	/^const int SolverState::kIterFieldNumber;$/;"	m	class:caffe::SolverState	file:
kIterFieldNumber	caffe.pb.h	/^  static const int kIterFieldNumber = 1;$/;"	m	class:caffe::SolverState
kKFieldNumber	caffe.pb.cc	/^const int LRNProto::kKFieldNumber;$/;"	m	class:caffe::LRNProto	file:
kKFieldNumber	caffe.pb.h	/^  static const int kKFieldNumber = 5;$/;"	m	class:caffe::LRNProto
kKernelHFieldNumber	caffe.pb.cc	/^const int ConvolutionProto::kKernelHFieldNumber;$/;"	m	class:caffe::ConvolutionProto	file:
kKernelHFieldNumber	caffe.pb.cc	/^const int PoolingProto::kKernelHFieldNumber;$/;"	m	class:caffe::PoolingProto	file:
kKernelHFieldNumber	caffe.pb.h	/^  static const int kKernelHFieldNumber = 11;$/;"	m	class:caffe::ConvolutionProto
kKernelHFieldNumber	caffe.pb.h	/^  static const int kKernelHFieldNumber = 5;$/;"	m	class:caffe::PoolingProto
kKernelSizeFieldNumber	caffe.pb.cc	/^const int ConvolutionProto::kKernelSizeFieldNumber;$/;"	m	class:caffe::ConvolutionProto	file:
kKernelSizeFieldNumber	caffe.pb.cc	/^const int PoolingProto::kKernelSizeFieldNumber;$/;"	m	class:caffe::PoolingProto	file:
kKernelSizeFieldNumber	caffe.pb.h	/^  static const int kKernelSizeFieldNumber = 2;$/;"	m	class:caffe::PoolingProto
kKernelSizeFieldNumber	caffe.pb.h	/^  static const int kKernelSizeFieldNumber = 4;$/;"	m	class:caffe::ConvolutionProto
kKernelWFieldNumber	caffe.pb.cc	/^const int ConvolutionProto::kKernelWFieldNumber;$/;"	m	class:caffe::ConvolutionProto	file:
kKernelWFieldNumber	caffe.pb.cc	/^const int PoolingProto::kKernelWFieldNumber;$/;"	m	class:caffe::PoolingProto	file:
kKernelWFieldNumber	caffe.pb.h	/^  static const int kKernelWFieldNumber = 12;$/;"	m	class:caffe::ConvolutionProto
kKernelWFieldNumber	caffe.pb.h	/^  static const int kKernelWFieldNumber = 6;$/;"	m	class:caffe::PoolingProto
kLabelFieldNumber	caffe.pb.cc	/^const int LoaderProto::kLabelFieldNumber;$/;"	m	class:caffe::LoaderProto	file:
kLabelFieldNumber	caffe.pb.cc	/^const int MultinomialLogisticLossProto::kLabelFieldNumber;$/;"	m	class:caffe::MultinomialLogisticLossProto	file:
kLabelFieldNumber	caffe.pb.h	/^  static const int kLabelFieldNumber = 121;$/;"	m	class:caffe::LoaderProto
kLabelFieldNumber	caffe.pb.h	/^  static const int kLabelFieldNumber = 121;$/;"	m	class:caffe::MultinomialLogisticLossProto
kLayerFieldNumber	caffe.pb.cc	/^const int NetParameter::kLayerFieldNumber;$/;"	m	class:caffe::NetParameter	file:
kLayerFieldNumber	caffe.pb.h	/^  static const int kLayerFieldNumber = 100;$/;"	m	class:caffe::NetParameter
kLayerNameToNodeType	graph.cc	/^  Graph::kLayerNameToNodeType = {$/;"	m	class:dataflow::Graph	file:
kLayerNameToNodeType	graph.h	/^  static std::unordered_map<std::string, NodeType> kLayerNameToNodeType;$/;"	m	class:dataflow::Graph
kLayerSeekPosFieldNumber	caffe.pb.cc	/^const int StoreProto::kLayerSeekPosFieldNumber;$/;"	m	class:caffe::StoreProto	file:
kLayerSeekPosFieldNumber	caffe.pb.h	/^  static const int kLayerSeekPosFieldNumber = 126;$/;"	m	class:caffe::StoreProto
kLayerSetFieldNumber	caffe.pb.cc	/^const int PlacementGroup::kLayerSetFieldNumber;$/;"	m	class:caffe::PlacementGroup	file:
kLayerSetFieldNumber	caffe.pb.h	/^  static const int kLayerSetFieldNumber = 2;$/;"	m	class:caffe::PlacementGroup
kLearnedNetFieldNumber	caffe.pb.cc	/^const int SolverState::kLearnedNetFieldNumber;$/;"	m	class:caffe::SolverState	file:
kLearnedNetFieldNumber	caffe.pb.h	/^  static const int kLearnedNetFieldNumber = 2;$/;"	m	class:caffe::SolverState
kLevelFieldNumber	caffe.pb.cc	/^const int NetState::kLevelFieldNumber;$/;"	m	class:caffe::NetState	file:
kLevelFieldNumber	caffe.pb.h	/^  static const int kLevelFieldNumber = 2;$/;"	m	class:caffe::NetState
kLoadLayerNamesFieldNumber	caffe.pb.cc	/^const int LoadPartialModelProto::kLoadLayerNamesFieldNumber;$/;"	m	class:caffe::LoadPartialModelProto	file:
kLoadLayerNamesFieldNumber	caffe.pb.h	/^  static const int kLoadLayerNamesFieldNumber = 124;$/;"	m	class:caffe::LoadPartialModelProto
kLoadLayerShapesFieldNumber	caffe.pb.cc	/^const int LoadPartialModelProto::kLoadLayerShapesFieldNumber;$/;"	m	class:caffe::LoadPartialModelProto	file:
kLoadLayerShapesFieldNumber	caffe.pb.h	/^  static const int kLoadLayerShapesFieldNumber = 125;$/;"	m	class:caffe::LoadPartialModelProto
kLoaderProtoFieldNumber	caffe.pb.cc	/^const int LayerProto::kLoaderProtoFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kLoaderProtoFieldNumber	caffe.pb.h	/^  static const int kLoaderProtoFieldNumber = 107;$/;"	m	class:caffe::LayerProto
kLoadpartialmodelProtoFieldNumber	caffe.pb.cc	/^const int LayerProto::kLoadpartialmodelProtoFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kLoadpartialmodelProtoFieldNumber	caffe.pb.h	/^  static const int kLoadpartialmodelProtoFieldNumber = 140;$/;"	m	class:caffe::LayerProto
kLocalSizeFieldNumber	caffe.pb.cc	/^const int LRNProto::kLocalSizeFieldNumber;$/;"	m	class:caffe::LRNProto	file:
kLocalSizeFieldNumber	caffe.pb.h	/^  static const int kLocalSizeFieldNumber = 1;$/;"	m	class:caffe::LRNProto
kLossFieldNumber	caffe.pb.cc	/^const int MultinomialLogisticLossProto::kLossFieldNumber;$/;"	m	class:caffe::MultinomialLogisticLossProto	file:
kLossFieldNumber	caffe.pb.h	/^  static const int kLossFieldNumber = 122;$/;"	m	class:caffe::MultinomialLogisticLossProto
kLrMultFieldNumber	caffe.pb.cc	/^const int ParamSpec::kLrMultFieldNumber;$/;"	m	class:caffe::ParamSpec	file:
kLrMultFieldNumber	caffe.pb.h	/^  static const int kLrMultFieldNumber = 3;$/;"	m	class:caffe::ParamSpec
kLrPolicyFieldNumber	caffe.pb.cc	/^const int SolverProto::kLrPolicyFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kLrPolicyFieldNumber	caffe.pb.h	/^  static const int kLrPolicyFieldNumber = 37;$/;"	m	class:caffe::SolverProto
kLrnProtoFieldNumber	caffe.pb.cc	/^const int LayerProto::kLrnProtoFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kLrnProtoFieldNumber	caffe.pb.h	/^  static const int kLrnProtoFieldNumber = 118;$/;"	m	class:caffe::LayerProto
kMachineFieldNumber	caffe.pb.cc	/^const int Resource::kMachineFieldNumber;$/;"	m	class:caffe::Resource	file:
kMachineFieldNumber	caffe.pb.h	/^  static const int kMachineFieldNumber = 1;$/;"	m	class:caffe::Resource
kMachineGroupFieldNumber	caffe.pb.cc	/^const int PlacementGroup::kMachineGroupFieldNumber;$/;"	m	class:caffe::PlacementGroup	file:
kMachineGroupFieldNumber	caffe.pb.h	/^  static const int kMachineGroupFieldNumber = 4;$/;"	m	class:caffe::PlacementGroup
kMachineIdFieldNumber	caffe.pb.cc	/^const int SolverProto::kMachineIdFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kMachineIdFieldNumber	caffe.pb.h	/^  static const int kMachineIdFieldNumber = 56;$/;"	m	class:caffe::SolverProto
kMaxFieldNumber	caffe.pb.cc	/^const int FillerParameter::kMaxFieldNumber;$/;"	m	class:caffe::FillerParameter	file:
kMaxFieldNumber	caffe.pb.h	/^  static const int kMaxFieldNumber = 4;$/;"	m	class:caffe::FillerParameter
kMaxIterFieldNumber	caffe.pb.cc	/^const int SolverProto::kMaxIterFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kMaxIterFieldNumber	caffe.pb.h	/^  static const int kMaxIterFieldNumber = 36;$/;"	m	class:caffe::SolverProto
kMeanFieldNumber	caffe.pb.cc	/^const int FillerParameter::kMeanFieldNumber;$/;"	m	class:caffe::FillerParameter	file:
kMeanFieldNumber	caffe.pb.h	/^  static const int kMeanFieldNumber = 5;$/;"	m	class:caffe::FillerParameter
kMinFieldNumber	caffe.pb.cc	/^const int FillerParameter::kMinFieldNumber;$/;"	m	class:caffe::FillerParameter	file:
kMinFieldNumber	caffe.pb.h	/^  static const int kMinFieldNumber = 3;$/;"	m	class:caffe::FillerParameter
kModelParallelOnMultipleDevices	caffe.pb.h	/^  kModelParallelOnMultipleDevices = 3,$/;"	e	enum:caffe::ParallelPolicy
kModelParallelOnMultipleMachines	caffe.pb.h	/^  kModelParallelOnMultipleMachines = 6$/;"	e	enum:caffe::ParallelPolicy
kModelupdateProtoFieldNumber	caffe.pb.cc	/^const int LayerProto::kModelupdateProtoFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kModelupdateProtoFieldNumber	caffe.pb.h	/^  static const int kModelupdateProtoFieldNumber = 136;$/;"	m	class:caffe::LayerProto
kMomentumFieldNumber	caffe.pb.cc	/^const int SolverProto::kMomentumFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kMomentumFieldNumber	caffe.pb.h	/^  static const int kMomentumFieldNumber = 41;$/;"	m	class:caffe::SolverProto
kMovingAverageFractionFieldNumber	caffe.pb.cc	/^const int BatchNormProto::kMovingAverageFractionFieldNumber;$/;"	m	class:caffe::BatchNormProto	file:
kMovingAverageFractionFieldNumber	caffe.pb.h	/^  static const int kMovingAverageFractionFieldNumber = 2;$/;"	m	class:caffe::BatchNormProto
kMultinomiallogisticlossProtoFieldNumber	caffe.pb.cc	/^const int LayerProto::kMultinomiallogisticlossProtoFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kMultinomiallogisticlossProtoFieldNumber	caffe.pb.h	/^  static const int kMultinomiallogisticlossProtoFieldNumber = 130;$/;"	m	class:caffe::LayerProto
kNaiveParallelOnSingleDevice	caffe.pb.h	/^  kNaiveParallelOnSingleDevice = 1,$/;"	e	enum:caffe::ParallelPolicy
kNaiveParallelOnSingleMachine	caffe.pb.h	/^  kNaiveParallelOnSingleMachine = 4,$/;"	e	enum:caffe::ParallelPolicy
kNameFieldNumber	caffe.pb.cc	/^const int BlobProto::kNameFieldNumber;$/;"	m	class:caffe::BlobProto	file:
kNameFieldNumber	caffe.pb.cc	/^const int LayerProto::kNameFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kNameFieldNumber	caffe.pb.cc	/^const int LayerSet::kNameFieldNumber;$/;"	m	class:caffe::LayerSet	file:
kNameFieldNumber	caffe.pb.cc	/^const int Machine::kNameFieldNumber;$/;"	m	class:caffe::Machine	file:
kNameFieldNumber	caffe.pb.cc	/^const int NetParameter::kNameFieldNumber;$/;"	m	class:caffe::NetParameter	file:
kNameFieldNumber	caffe.pb.cc	/^const int ParamSpec::kNameFieldNumber;$/;"	m	class:caffe::ParamSpec	file:
kNameFieldNumber	caffe.pb.cc	/^const int PlacementGroup::kNameFieldNumber;$/;"	m	class:caffe::PlacementGroup	file:
kNameFieldNumber	caffe.pb.h	/^  static const int kNameFieldNumber = 1;$/;"	m	class:caffe::LayerProto
kNameFieldNumber	caffe.pb.h	/^  static const int kNameFieldNumber = 1;$/;"	m	class:caffe::LayerSet
kNameFieldNumber	caffe.pb.h	/^  static const int kNameFieldNumber = 1;$/;"	m	class:caffe::Machine
kNameFieldNumber	caffe.pb.h	/^  static const int kNameFieldNumber = 1;$/;"	m	class:caffe::NetParameter
kNameFieldNumber	caffe.pb.h	/^  static const int kNameFieldNumber = 1;$/;"	m	class:caffe::ParamSpec
kNameFieldNumber	caffe.pb.h	/^  static const int kNameFieldNumber = 1;$/;"	m	class:caffe::PlacementGroup
kNameFieldNumber	caffe.pb.h	/^  static const int kNameFieldNumber = 7;$/;"	m	class:caffe::BlobProto
kNegativeSlopeFieldNumber	caffe.pb.cc	/^const int ReLUProto::kNegativeSlopeFieldNumber;$/;"	m	class:caffe::ReLUProto	file:
kNegativeSlopeFieldNumber	caffe.pb.h	/^  static const int kNegativeSlopeFieldNumber = 1;$/;"	m	class:caffe::ReLUProto
kNormRegionFieldNumber	caffe.pb.cc	/^const int LRNProto::kNormRegionFieldNumber;$/;"	m	class:caffe::LRNProto	file:
kNormRegionFieldNumber	caffe.pb.h	/^  static const int kNormRegionFieldNumber = 4;$/;"	m	class:caffe::LRNProto
kNullupdateProtoFieldNumber	caffe.pb.cc	/^const int LayerProto::kNullupdateProtoFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kNullupdateProtoFieldNumber	caffe.pb.h	/^  static const int kNullupdateProtoFieldNumber = 137;$/;"	m	class:caffe::LayerProto
kNumBatchPerSyncFieldNumber	caffe.pb.cc	/^const int SolverProto::kNumBatchPerSyncFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kNumBatchPerSyncFieldNumber	caffe.pb.h	/^  static const int kNumBatchPerSyncFieldNumber = 65;$/;"	m	class:caffe::SolverProto
kNumDataParamCopyFieldNumber	caffe.pb.cc	/^const int SolverProto::kNumDataParamCopyFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kNumDataParamCopyFieldNumber	caffe.pb.h	/^  static const int kNumDataParamCopyFieldNumber = 63;$/;"	m	class:caffe::SolverProto
kNumFieldNumber	caffe.pb.cc	/^const int CopyProto::kNumFieldNumber;$/;"	m	class:caffe::CopyProto	file:
kNumFieldNumber	caffe.pb.h	/^  static const int kNumFieldNumber = 1;$/;"	m	class:caffe::CopyProto
kNumModelParamCopyFieldNumber	caffe.pb.cc	/^const int SolverProto::kNumModelParamCopyFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kNumModelParamCopyFieldNumber	caffe.pb.h	/^  static const int kNumModelParamCopyFieldNumber = 64;$/;"	m	class:caffe::SolverProto
kNumOutputFieldNumber	caffe.pb.cc	/^const int ConvolutionProto::kNumOutputFieldNumber;$/;"	m	class:caffe::ConvolutionProto	file:
kNumOutputFieldNumber	caffe.pb.cc	/^const int InnerProductProto::kNumOutputFieldNumber;$/;"	m	class:caffe::InnerProductProto	file:
kNumOutputFieldNumber	caffe.pb.h	/^  static const int kNumOutputFieldNumber = 1;$/;"	m	class:caffe::ConvolutionProto
kNumOutputFieldNumber	caffe.pb.h	/^  static const int kNumOutputFieldNumber = 1;$/;"	m	class:caffe::InnerProductProto
kOldWeightFieldNumber	caffe.pb.cc	/^const int ModelUpdateProto::kOldWeightFieldNumber;$/;"	m	class:caffe::ModelUpdateProto	file:
kOldWeightFieldNumber	caffe.pb.h	/^  static const int kOldWeightFieldNumber = 2;$/;"	m	class:caffe::ModelUpdateProto
kOutAxisFieldNumber	caffe.pb.cc	/^const int BoxingProto::kOutAxisFieldNumber;$/;"	m	class:caffe::BoxingProto	file:
kOutAxisFieldNumber	caffe.pb.h	/^  static const int kOutAxisFieldNumber = 14;$/;"	m	class:caffe::BoxingProto
kOutEnvelopeFieldNumber	caffe.pb.cc	/^const int NetProto::kOutEnvelopeFieldNumber;$/;"	m	class:caffe::NetProto	file:
kOutEnvelopeFieldNumber	caffe.pb.h	/^  static const int kOutEnvelopeFieldNumber = 4;$/;"	m	class:caffe::NetProto
kOutFieldNumber	caffe.pb.cc	/^const int BoxingProto::kOutFieldNumber;$/;"	m	class:caffe::BoxingProto	file:
kOutFieldNumber	caffe.pb.cc	/^const int ConcatProto::kOutFieldNumber;$/;"	m	class:caffe::ConcatProto	file:
kOutFieldNumber	caffe.pb.cc	/^const int ConvolutionProto::kOutFieldNumber;$/;"	m	class:caffe::ConvolutionProto	file:
kOutFieldNumber	caffe.pb.cc	/^const int CopyProto::kOutFieldNumber;$/;"	m	class:caffe::CopyProto	file:
kOutFieldNumber	caffe.pb.cc	/^const int InnerProductProto::kOutFieldNumber;$/;"	m	class:caffe::InnerProductProto	file:
kOutFieldNumber	caffe.pb.cc	/^const int LRNProto::kOutFieldNumber;$/;"	m	class:caffe::LRNProto	file:
kOutFieldNumber	caffe.pb.cc	/^const int LoadPartialModelProto::kOutFieldNumber;$/;"	m	class:caffe::LoadPartialModelProto	file:
kOutFieldNumber	caffe.pb.cc	/^const int NetProto::kOutFieldNumber;$/;"	m	class:caffe::NetProto	file:
kOutFieldNumber	caffe.pb.cc	/^const int PlaceholderProto::kOutFieldNumber;$/;"	m	class:caffe::PlaceholderProto	file:
kOutFieldNumber	caffe.pb.cc	/^const int PoolingProto::kOutFieldNumber;$/;"	m	class:caffe::PoolingProto	file:
kOutFieldNumber	caffe.pb.cc	/^const int ReLUProto::kOutFieldNumber;$/;"	m	class:caffe::ReLUProto	file:
kOutFieldNumber	caffe.pb.cc	/^const int SigmoidProto::kOutFieldNumber;$/;"	m	class:caffe::SigmoidProto	file:
kOutFieldNumber	caffe.pb.cc	/^const int SoftmaxProto::kOutFieldNumber;$/;"	m	class:caffe::SoftmaxProto	file:
kOutFieldNumber	caffe.pb.cc	/^const int SplitProto::kOutFieldNumber;$/;"	m	class:caffe::SplitProto	file:
kOutFieldNumber	caffe.pb.cc	/^const int StoreProto::kOutFieldNumber;$/;"	m	class:caffe::StoreProto	file:
kOutFieldNumber	caffe.pb.h	/^  static const int kOutFieldNumber = 101;$/;"	m	class:caffe::PlaceholderProto
kOutFieldNumber	caffe.pb.h	/^  static const int kOutFieldNumber = 121;$/;"	m	class:caffe::ConvolutionProto
kOutFieldNumber	caffe.pb.h	/^  static const int kOutFieldNumber = 121;$/;"	m	class:caffe::InnerProductProto
kOutFieldNumber	caffe.pb.h	/^  static const int kOutFieldNumber = 121;$/;"	m	class:caffe::LRNProto
kOutFieldNumber	caffe.pb.h	/^  static const int kOutFieldNumber = 121;$/;"	m	class:caffe::PoolingProto
kOutFieldNumber	caffe.pb.h	/^  static const int kOutFieldNumber = 121;$/;"	m	class:caffe::ReLUProto
kOutFieldNumber	caffe.pb.h	/^  static const int kOutFieldNumber = 121;$/;"	m	class:caffe::SigmoidProto
kOutFieldNumber	caffe.pb.h	/^  static const int kOutFieldNumber = 121;$/;"	m	class:caffe::SoftmaxProto
kOutFieldNumber	caffe.pb.h	/^  static const int kOutFieldNumber = 121;$/;"	m	class:caffe::StoreProto
kOutFieldNumber	caffe.pb.h	/^  static const int kOutFieldNumber = 12;$/;"	m	class:caffe::BoxingProto
kOutFieldNumber	caffe.pb.h	/^  static const int kOutFieldNumber = 1;$/;"	m	class:caffe::LoadPartialModelProto
kOutFieldNumber	caffe.pb.h	/^  static const int kOutFieldNumber = 3;$/;"	m	class:caffe::ConcatProto
kOutFieldNumber	caffe.pb.h	/^  static const int kOutFieldNumber = 3;$/;"	m	class:caffe::SplitProto
kOutFieldNumber	caffe.pb.h	/^  static const int kOutFieldNumber = 4;$/;"	m	class:caffe::CopyProto
kOutFieldNumber	caffe.pb.h	/^  static const int kOutFieldNumber = 6;$/;"	m	class:caffe::NetProto
kOutNumFieldNumber	caffe.pb.cc	/^const int BoxingProto::kOutNumFieldNumber;$/;"	m	class:caffe::BoxingProto	file:
kOutNumFieldNumber	caffe.pb.cc	/^const int NetProto::kOutNumFieldNumber;$/;"	m	class:caffe::NetProto	file:
kOutNumFieldNumber	caffe.pb.cc	/^const int SplitProto::kOutNumFieldNumber;$/;"	m	class:caffe::SplitProto	file:
kOutNumFieldNumber	caffe.pb.h	/^  static const int kOutNumFieldNumber = 110;$/;"	m	class:caffe::BoxingProto
kOutNumFieldNumber	caffe.pb.h	/^  static const int kOutNumFieldNumber = 1;$/;"	m	class:caffe::SplitProto
kOutNumFieldNumber	caffe.pb.h	/^  static const int kOutNumFieldNumber = 5;$/;"	m	class:caffe::NetProto
kOutOpFieldNumber	caffe.pb.cc	/^const int BoxingProto::kOutOpFieldNumber;$/;"	m	class:caffe::BoxingProto	file:
kOutOpFieldNumber	caffe.pb.h	/^  static const int kOutOpFieldNumber = 13;$/;"	m	class:caffe::BoxingProto
kPadFieldNumber	caffe.pb.cc	/^const int ConvolutionProto::kPadFieldNumber;$/;"	m	class:caffe::ConvolutionProto	file:
kPadFieldNumber	caffe.pb.cc	/^const int PoolingProto::kPadFieldNumber;$/;"	m	class:caffe::PoolingProto	file:
kPadFieldNumber	caffe.pb.h	/^  static const int kPadFieldNumber = 3;$/;"	m	class:caffe::ConvolutionProto
kPadFieldNumber	caffe.pb.h	/^  static const int kPadFieldNumber = 4;$/;"	m	class:caffe::PoolingProto
kPadHFieldNumber	caffe.pb.cc	/^const int ConvolutionProto::kPadHFieldNumber;$/;"	m	class:caffe::ConvolutionProto	file:
kPadHFieldNumber	caffe.pb.cc	/^const int PoolingProto::kPadHFieldNumber;$/;"	m	class:caffe::PoolingProto	file:
kPadHFieldNumber	caffe.pb.h	/^  static const int kPadHFieldNumber = 9;$/;"	m	class:caffe::ConvolutionProto
kPadHFieldNumber	caffe.pb.h	/^  static const int kPadHFieldNumber = 9;$/;"	m	class:caffe::PoolingProto
kPadWFieldNumber	caffe.pb.cc	/^const int ConvolutionProto::kPadWFieldNumber;$/;"	m	class:caffe::ConvolutionProto	file:
kPadWFieldNumber	caffe.pb.cc	/^const int PoolingProto::kPadWFieldNumber;$/;"	m	class:caffe::PoolingProto	file:
kPadWFieldNumber	caffe.pb.h	/^  static const int kPadWFieldNumber = 10;$/;"	m	class:caffe::ConvolutionProto
kPadWFieldNumber	caffe.pb.h	/^  static const int kPadWFieldNumber = 10;$/;"	m	class:caffe::PoolingProto
kParallelPolicyFieldNumber	caffe.pb.cc	/^const int PlacementGroup::kParallelPolicyFieldNumber;$/;"	m	class:caffe::PlacementGroup	file:
kParallelPolicyFieldNumber	caffe.pb.h	/^  static const int kParallelPolicyFieldNumber = 5;$/;"	m	class:caffe::PlacementGroup
kParamFieldNumber	caffe.pb.cc	/^const int ConvolutionProto::kParamFieldNumber;$/;"	m	class:caffe::ConvolutionProto	file:
kParamFieldNumber	caffe.pb.cc	/^const int InnerProductProto::kParamFieldNumber;$/;"	m	class:caffe::InnerProductProto	file:
kParamFieldNumber	caffe.pb.h	/^  static const int kParamFieldNumber = 100;$/;"	m	class:caffe::ConvolutionProto
kParamFieldNumber	caffe.pb.h	/^  static const int kParamFieldNumber = 100;$/;"	m	class:caffe::InnerProductProto
kPhaseFieldNumber	caffe.pb.cc	/^const int NetState::kPhaseFieldNumber;$/;"	m	class:caffe::NetState	file:
kPhaseFieldNumber	caffe.pb.h	/^  static const int kPhaseFieldNumber = 1;$/;"	m	class:caffe::NetState
kPieceSizeFieldNumber	caffe.pb.cc	/^const int LoaderProto::kPieceSizeFieldNumber;$/;"	m	class:caffe::LoaderProto	file:
kPieceSizeFieldNumber	caffe.pb.h	/^  static const int kPieceSizeFieldNumber = 4;$/;"	m	class:caffe::LoaderProto
kPlaceholderProtoFieldNumber	caffe.pb.cc	/^const int LayerProto::kPlaceholderProtoFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kPlaceholderProtoFieldNumber	caffe.pb.h	/^  static const int kPlaceholderProtoFieldNumber = 141;$/;"	m	class:caffe::LayerProto
kPlacementGroupFieldNumber	caffe.pb.cc	/^const int Strategy::kPlacementGroupFieldNumber;$/;"	m	class:caffe::Strategy	file:
kPlacementGroupFieldNumber	caffe.pb.h	/^  static const int kPlacementGroupFieldNumber = 1;$/;"	m	class:caffe::Strategy
kPoolFieldNumber	caffe.pb.cc	/^const int PoolingProto::kPoolFieldNumber;$/;"	m	class:caffe::PoolingProto	file:
kPoolFieldNumber	caffe.pb.h	/^  static const int kPoolFieldNumber = 1;$/;"	m	class:caffe::PoolingProto
kPoolingProtoFieldNumber	caffe.pb.cc	/^const int LayerProto::kPoolingProtoFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kPoolingProtoFieldNumber	caffe.pb.h	/^  static const int kPoolingProtoFieldNumber = 121;$/;"	m	class:caffe::LayerProto
kPortFieldNumber	caffe.pb.cc	/^const int Machine::kPortFieldNumber;$/;"	m	class:caffe::Machine	file:
kPortFieldNumber	caffe.pb.h	/^  static const int kPortFieldNumber = 2;$/;"	m	class:caffe::Machine
kPowerFieldNumber	caffe.pb.cc	/^const int SolverProto::kPowerFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kPowerFieldNumber	caffe.pb.h	/^  static const int kPowerFieldNumber = 40;$/;"	m	class:caffe::SolverProto
kRandomSeedFieldNumber	caffe.pb.cc	/^const int SolverProto::kRandomSeedFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kRandomSeedFieldNumber	caffe.pb.h	/^  static const int kRandomSeedFieldNumber = 52;$/;"	m	class:caffe::SolverProto
kRegularizationTypeFieldNumber	caffe.pb.cc	/^const int SolverProto::kRegularizationTypeFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kRegularizationTypeFieldNumber	caffe.pb.h	/^  static const int kRegularizationTypeFieldNumber = 43;$/;"	m	class:caffe::SolverProto
kReluProtoFieldNumber	caffe.pb.cc	/^const int LayerProto::kReluProtoFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kReluProtoFieldNumber	caffe.pb.h	/^  static const int kReluProtoFieldNumber = 123;$/;"	m	class:caffe::LayerProto
kResourceFieldNumber	caffe.pb.cc	/^const int SolverProto::kResourceFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kResourceFieldNumber	caffe.pb.h	/^  static const int kResourceFieldNumber = 3;$/;"	m	class:caffe::SolverProto
kShapeFieldNumber	caffe.pb.cc	/^const int BlobProto::kShapeFieldNumber;$/;"	m	class:caffe::BlobProto	file:
kShapeFieldNumber	caffe.pb.h	/^  static const int kShapeFieldNumber = 1;$/;"	m	class:caffe::BlobProto
kShareModeFieldNumber	caffe.pb.cc	/^const int ParamSpec::kShareModeFieldNumber;$/;"	m	class:caffe::ParamSpec	file:
kShareModeFieldNumber	caffe.pb.h	/^  static const int kShareModeFieldNumber = 2;$/;"	m	class:caffe::ParamSpec
kSigmoidProtoFieldNumber	caffe.pb.cc	/^const int LayerProto::kSigmoidProtoFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kSigmoidProtoFieldNumber	caffe.pb.h	/^  static const int kSigmoidProtoFieldNumber = 124;$/;"	m	class:caffe::LayerProto
kSnapshotAfterTrainFieldNumber	caffe.pb.cc	/^const int SolverProto::kSnapshotAfterTrainFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kSnapshotAfterTrainFieldNumber	caffe.pb.h	/^  static const int kSnapshotAfterTrainFieldNumber = 62;$/;"	m	class:caffe::SolverProto
kSnapshotDiffFieldNumber	caffe.pb.cc	/^const int SolverProto::kSnapshotDiffFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kSnapshotDiffFieldNumber	caffe.pb.h	/^  static const int kSnapshotDiffFieldNumber = 49;$/;"	m	class:caffe::SolverProto
kSnapshotFieldNumber	caffe.pb.cc	/^const int SolverProto::kSnapshotFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kSnapshotFieldNumber	caffe.pb.h	/^  static const int kSnapshotFieldNumber = 47;$/;"	m	class:caffe::SolverProto
kSnapshotPrefixFieldNumber	caffe.pb.cc	/^const int SolverProto::kSnapshotPrefixFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kSnapshotPrefixFieldNumber	caffe.pb.h	/^  static const int kSnapshotPrefixFieldNumber = 48;$/;"	m	class:caffe::SolverProto
kSoftmaxProtoFieldNumber	caffe.pb.cc	/^const int LayerProto::kSoftmaxProtoFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kSoftmaxProtoFieldNumber	caffe.pb.h	/^  static const int kSoftmaxProtoFieldNumber = 125;$/;"	m	class:caffe::LayerProto
kSolverTypeFieldNumber	caffe.pb.cc	/^const int SolverProto::kSolverTypeFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kSolverTypeFieldNumber	caffe.pb.h	/^  static const int kSolverTypeFieldNumber = 57;$/;"	m	class:caffe::SolverProto
kSourceFieldNumber	caffe.pb.cc	/^const int LoaderProto::kSourceFieldNumber;$/;"	m	class:caffe::LoaderProto	file:
kSourceFieldNumber	caffe.pb.h	/^  static const int kSourceFieldNumber = 1;$/;"	m	class:caffe::LoaderProto
kSparseFieldNumber	caffe.pb.cc	/^const int FillerParameter::kSparseFieldNumber;$/;"	m	class:caffe::FillerParameter	file:
kSparseFieldNumber	caffe.pb.h	/^  static const int kSparseFieldNumber = 7;$/;"	m	class:caffe::FillerParameter
kSplitProtoFieldNumber	caffe.pb.cc	/^const int LayerProto::kSplitProtoFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kSplitProtoFieldNumber	caffe.pb.h	/^  static const int kSplitProtoFieldNumber = 131;$/;"	m	class:caffe::LayerProto
kStageFieldNumber	caffe.pb.cc	/^const int NetState::kStageFieldNumber;$/;"	m	class:caffe::NetState	file:
kStageFieldNumber	caffe.pb.h	/^  static const int kStageFieldNumber = 3;$/;"	m	class:caffe::NetState
kStateFieldNumber	caffe.pb.cc	/^const int NetParameter::kStateFieldNumber;$/;"	m	class:caffe::NetParameter	file:
kStateFieldNumber	caffe.pb.h	/^  static const int kStateFieldNumber = 6;$/;"	m	class:caffe::NetParameter
kStdFieldNumber	caffe.pb.cc	/^const int FillerParameter::kStdFieldNumber;$/;"	m	class:caffe::FillerParameter	file:
kStdFieldNumber	caffe.pb.h	/^  static const int kStdFieldNumber = 6;$/;"	m	class:caffe::FillerParameter
kStepsizeFieldNumber	caffe.pb.cc	/^const int SolverProto::kStepsizeFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kStepsizeFieldNumber	caffe.pb.h	/^  static const int kStepsizeFieldNumber = 44;$/;"	m	class:caffe::SolverProto
kStepvalueFieldNumber	caffe.pb.cc	/^const int SolverProto::kStepvalueFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kStepvalueFieldNumber	caffe.pb.h	/^  static const int kStepvalueFieldNumber = 45;$/;"	m	class:caffe::SolverProto
kStopFieldNumber	caffe.pb.cc	/^const int StoreProto::kStopFieldNumber;$/;"	m	class:caffe::StoreProto	file:
kStopFieldNumber	caffe.pb.h	/^  static const int kStopFieldNumber = 122;$/;"	m	class:caffe::StoreProto
kStoreLayerNamesFieldNumber	caffe.pb.cc	/^const int StoreProto::kStoreLayerNamesFieldNumber;$/;"	m	class:caffe::StoreProto	file:
kStoreLayerNamesFieldNumber	caffe.pb.h	/^  static const int kStoreLayerNamesFieldNumber = 124;$/;"	m	class:caffe::StoreProto
kStoreLayerShapesFieldNumber	caffe.pb.cc	/^const int StoreProto::kStoreLayerShapesFieldNumber;$/;"	m	class:caffe::StoreProto	file:
kStoreLayerShapesFieldNumber	caffe.pb.h	/^  static const int kStoreLayerShapesFieldNumber = 125;$/;"	m	class:caffe::StoreProto
kStoreProtoFieldNumber	caffe.pb.cc	/^const int LayerProto::kStoreProtoFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kStoreProtoFieldNumber	caffe.pb.h	/^  static const int kStoreProtoFieldNumber = 139;$/;"	m	class:caffe::LayerProto
kStrategyFieldNumber	caffe.pb.cc	/^const int SolverProto::kStrategyFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kStrategyFieldNumber	caffe.pb.h	/^  static const int kStrategyFieldNumber = 4;$/;"	m	class:caffe::SolverProto
kStrideFieldNumber	caffe.pb.cc	/^const int ConvolutionProto::kStrideFieldNumber;$/;"	m	class:caffe::ConvolutionProto	file:
kStrideFieldNumber	caffe.pb.cc	/^const int PoolingProto::kStrideFieldNumber;$/;"	m	class:caffe::PoolingProto	file:
kStrideFieldNumber	caffe.pb.h	/^  static const int kStrideFieldNumber = 3;$/;"	m	class:caffe::PoolingProto
kStrideFieldNumber	caffe.pb.h	/^  static const int kStrideFieldNumber = 6;$/;"	m	class:caffe::ConvolutionProto
kStrideHFieldNumber	caffe.pb.cc	/^const int ConvolutionProto::kStrideHFieldNumber;$/;"	m	class:caffe::ConvolutionProto	file:
kStrideHFieldNumber	caffe.pb.cc	/^const int PoolingProto::kStrideHFieldNumber;$/;"	m	class:caffe::PoolingProto	file:
kStrideHFieldNumber	caffe.pb.h	/^  static const int kStrideHFieldNumber = 13;$/;"	m	class:caffe::ConvolutionProto
kStrideHFieldNumber	caffe.pb.h	/^  static const int kStrideHFieldNumber = 7;$/;"	m	class:caffe::PoolingProto
kStrideWFieldNumber	caffe.pb.cc	/^const int ConvolutionProto::kStrideWFieldNumber;$/;"	m	class:caffe::ConvolutionProto	file:
kStrideWFieldNumber	caffe.pb.cc	/^const int PoolingProto::kStrideWFieldNumber;$/;"	m	class:caffe::PoolingProto	file:
kStrideWFieldNumber	caffe.pb.h	/^  static const int kStrideWFieldNumber = 14;$/;"	m	class:caffe::ConvolutionProto
kStrideWFieldNumber	caffe.pb.h	/^  static const int kStrideWFieldNumber = 8;$/;"	m	class:caffe::PoolingProto
kStringDataFieldNumber	caffe.pb.cc	/^const int BlobProto::kStringDataFieldNumber;$/;"	m	class:caffe::BlobProto	file:
kStringDataFieldNumber	caffe.pb.h	/^  static const int kStringDataFieldNumber = 6;$/;"	m	class:caffe::BlobProto
kTestComputeLossFieldNumber	caffe.pb.cc	/^const int SolverProto::kTestComputeLossFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kTestComputeLossFieldNumber	caffe.pb.h	/^  static const int kTestComputeLossFieldNumber = 30;$/;"	m	class:caffe::SolverProto
kTestInitializationFieldNumber	caffe.pb.cc	/^const int SolverProto::kTestInitializationFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kTestInitializationFieldNumber	caffe.pb.h	/^  static const int kTestInitializationFieldNumber = 32;$/;"	m	class:caffe::SolverProto
kTestIntervalFieldNumber	caffe.pb.cc	/^const int SolverProto::kTestIntervalFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kTestIntervalFieldNumber	caffe.pb.h	/^  static const int kTestIntervalFieldNumber = 29;$/;"	m	class:caffe::SolverProto
kTestIterFieldNumber	caffe.pb.cc	/^const int SolverProto::kTestIterFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kTestIterFieldNumber	caffe.pb.h	/^  static const int kTestIterFieldNumber = 28;$/;"	m	class:caffe::SolverProto
kTestNetFieldNumber	caffe.pb.cc	/^const int SolverProto::kTestNetFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kTestNetFieldNumber	caffe.pb.h	/^  static const int kTestNetFieldNumber = 2;$/;"	m	class:caffe::SolverProto
kTestStateFieldNumber	caffe.pb.cc	/^const int SolverProto::kTestStateFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kTestStateFieldNumber	caffe.pb.h	/^  static const int kTestStateFieldNumber = 27;$/;"	m	class:caffe::SolverProto
kTrainNetFieldNumber	caffe.pb.cc	/^const int SolverProto::kTrainNetFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kTrainNetFieldNumber	caffe.pb.h	/^  static const int kTrainNetFieldNumber = 1;$/;"	m	class:caffe::SolverProto
kTrainStateFieldNumber	caffe.pb.cc	/^const int SolverProto::kTrainStateFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kTrainStateFieldNumber	caffe.pb.h	/^  static const int kTrainStateFieldNumber = 26;$/;"	m	class:caffe::SolverProto
kTypeFieldNumber	caffe.pb.cc	/^const int FillerParameter::kTypeFieldNumber;$/;"	m	class:caffe::FillerParameter	file:
kTypeFieldNumber	caffe.pb.cc	/^const int LayerProto::kTypeFieldNumber;$/;"	m	class:caffe::LayerProto	file:
kTypeFieldNumber	caffe.pb.h	/^  static const int kTypeFieldNumber = 1;$/;"	m	class:caffe::FillerParameter
kTypeFieldNumber	caffe.pb.h	/^  static const int kTypeFieldNumber = 2;$/;"	m	class:caffe::LayerProto
kUnknownParallel	caffe.pb.h	/^  kUnknownParallel = 0,$/;"	e	enum:caffe::ParallelPolicy
kUseGlobalStatsFieldNumber	caffe.pb.cc	/^const int BatchNormProto::kUseGlobalStatsFieldNumber;$/;"	m	class:caffe::BatchNormProto	file:
kUseGlobalStatsFieldNumber	caffe.pb.h	/^  static const int kUseGlobalStatsFieldNumber = 1;$/;"	m	class:caffe::BatchNormProto
kValueFieldNumber	caffe.pb.cc	/^const int FillerParameter::kValueFieldNumber;$/;"	m	class:caffe::FillerParameter	file:
kValueFieldNumber	caffe.pb.h	/^  static const int kValueFieldNumber = 2;$/;"	m	class:caffe::FillerParameter
kWeightDecayFieldNumber	caffe.pb.cc	/^const int SolverProto::kWeightDecayFieldNumber;$/;"	m	class:caffe::SolverProto	file:
kWeightDecayFieldNumber	caffe.pb.h	/^  static const int kWeightDecayFieldNumber = 42;$/;"	m	class:caffe::SolverProto
kWeightFieldNumber	caffe.pb.cc	/^const int ModelUpdateProto::kWeightFieldNumber;$/;"	m	class:caffe::ModelUpdateProto	file:
kWeightFieldNumber	caffe.pb.cc	/^const int NullUpdateProto::kWeightFieldNumber;$/;"	m	class:caffe::NullUpdateProto	file:
kWeightFieldNumber	caffe.pb.h	/^  static const int kWeightFieldNumber = 1;$/;"	m	class:caffe::NullUpdateProto
kWeightFieldNumber	caffe.pb.h	/^  static const int kWeightFieldNumber = 3;$/;"	m	class:caffe::ModelUpdateProto
kWeightFillerFieldNumber	caffe.pb.cc	/^const int ConvolutionProto::kWeightFillerFieldNumber;$/;"	m	class:caffe::ConvolutionProto	file:
kWeightFillerFieldNumber	caffe.pb.cc	/^const int InnerProductProto::kWeightFillerFieldNumber;$/;"	m	class:caffe::InnerProductProto	file:
kWeightFillerFieldNumber	caffe.pb.h	/^  static const int kWeightFillerFieldNumber = 3;$/;"	m	class:caffe::InnerProductProto
kWeightFillerFieldNumber	caffe.pb.h	/^  static const int kWeightFillerFieldNumber = 7;$/;"	m	class:caffe::ConvolutionProto
kWidthFieldNumber	caffe.pb.cc	/^const int LoaderProto::kWidthFieldNumber;$/;"	m	class:caffe::LoaderProto	file:
kWidthFieldNumber	caffe.pb.h	/^  static const int kWidthFieldNumber = 124;$/;"	m	class:caffe::LoaderProto
k_	caffe.pb.h	/^  float k_;$/;"	m	class:caffe::LRNProto
kernel_h	caffe.pb.cc	/^::google::protobuf::uint32 ConvolutionProto::kernel_h() const {$/;"	f	class:caffe::ConvolutionProto
kernel_h	caffe.pb.cc	/^::google::protobuf::uint32 PoolingProto::kernel_h() const {$/;"	f	class:caffe::PoolingProto
kernel_h	caffe.pb.h	/^inline ::google::protobuf::uint32 ConvolutionProto::kernel_h() const {$/;"	f	class:caffe::ConvolutionProto
kernel_h	caffe.pb.h	/^inline ::google::protobuf::uint32 PoolingProto::kernel_h() const {$/;"	f	class:caffe::PoolingProto
kernel_h_	caffe.pb.h	/^  ::google::protobuf::uint32 kernel_h_;$/;"	m	class:caffe::ConvolutionProto
kernel_h_	caffe.pb.h	/^  ::google::protobuf::uint32 kernel_h_;$/;"	m	class:caffe::PoolingProto
kernel_size	caffe.pb.cc	/^::google::protobuf::uint32 ConvolutionProto::kernel_size() const {$/;"	f	class:caffe::ConvolutionProto
kernel_size	caffe.pb.cc	/^::google::protobuf::uint32 PoolingProto::kernel_size() const {$/;"	f	class:caffe::PoolingProto
kernel_size	caffe.pb.h	/^inline ::google::protobuf::uint32 ConvolutionProto::kernel_size() const {$/;"	f	class:caffe::ConvolutionProto
kernel_size	caffe.pb.h	/^inline ::google::protobuf::uint32 PoolingProto::kernel_size() const {$/;"	f	class:caffe::PoolingProto
kernel_size_	caffe.pb.h	/^  ::google::protobuf::uint32 kernel_size_;$/;"	m	class:caffe::ConvolutionProto
kernel_size_	caffe.pb.h	/^  ::google::protobuf::uint32 kernel_size_;$/;"	m	class:caffe::PoolingProto
kernel_w	caffe.pb.cc	/^::google::protobuf::uint32 ConvolutionProto::kernel_w() const {$/;"	f	class:caffe::ConvolutionProto
kernel_w	caffe.pb.cc	/^::google::protobuf::uint32 PoolingProto::kernel_w() const {$/;"	f	class:caffe::PoolingProto
kernel_w	caffe.pb.h	/^inline ::google::protobuf::uint32 ConvolutionProto::kernel_w() const {$/;"	f	class:caffe::ConvolutionProto
kernel_w	caffe.pb.h	/^inline ::google::protobuf::uint32 PoolingProto::kernel_w() const {$/;"	f	class:caffe::PoolingProto
kernel_w_	caffe.pb.h	/^  ::google::protobuf::uint32 kernel_w_;$/;"	m	class:caffe::ConvolutionProto
kernel_w_	caffe.pb.h	/^  ::google::protobuf::uint32 kernel_w_;$/;"	m	class:caffe::PoolingProto
label	caffe.pb.cc	/^const ::std::string& LoaderProto::label() const {$/;"	f	class:caffe::LoaderProto
label	caffe.pb.cc	/^const ::std::string& MultinomialLogisticLossProto::label() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
label	caffe.pb.h	/^inline const ::std::string& LoaderProto::label() const {$/;"	f	class:caffe::LoaderProto
label	caffe.pb.h	/^inline const ::std::string& MultinomialLogisticLossProto::label() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
label_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr label_;$/;"	m	class:caffe::LoaderProto
label_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr label_;$/;"	m	class:caffe::MultinomialLogisticLossProto
layer	caffe.pb.cc	/^NetParameter::layer() const {$/;"	f	class:caffe::NetParameter
layer	caffe.pb.cc	/^const ::caffe::LayerProto& NetParameter::layer(int index) const {$/;"	f	class:caffe::NetParameter
layer	caffe.pb.h	/^NetParameter::layer() const {$/;"	f	class:caffe::NetParameter
layer	caffe.pb.h	/^inline const ::caffe::LayerProto& NetParameter::layer(int index) const {$/;"	f	class:caffe::NetParameter
layer_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::caffe::LayerProto > layer_;$/;"	m	class:caffe::NetParameter
layer_seek_pos	caffe.pb.cc	/^::google::protobuf::int64 StoreProto::layer_seek_pos(int index) const {$/;"	f	class:caffe::StoreProto
layer_seek_pos	caffe.pb.cc	/^StoreProto::layer_seek_pos() const {$/;"	f	class:caffe::StoreProto
layer_seek_pos	caffe.pb.h	/^StoreProto::layer_seek_pos() const {$/;"	f	class:caffe::StoreProto
layer_seek_pos	caffe.pb.h	/^inline ::google::protobuf::int64 StoreProto::layer_seek_pos(int index) const {$/;"	f	class:caffe::StoreProto
layer_seek_pos_	caffe.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > layer_seek_pos_;$/;"	m	class:caffe::StoreProto
layer_seek_pos_size	caffe.pb.cc	/^int StoreProto::layer_seek_pos_size() const {$/;"	f	class:caffe::StoreProto
layer_seek_pos_size	caffe.pb.h	/^inline int StoreProto::layer_seek_pos_size() const {$/;"	f	class:caffe::StoreProto
layer_set	caffe.pb.cc	/^const ::caffe::LayerSet& PlacementGroup::layer_set() const {$/;"	f	class:caffe::PlacementGroup
layer_set	caffe.pb.h	/^inline const ::caffe::LayerSet& PlacementGroup::layer_set() const {$/;"	f	class:caffe::PlacementGroup
layer_set_	caffe.pb.h	/^  ::caffe::LayerSet* layer_set_;$/;"	m	class:caffe::PlacementGroup
layer_size	caffe.pb.cc	/^int NetParameter::layer_size() const {$/;"	f	class:caffe::NetParameter
layer_size	caffe.pb.h	/^inline int NetParameter::layer_size() const {$/;"	f	class:caffe::NetParameter
learned_net	caffe.pb.cc	/^const ::std::string& SolverState::learned_net() const {$/;"	f	class:caffe::SolverState
learned_net	caffe.pb.h	/^inline const ::std::string& SolverState::learned_net() const {$/;"	f	class:caffe::SolverState
learned_net_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr learned_net_;$/;"	m	class:caffe::SolverState
level	caffe.pb.cc	/^::google::protobuf::int32 NetState::level() const {$/;"	f	class:caffe::NetState
level	caffe.pb.h	/^inline ::google::protobuf::int32 NetState::level() const {$/;"	f	class:caffe::NetState
level_	caffe.pb.h	/^  ::google::protobuf::int32 level_;$/;"	m	class:caffe::NetState
load_layer_names	caffe.pb.cc	/^LoadPartialModelProto::load_layer_names() const {$/;"	f	class:caffe::LoadPartialModelProto
load_layer_names	caffe.pb.cc	/^const ::std::string& LoadPartialModelProto::load_layer_names(int index) const {$/;"	f	class:caffe::LoadPartialModelProto
load_layer_names	caffe.pb.h	/^LoadPartialModelProto::load_layer_names() const {$/;"	f	class:caffe::LoadPartialModelProto
load_layer_names	caffe.pb.h	/^inline const ::std::string& LoadPartialModelProto::load_layer_names(int index) const {$/;"	f	class:caffe::LoadPartialModelProto
load_layer_names_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> load_layer_names_;$/;"	m	class:caffe::LoadPartialModelProto
load_layer_names_size	caffe.pb.cc	/^int LoadPartialModelProto::load_layer_names_size() const {$/;"	f	class:caffe::LoadPartialModelProto
load_layer_names_size	caffe.pb.h	/^inline int LoadPartialModelProto::load_layer_names_size() const {$/;"	f	class:caffe::LoadPartialModelProto
load_layer_shapes	caffe.pb.cc	/^::google::protobuf::int64 LoadPartialModelProto::load_layer_shapes(int index) const {$/;"	f	class:caffe::LoadPartialModelProto
load_layer_shapes	caffe.pb.cc	/^LoadPartialModelProto::load_layer_shapes() const {$/;"	f	class:caffe::LoadPartialModelProto
load_layer_shapes	caffe.pb.h	/^LoadPartialModelProto::load_layer_shapes() const {$/;"	f	class:caffe::LoadPartialModelProto
load_layer_shapes	caffe.pb.h	/^inline ::google::protobuf::int64 LoadPartialModelProto::load_layer_shapes(int index) const {$/;"	f	class:caffe::LoadPartialModelProto
load_layer_shapes_	caffe.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > load_layer_shapes_;$/;"	m	class:caffe::LoadPartialModelProto
load_layer_shapes_size	caffe.pb.cc	/^int LoadPartialModelProto::load_layer_shapes_size() const {$/;"	f	class:caffe::LoadPartialModelProto
load_layer_shapes_size	caffe.pb.h	/^inline int LoadPartialModelProto::load_layer_shapes_size() const {$/;"	f	class:caffe::LoadPartialModelProto
loader_proto	caffe.pb.cc	/^const ::caffe::LoaderProto& LayerProto::loader_proto() const {$/;"	f	class:caffe::LayerProto
loader_proto	caffe.pb.h	/^inline const ::caffe::LoaderProto& LayerProto::loader_proto() const {$/;"	f	class:caffe::LayerProto
loader_proto_	caffe.pb.h	/^  ::caffe::LoaderProto* loader_proto_;$/;"	m	class:caffe::LayerProto
loadpartialmodel_proto	caffe.pb.cc	/^const ::caffe::LoadPartialModelProto& LayerProto::loadpartialmodel_proto() const {$/;"	f	class:caffe::LayerProto
loadpartialmodel_proto	caffe.pb.h	/^inline const ::caffe::LoadPartialModelProto& LayerProto::loadpartialmodel_proto() const {$/;"	f	class:caffe::LayerProto
loadpartialmodel_proto_	caffe.pb.h	/^  ::caffe::LoadPartialModelProto* loadpartialmodel_proto_;$/;"	m	class:caffe::LayerProto
local_size	caffe.pb.cc	/^::google::protobuf::uint32 LRNProto::local_size() const {$/;"	f	class:caffe::LRNProto
local_size	caffe.pb.h	/^inline ::google::protobuf::uint32 LRNProto::local_size() const {$/;"	f	class:caffe::LRNProto
local_size_	caffe.pb.h	/^  ::google::protobuf::uint32 local_size_;$/;"	m	class:caffe::LRNProto
loss	caffe.pb.cc	/^const ::std::string& MultinomialLogisticLossProto::loss() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
loss	caffe.pb.h	/^inline const ::std::string& MultinomialLogisticLossProto::loss() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
loss_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr loss_;$/;"	m	class:caffe::MultinomialLogisticLossProto
lr_mult	caffe.pb.cc	/^float ParamSpec::lr_mult() const {$/;"	f	class:caffe::ParamSpec
lr_mult	caffe.pb.h	/^inline float ParamSpec::lr_mult() const {$/;"	f	class:caffe::ParamSpec
lr_mult_	caffe.pb.h	/^  float lr_mult_;$/;"	m	class:caffe::ParamSpec
lr_policy	caffe.pb.cc	/^const ::std::string& SolverProto::lr_policy() const {$/;"	f	class:caffe::SolverProto
lr_policy	caffe.pb.h	/^inline const ::std::string& SolverProto::lr_policy() const {$/;"	f	class:caffe::SolverProto
lr_policy_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr lr_policy_;$/;"	m	class:caffe::SolverProto
lrn_proto	caffe.pb.cc	/^const ::caffe::LRNProto& LayerProto::lrn_proto() const {$/;"	f	class:caffe::LayerProto
lrn_proto	caffe.pb.h	/^inline const ::caffe::LRNProto& LayerProto::lrn_proto() const {$/;"	f	class:caffe::LayerProto
lrn_proto_	caffe.pb.h	/^  ::caffe::LRNProto* lrn_proto_;$/;"	m	class:caffe::LayerProto
machine	caffe.pb.cc	/^Resource::machine() const {$/;"	f	class:caffe::Resource
machine	caffe.pb.cc	/^const ::caffe::Machine& Resource::machine(int index) const {$/;"	f	class:caffe::Resource
machine	caffe.pb.h	/^Resource::machine() const {$/;"	f	class:caffe::Resource
machine	caffe.pb.h	/^inline const ::caffe::Machine& Resource::machine(int index) const {$/;"	f	class:caffe::Resource
machine_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::caffe::Machine > machine_;$/;"	m	class:caffe::Resource
machine_group	caffe.pb.cc	/^const ::caffe::MachineGroup& PlacementGroup::machine_group() const {$/;"	f	class:caffe::PlacementGroup
machine_group	caffe.pb.h	/^inline const ::caffe::MachineGroup& PlacementGroup::machine_group() const {$/;"	f	class:caffe::PlacementGroup
machine_group_	caffe.pb.h	/^  ::caffe::MachineGroup* machine_group_;$/;"	m	class:caffe::PlacementGroup
machine_id	caffe.pb.cc	/^::google::protobuf::int32 SolverProto::machine_id() const {$/;"	f	class:caffe::SolverProto
machine_id	caffe.pb.h	/^inline ::google::protobuf::int32 SolverProto::machine_id() const {$/;"	f	class:caffe::SolverProto
machine_id_	caffe.pb.h	/^  ::google::protobuf::int32 machine_id_;$/;"	m	class:caffe::SolverProto
machine_size	caffe.pb.cc	/^int Resource::machine_size() const {$/;"	f	class:caffe::Resource
machine_size	caffe.pb.h	/^inline int Resource::machine_size() const {$/;"	f	class:caffe::Resource
main	test.cc	/^int main(int argc, char* argv[]) {$/;"	f
main	test1.cc	/^int main() {$/;"	f
max	caffe.pb.cc	/^float FillerParameter::max() const {$/;"	f	class:caffe::FillerParameter
max	caffe.pb.h	/^inline float FillerParameter::max() const {$/;"	f	class:caffe::FillerParameter
max_	caffe.pb.h	/^  float max_;$/;"	m	class:caffe::FillerParameter
max_iter	caffe.pb.cc	/^::google::protobuf::int32 SolverProto::max_iter() const {$/;"	f	class:caffe::SolverProto
max_iter	caffe.pb.h	/^inline ::google::protobuf::int32 SolverProto::max_iter() const {$/;"	f	class:caffe::SolverProto
max_iter_	caffe.pb.h	/^  ::google::protobuf::int32 max_iter_;$/;"	m	class:caffe::SolverProto
mean	caffe.pb.cc	/^float FillerParameter::mean() const {$/;"	f	class:caffe::FillerParameter
mean	caffe.pb.h	/^inline float FillerParameter::mean() const {$/;"	f	class:caffe::FillerParameter
mean_	caffe.pb.h	/^  float mean_;$/;"	m	class:caffe::FillerParameter
min	caffe.pb.cc	/^float FillerParameter::min() const {$/;"	f	class:caffe::FillerParameter
min	caffe.pb.h	/^inline float FillerParameter::min() const {$/;"	f	class:caffe::FillerParameter
min_	caffe.pb.h	/^  float min_;$/;"	m	class:caffe::FillerParameter
modelupdate_proto	caffe.pb.cc	/^const ::caffe::ModelUpdateProto& LayerProto::modelupdate_proto() const {$/;"	f	class:caffe::LayerProto
modelupdate_proto	caffe.pb.h	/^inline const ::caffe::ModelUpdateProto& LayerProto::modelupdate_proto() const {$/;"	f	class:caffe::LayerProto
modelupdate_proto_	caffe.pb.h	/^  ::caffe::ModelUpdateProto* modelupdate_proto_;$/;"	m	class:caffe::LayerProto
momentum	caffe.pb.cc	/^float SolverProto::momentum() const {$/;"	f	class:caffe::SolverProto
momentum	caffe.pb.h	/^inline float SolverProto::momentum() const {$/;"	f	class:caffe::SolverProto
momentum_	caffe.pb.h	/^  float momentum_;$/;"	m	class:caffe::SolverProto
moving_average_fraction	caffe.pb.cc	/^float BatchNormProto::moving_average_fraction() const {$/;"	f	class:caffe::BatchNormProto
moving_average_fraction	caffe.pb.h	/^inline float BatchNormProto::moving_average_fraction() const {$/;"	f	class:caffe::BatchNormProto
moving_average_fraction_	caffe.pb.h	/^  float moving_average_fraction_;$/;"	m	class:caffe::BatchNormProto
multinomiallogisticloss_proto	caffe.pb.cc	/^const ::caffe::MultinomialLogisticLossProto& LayerProto::multinomiallogisticloss_proto() const {$/;"	f	class:caffe::LayerProto
multinomiallogisticloss_proto	caffe.pb.h	/^inline const ::caffe::MultinomialLogisticLossProto& LayerProto::multinomiallogisticloss_proto() const {$/;"	f	class:caffe::LayerProto
multinomiallogisticloss_proto_	caffe.pb.h	/^  ::caffe::MultinomialLogisticLossProto* multinomiallogisticloss_proto_;$/;"	m	class:caffe::LayerProto
mutable_batchnorm_proto	caffe.pb.cc	/^::caffe::BatchNormProto* LayerProto::mutable_batchnorm_proto() {$/;"	f	class:caffe::LayerProto
mutable_batchnorm_proto	caffe.pb.h	/^inline ::caffe::BatchNormProto* LayerProto::mutable_batchnorm_proto() {$/;"	f	class:caffe::LayerProto
mutable_bias_filler	caffe.pb.cc	/^::caffe::FillerParameter* ConvolutionProto::mutable_bias_filler() {$/;"	f	class:caffe::ConvolutionProto
mutable_bias_filler	caffe.pb.cc	/^::caffe::FillerParameter* InnerProductProto::mutable_bias_filler() {$/;"	f	class:caffe::InnerProductProto
mutable_bias_filler	caffe.pb.h	/^inline ::caffe::FillerParameter* ConvolutionProto::mutable_bias_filler() {$/;"	f	class:caffe::ConvolutionProto
mutable_bias_filler	caffe.pb.h	/^inline ::caffe::FillerParameter* InnerProductProto::mutable_bias_filler() {$/;"	f	class:caffe::InnerProductProto
mutable_byte_data	caffe.pb.cc	/^::std::string* BlobProto::mutable_byte_data() {$/;"	f	class:caffe::BlobProto
mutable_byte_data	caffe.pb.h	/^inline ::std::string* BlobProto::mutable_byte_data() {$/;"	f	class:caffe::BlobProto
mutable_concat_proto	caffe.pb.cc	/^::caffe::ConcatProto* LayerProto::mutable_concat_proto() {$/;"	f	class:caffe::LayerProto
mutable_concat_proto	caffe.pb.h	/^inline ::caffe::ConcatProto* LayerProto::mutable_concat_proto() {$/;"	f	class:caffe::LayerProto
mutable_convolution_proto	caffe.pb.cc	/^::caffe::ConvolutionProto* LayerProto::mutable_convolution_proto() {$/;"	f	class:caffe::LayerProto
mutable_convolution_proto	caffe.pb.h	/^inline ::caffe::ConvolutionProto* LayerProto::mutable_convolution_proto() {$/;"	f	class:caffe::LayerProto
mutable_data	caffe.pb.cc	/^::std::string* LoaderProto::mutable_data() {$/;"	f	class:caffe::LoaderProto
mutable_data	caffe.pb.cc	/^::std::string* MultinomialLogisticLossProto::mutable_data() {$/;"	f	class:caffe::MultinomialLogisticLossProto
mutable_data	caffe.pb.h	/^inline ::std::string* LoaderProto::mutable_data() {$/;"	f	class:caffe::LoaderProto
mutable_data	caffe.pb.h	/^inline ::std::string* MultinomialLogisticLossProto::mutable_data() {$/;"	f	class:caffe::MultinomialLogisticLossProto
mutable_device_group	caffe.pb.cc	/^::caffe::DeviceGroup* PlacementGroup::mutable_device_group() {$/;"	f	class:caffe::PlacementGroup
mutable_device_group	caffe.pb.h	/^inline ::caffe::DeviceGroup* PlacementGroup::mutable_device_group() {$/;"	f	class:caffe::PlacementGroup
mutable_device_id	caffe.pb.cc	/^DeviceSet::mutable_device_id() {$/;"	f	class:caffe::DeviceSet
mutable_device_id	caffe.pb.h	/^DeviceSet::mutable_device_id() {$/;"	f	class:caffe::DeviceSet
mutable_device_set	caffe.pb.cc	/^::caffe::DeviceSet* Machine::mutable_device_set() {$/;"	f	class:caffe::Machine
mutable_device_set	caffe.pb.h	/^inline ::caffe::DeviceSet* Machine::mutable_device_set() {$/;"	f	class:caffe::Machine
mutable_dim	caffe.pb.cc	/^BlobShape::mutable_dim() {$/;"	f	class:caffe::BlobShape
mutable_dim	caffe.pb.h	/^BlobShape::mutable_dim() {$/;"	f	class:caffe::BlobShape
mutable_double_data	caffe.pb.cc	/^BlobProto::mutable_double_data() {$/;"	f	class:caffe::BlobProto
mutable_double_data	caffe.pb.h	/^BlobProto::mutable_double_data() {$/;"	f	class:caffe::BlobProto
mutable_float_data	caffe.pb.cc	/^BlobProto::mutable_float_data() {$/;"	f	class:caffe::BlobProto
mutable_float_data	caffe.pb.h	/^BlobProto::mutable_float_data() {$/;"	f	class:caffe::BlobProto
mutable_gradient	caffe.pb.cc	/^::std::string* ModelUpdateProto::mutable_gradient() {$/;"	f	class:caffe::ModelUpdateProto
mutable_gradient	caffe.pb.h	/^inline ::std::string* ModelUpdateProto::mutable_gradient() {$/;"	f	class:caffe::ModelUpdateProto
mutable_in	caffe.pb.cc	/^::std::string* BoxingProto::mutable_in(int index) {$/;"	f	class:caffe::BoxingProto
mutable_in	caffe.pb.cc	/^::std::string* ConcatProto::mutable_in(int index) {$/;"	f	class:caffe::ConcatProto
mutable_in	caffe.pb.cc	/^::std::string* ConvolutionProto::mutable_in() {$/;"	f	class:caffe::ConvolutionProto
mutable_in	caffe.pb.cc	/^::std::string* CopyProto::mutable_in(int index) {$/;"	f	class:caffe::CopyProto
mutable_in	caffe.pb.cc	/^::std::string* InnerProductProto::mutable_in() {$/;"	f	class:caffe::InnerProductProto
mutable_in	caffe.pb.cc	/^::std::string* LRNProto::mutable_in() {$/;"	f	class:caffe::LRNProto
mutable_in	caffe.pb.cc	/^::std::string* NetProto::mutable_in(int index) {$/;"	f	class:caffe::NetProto
mutable_in	caffe.pb.cc	/^::std::string* PlaceholderProto::mutable_in() {$/;"	f	class:caffe::PlaceholderProto
mutable_in	caffe.pb.cc	/^::std::string* PoolingProto::mutable_in() {$/;"	f	class:caffe::PoolingProto
mutable_in	caffe.pb.cc	/^::std::string* ReLUProto::mutable_in() {$/;"	f	class:caffe::ReLUProto
mutable_in	caffe.pb.cc	/^::std::string* SigmoidProto::mutable_in() {$/;"	f	class:caffe::SigmoidProto
mutable_in	caffe.pb.cc	/^::std::string* SoftmaxProto::mutable_in() {$/;"	f	class:caffe::SoftmaxProto
mutable_in	caffe.pb.cc	/^::std::string* SplitProto::mutable_in() {$/;"	f	class:caffe::SplitProto
mutable_in	caffe.pb.cc	/^::std::string* StoreProto::mutable_in() {$/;"	f	class:caffe::StoreProto
mutable_in	caffe.pb.cc	/^BoxingProto::mutable_in() {$/;"	f	class:caffe::BoxingProto
mutable_in	caffe.pb.cc	/^ConcatProto::mutable_in() {$/;"	f	class:caffe::ConcatProto
mutable_in	caffe.pb.cc	/^CopyProto::mutable_in() {$/;"	f	class:caffe::CopyProto
mutable_in	caffe.pb.cc	/^NetProto::mutable_in() {$/;"	f	class:caffe::NetProto
mutable_in	caffe.pb.h	/^BoxingProto::mutable_in() {$/;"	f	class:caffe::BoxingProto
mutable_in	caffe.pb.h	/^ConcatProto::mutable_in() {$/;"	f	class:caffe::ConcatProto
mutable_in	caffe.pb.h	/^CopyProto::mutable_in() {$/;"	f	class:caffe::CopyProto
mutable_in	caffe.pb.h	/^NetProto::mutable_in() {$/;"	f	class:caffe::NetProto
mutable_in	caffe.pb.h	/^inline ::std::string* BoxingProto::mutable_in(int index) {$/;"	f	class:caffe::BoxingProto
mutable_in	caffe.pb.h	/^inline ::std::string* ConcatProto::mutable_in(int index) {$/;"	f	class:caffe::ConcatProto
mutable_in	caffe.pb.h	/^inline ::std::string* ConvolutionProto::mutable_in() {$/;"	f	class:caffe::ConvolutionProto
mutable_in	caffe.pb.h	/^inline ::std::string* CopyProto::mutable_in(int index) {$/;"	f	class:caffe::CopyProto
mutable_in	caffe.pb.h	/^inline ::std::string* InnerProductProto::mutable_in() {$/;"	f	class:caffe::InnerProductProto
mutable_in	caffe.pb.h	/^inline ::std::string* LRNProto::mutable_in() {$/;"	f	class:caffe::LRNProto
mutable_in	caffe.pb.h	/^inline ::std::string* NetProto::mutable_in(int index) {$/;"	f	class:caffe::NetProto
mutable_in	caffe.pb.h	/^inline ::std::string* PlaceholderProto::mutable_in() {$/;"	f	class:caffe::PlaceholderProto
mutable_in	caffe.pb.h	/^inline ::std::string* PoolingProto::mutable_in() {$/;"	f	class:caffe::PoolingProto
mutable_in	caffe.pb.h	/^inline ::std::string* ReLUProto::mutable_in() {$/;"	f	class:caffe::ReLUProto
mutable_in	caffe.pb.h	/^inline ::std::string* SigmoidProto::mutable_in() {$/;"	f	class:caffe::SigmoidProto
mutable_in	caffe.pb.h	/^inline ::std::string* SoftmaxProto::mutable_in() {$/;"	f	class:caffe::SoftmaxProto
mutable_in	caffe.pb.h	/^inline ::std::string* SplitProto::mutable_in() {$/;"	f	class:caffe::SplitProto
mutable_in	caffe.pb.h	/^inline ::std::string* StoreProto::mutable_in() {$/;"	f	class:caffe::StoreProto
mutable_in_envelope	caffe.pb.cc	/^::std::string* NetProto::mutable_in_envelope() {$/;"	f	class:caffe::NetProto
mutable_in_envelope	caffe.pb.h	/^inline ::std::string* NetProto::mutable_in_envelope() {$/;"	f	class:caffe::NetProto
mutable_innerproduct_proto	caffe.pb.cc	/^::caffe::InnerProductProto* LayerProto::mutable_innerproduct_proto() {$/;"	f	class:caffe::LayerProto
mutable_innerproduct_proto	caffe.pb.h	/^inline ::caffe::InnerProductProto* LayerProto::mutable_innerproduct_proto() {$/;"	f	class:caffe::LayerProto
mutable_input_shape	caffe.pb.cc	/^::caffe::BlobShape* NetParameter::mutable_input_shape(int index) {$/;"	f	class:caffe::NetParameter
mutable_input_shape	caffe.pb.cc	/^NetParameter::mutable_input_shape() {$/;"	f	class:caffe::NetParameter
mutable_input_shape	caffe.pb.h	/^NetParameter::mutable_input_shape() {$/;"	f	class:caffe::NetParameter
mutable_input_shape	caffe.pb.h	/^inline ::caffe::BlobShape* NetParameter::mutable_input_shape(int index) {$/;"	f	class:caffe::NetParameter
mutable_int32_data	caffe.pb.cc	/^BlobProto::mutable_int32_data() {$/;"	f	class:caffe::BlobProto
mutable_int32_data	caffe.pb.h	/^BlobProto::mutable_int32_data() {$/;"	f	class:caffe::BlobProto
mutable_int64_data	caffe.pb.cc	/^BlobProto::mutable_int64_data() {$/;"	f	class:caffe::BlobProto
mutable_int64_data	caffe.pb.h	/^BlobProto::mutable_int64_data() {$/;"	f	class:caffe::BlobProto
mutable_label	caffe.pb.cc	/^::std::string* LoaderProto::mutable_label() {$/;"	f	class:caffe::LoaderProto
mutable_label	caffe.pb.cc	/^::std::string* MultinomialLogisticLossProto::mutable_label() {$/;"	f	class:caffe::MultinomialLogisticLossProto
mutable_label	caffe.pb.h	/^inline ::std::string* LoaderProto::mutable_label() {$/;"	f	class:caffe::LoaderProto
mutable_label	caffe.pb.h	/^inline ::std::string* MultinomialLogisticLossProto::mutable_label() {$/;"	f	class:caffe::MultinomialLogisticLossProto
mutable_layer	caffe.pb.cc	/^::caffe::LayerProto* NetParameter::mutable_layer(int index) {$/;"	f	class:caffe::NetParameter
mutable_layer	caffe.pb.cc	/^NetParameter::mutable_layer() {$/;"	f	class:caffe::NetParameter
mutable_layer	caffe.pb.h	/^NetParameter::mutable_layer() {$/;"	f	class:caffe::NetParameter
mutable_layer	caffe.pb.h	/^inline ::caffe::LayerProto* NetParameter::mutable_layer(int index) {$/;"	f	class:caffe::NetParameter
mutable_layer_seek_pos	caffe.pb.cc	/^StoreProto::mutable_layer_seek_pos() {$/;"	f	class:caffe::StoreProto
mutable_layer_seek_pos	caffe.pb.h	/^StoreProto::mutable_layer_seek_pos() {$/;"	f	class:caffe::StoreProto
mutable_layer_set	caffe.pb.cc	/^::caffe::LayerSet* PlacementGroup::mutable_layer_set() {$/;"	f	class:caffe::PlacementGroup
mutable_layer_set	caffe.pb.h	/^inline ::caffe::LayerSet* PlacementGroup::mutable_layer_set() {$/;"	f	class:caffe::PlacementGroup
mutable_learned_net	caffe.pb.cc	/^::std::string* SolverState::mutable_learned_net() {$/;"	f	class:caffe::SolverState
mutable_learned_net	caffe.pb.h	/^inline ::std::string* SolverState::mutable_learned_net() {$/;"	f	class:caffe::SolverState
mutable_load_layer_names	caffe.pb.cc	/^::std::string* LoadPartialModelProto::mutable_load_layer_names(int index) {$/;"	f	class:caffe::LoadPartialModelProto
mutable_load_layer_names	caffe.pb.cc	/^LoadPartialModelProto::mutable_load_layer_names() {$/;"	f	class:caffe::LoadPartialModelProto
mutable_load_layer_names	caffe.pb.h	/^LoadPartialModelProto::mutable_load_layer_names() {$/;"	f	class:caffe::LoadPartialModelProto
mutable_load_layer_names	caffe.pb.h	/^inline ::std::string* LoadPartialModelProto::mutable_load_layer_names(int index) {$/;"	f	class:caffe::LoadPartialModelProto
mutable_load_layer_shapes	caffe.pb.cc	/^LoadPartialModelProto::mutable_load_layer_shapes() {$/;"	f	class:caffe::LoadPartialModelProto
mutable_load_layer_shapes	caffe.pb.h	/^LoadPartialModelProto::mutable_load_layer_shapes() {$/;"	f	class:caffe::LoadPartialModelProto
mutable_loader_proto	caffe.pb.cc	/^::caffe::LoaderProto* LayerProto::mutable_loader_proto() {$/;"	f	class:caffe::LayerProto
mutable_loader_proto	caffe.pb.h	/^inline ::caffe::LoaderProto* LayerProto::mutable_loader_proto() {$/;"	f	class:caffe::LayerProto
mutable_loadpartialmodel_proto	caffe.pb.cc	/^::caffe::LoadPartialModelProto* LayerProto::mutable_loadpartialmodel_proto() {$/;"	f	class:caffe::LayerProto
mutable_loadpartialmodel_proto	caffe.pb.h	/^inline ::caffe::LoadPartialModelProto* LayerProto::mutable_loadpartialmodel_proto() {$/;"	f	class:caffe::LayerProto
mutable_loss	caffe.pb.cc	/^::std::string* MultinomialLogisticLossProto::mutable_loss() {$/;"	f	class:caffe::MultinomialLogisticLossProto
mutable_loss	caffe.pb.h	/^inline ::std::string* MultinomialLogisticLossProto::mutable_loss() {$/;"	f	class:caffe::MultinomialLogisticLossProto
mutable_lr_policy	caffe.pb.cc	/^::std::string* SolverProto::mutable_lr_policy() {$/;"	f	class:caffe::SolverProto
mutable_lr_policy	caffe.pb.h	/^inline ::std::string* SolverProto::mutable_lr_policy() {$/;"	f	class:caffe::SolverProto
mutable_lrn_proto	caffe.pb.cc	/^::caffe::LRNProto* LayerProto::mutable_lrn_proto() {$/;"	f	class:caffe::LayerProto
mutable_lrn_proto	caffe.pb.h	/^inline ::caffe::LRNProto* LayerProto::mutable_lrn_proto() {$/;"	f	class:caffe::LayerProto
mutable_machine	caffe.pb.cc	/^::caffe::Machine* Resource::mutable_machine(int index) {$/;"	f	class:caffe::Resource
mutable_machine	caffe.pb.cc	/^Resource::mutable_machine() {$/;"	f	class:caffe::Resource
mutable_machine	caffe.pb.h	/^Resource::mutable_machine() {$/;"	f	class:caffe::Resource
mutable_machine	caffe.pb.h	/^inline ::caffe::Machine* Resource::mutable_machine(int index) {$/;"	f	class:caffe::Resource
mutable_machine_group	caffe.pb.cc	/^::caffe::MachineGroup* PlacementGroup::mutable_machine_group() {$/;"	f	class:caffe::PlacementGroup
mutable_machine_group	caffe.pb.h	/^inline ::caffe::MachineGroup* PlacementGroup::mutable_machine_group() {$/;"	f	class:caffe::PlacementGroup
mutable_modelupdate_proto	caffe.pb.cc	/^::caffe::ModelUpdateProto* LayerProto::mutable_modelupdate_proto() {$/;"	f	class:caffe::LayerProto
mutable_modelupdate_proto	caffe.pb.h	/^inline ::caffe::ModelUpdateProto* LayerProto::mutable_modelupdate_proto() {$/;"	f	class:caffe::LayerProto
mutable_multinomiallogisticloss_proto	caffe.pb.cc	/^::caffe::MultinomialLogisticLossProto* LayerProto::mutable_multinomiallogisticloss_proto() {$/;"	f	class:caffe::LayerProto
mutable_multinomiallogisticloss_proto	caffe.pb.h	/^inline ::caffe::MultinomialLogisticLossProto* LayerProto::mutable_multinomiallogisticloss_proto() {$/;"	f	class:caffe::LayerProto
mutable_name	caffe.pb.cc	/^::std::string* BlobProto::mutable_name() {$/;"	f	class:caffe::BlobProto
mutable_name	caffe.pb.cc	/^::std::string* LayerProto::mutable_name() {$/;"	f	class:caffe::LayerProto
mutable_name	caffe.pb.cc	/^::std::string* LayerSet::mutable_name(int index) {$/;"	f	class:caffe::LayerSet
mutable_name	caffe.pb.cc	/^::std::string* Machine::mutable_name() {$/;"	f	class:caffe::Machine
mutable_name	caffe.pb.cc	/^::std::string* NetParameter::mutable_name() {$/;"	f	class:caffe::NetParameter
mutable_name	caffe.pb.cc	/^::std::string* ParamSpec::mutable_name() {$/;"	f	class:caffe::ParamSpec
mutable_name	caffe.pb.cc	/^::std::string* PlacementGroup::mutable_name() {$/;"	f	class:caffe::PlacementGroup
mutable_name	caffe.pb.cc	/^LayerSet::mutable_name() {$/;"	f	class:caffe::LayerSet
mutable_name	caffe.pb.h	/^LayerSet::mutable_name() {$/;"	f	class:caffe::LayerSet
mutable_name	caffe.pb.h	/^inline ::std::string* BlobProto::mutable_name() {$/;"	f	class:caffe::BlobProto
mutable_name	caffe.pb.h	/^inline ::std::string* LayerProto::mutable_name() {$/;"	f	class:caffe::LayerProto
mutable_name	caffe.pb.h	/^inline ::std::string* LayerSet::mutable_name(int index) {$/;"	f	class:caffe::LayerSet
mutable_name	caffe.pb.h	/^inline ::std::string* Machine::mutable_name() {$/;"	f	class:caffe::Machine
mutable_name	caffe.pb.h	/^inline ::std::string* NetParameter::mutable_name() {$/;"	f	class:caffe::NetParameter
mutable_name	caffe.pb.h	/^inline ::std::string* ParamSpec::mutable_name() {$/;"	f	class:caffe::ParamSpec
mutable_name	caffe.pb.h	/^inline ::std::string* PlacementGroup::mutable_name() {$/;"	f	class:caffe::PlacementGroup
mutable_nullupdate_proto	caffe.pb.cc	/^::caffe::NullUpdateProto* LayerProto::mutable_nullupdate_proto() {$/;"	f	class:caffe::LayerProto
mutable_nullupdate_proto	caffe.pb.h	/^inline ::caffe::NullUpdateProto* LayerProto::mutable_nullupdate_proto() {$/;"	f	class:caffe::LayerProto
mutable_old_weight	caffe.pb.cc	/^::std::string* ModelUpdateProto::mutable_old_weight() {$/;"	f	class:caffe::ModelUpdateProto
mutable_old_weight	caffe.pb.h	/^inline ::std::string* ModelUpdateProto::mutable_old_weight() {$/;"	f	class:caffe::ModelUpdateProto
mutable_out	caffe.pb.cc	/^::std::string* BoxingProto::mutable_out(int index) {$/;"	f	class:caffe::BoxingProto
mutable_out	caffe.pb.cc	/^::std::string* ConcatProto::mutable_out() {$/;"	f	class:caffe::ConcatProto
mutable_out	caffe.pb.cc	/^::std::string* ConvolutionProto::mutable_out() {$/;"	f	class:caffe::ConvolutionProto
mutable_out	caffe.pb.cc	/^::std::string* CopyProto::mutable_out(int index) {$/;"	f	class:caffe::CopyProto
mutable_out	caffe.pb.cc	/^::std::string* InnerProductProto::mutable_out() {$/;"	f	class:caffe::InnerProductProto
mutable_out	caffe.pb.cc	/^::std::string* LRNProto::mutable_out() {$/;"	f	class:caffe::LRNProto
mutable_out	caffe.pb.cc	/^::std::string* LoadPartialModelProto::mutable_out() {$/;"	f	class:caffe::LoadPartialModelProto
mutable_out	caffe.pb.cc	/^::std::string* NetProto::mutable_out(int index) {$/;"	f	class:caffe::NetProto
mutable_out	caffe.pb.cc	/^::std::string* PlaceholderProto::mutable_out() {$/;"	f	class:caffe::PlaceholderProto
mutable_out	caffe.pb.cc	/^::std::string* PoolingProto::mutable_out() {$/;"	f	class:caffe::PoolingProto
mutable_out	caffe.pb.cc	/^::std::string* ReLUProto::mutable_out() {$/;"	f	class:caffe::ReLUProto
mutable_out	caffe.pb.cc	/^::std::string* SigmoidProto::mutable_out() {$/;"	f	class:caffe::SigmoidProto
mutable_out	caffe.pb.cc	/^::std::string* SoftmaxProto::mutable_out() {$/;"	f	class:caffe::SoftmaxProto
mutable_out	caffe.pb.cc	/^::std::string* SplitProto::mutable_out(int index) {$/;"	f	class:caffe::SplitProto
mutable_out	caffe.pb.cc	/^::std::string* StoreProto::mutable_out() {$/;"	f	class:caffe::StoreProto
mutable_out	caffe.pb.cc	/^BoxingProto::mutable_out() {$/;"	f	class:caffe::BoxingProto
mutable_out	caffe.pb.cc	/^CopyProto::mutable_out() {$/;"	f	class:caffe::CopyProto
mutable_out	caffe.pb.cc	/^NetProto::mutable_out() {$/;"	f	class:caffe::NetProto
mutable_out	caffe.pb.cc	/^SplitProto::mutable_out() {$/;"	f	class:caffe::SplitProto
mutable_out	caffe.pb.h	/^BoxingProto::mutable_out() {$/;"	f	class:caffe::BoxingProto
mutable_out	caffe.pb.h	/^CopyProto::mutable_out() {$/;"	f	class:caffe::CopyProto
mutable_out	caffe.pb.h	/^NetProto::mutable_out() {$/;"	f	class:caffe::NetProto
mutable_out	caffe.pb.h	/^SplitProto::mutable_out() {$/;"	f	class:caffe::SplitProto
mutable_out	caffe.pb.h	/^inline ::std::string* BoxingProto::mutable_out(int index) {$/;"	f	class:caffe::BoxingProto
mutable_out	caffe.pb.h	/^inline ::std::string* ConcatProto::mutable_out() {$/;"	f	class:caffe::ConcatProto
mutable_out	caffe.pb.h	/^inline ::std::string* ConvolutionProto::mutable_out() {$/;"	f	class:caffe::ConvolutionProto
mutable_out	caffe.pb.h	/^inline ::std::string* CopyProto::mutable_out(int index) {$/;"	f	class:caffe::CopyProto
mutable_out	caffe.pb.h	/^inline ::std::string* InnerProductProto::mutable_out() {$/;"	f	class:caffe::InnerProductProto
mutable_out	caffe.pb.h	/^inline ::std::string* LRNProto::mutable_out() {$/;"	f	class:caffe::LRNProto
mutable_out	caffe.pb.h	/^inline ::std::string* LoadPartialModelProto::mutable_out() {$/;"	f	class:caffe::LoadPartialModelProto
mutable_out	caffe.pb.h	/^inline ::std::string* NetProto::mutable_out(int index) {$/;"	f	class:caffe::NetProto
mutable_out	caffe.pb.h	/^inline ::std::string* PlaceholderProto::mutable_out() {$/;"	f	class:caffe::PlaceholderProto
mutable_out	caffe.pb.h	/^inline ::std::string* PoolingProto::mutable_out() {$/;"	f	class:caffe::PoolingProto
mutable_out	caffe.pb.h	/^inline ::std::string* ReLUProto::mutable_out() {$/;"	f	class:caffe::ReLUProto
mutable_out	caffe.pb.h	/^inline ::std::string* SigmoidProto::mutable_out() {$/;"	f	class:caffe::SigmoidProto
mutable_out	caffe.pb.h	/^inline ::std::string* SoftmaxProto::mutable_out() {$/;"	f	class:caffe::SoftmaxProto
mutable_out	caffe.pb.h	/^inline ::std::string* SplitProto::mutable_out(int index) {$/;"	f	class:caffe::SplitProto
mutable_out	caffe.pb.h	/^inline ::std::string* StoreProto::mutable_out() {$/;"	f	class:caffe::StoreProto
mutable_out_envelope	caffe.pb.cc	/^::std::string* NetProto::mutable_out_envelope() {$/;"	f	class:caffe::NetProto
mutable_out_envelope	caffe.pb.h	/^inline ::std::string* NetProto::mutable_out_envelope() {$/;"	f	class:caffe::NetProto
mutable_param	caffe.pb.cc	/^::caffe::ParamSpec* ConvolutionProto::mutable_param(int index) {$/;"	f	class:caffe::ConvolutionProto
mutable_param	caffe.pb.cc	/^::caffe::ParamSpec* InnerProductProto::mutable_param(int index) {$/;"	f	class:caffe::InnerProductProto
mutable_param	caffe.pb.cc	/^ConvolutionProto::mutable_param() {$/;"	f	class:caffe::ConvolutionProto
mutable_param	caffe.pb.cc	/^InnerProductProto::mutable_param() {$/;"	f	class:caffe::InnerProductProto
mutable_param	caffe.pb.h	/^ConvolutionProto::mutable_param() {$/;"	f	class:caffe::ConvolutionProto
mutable_param	caffe.pb.h	/^InnerProductProto::mutable_param() {$/;"	f	class:caffe::InnerProductProto
mutable_param	caffe.pb.h	/^inline ::caffe::ParamSpec* ConvolutionProto::mutable_param(int index) {$/;"	f	class:caffe::ConvolutionProto
mutable_param	caffe.pb.h	/^inline ::caffe::ParamSpec* InnerProductProto::mutable_param(int index) {$/;"	f	class:caffe::InnerProductProto
mutable_placeholder_proto	caffe.pb.cc	/^::caffe::PlaceholderProto* LayerProto::mutable_placeholder_proto() {$/;"	f	class:caffe::LayerProto
mutable_placeholder_proto	caffe.pb.h	/^inline ::caffe::PlaceholderProto* LayerProto::mutable_placeholder_proto() {$/;"	f	class:caffe::LayerProto
mutable_placement_group	caffe.pb.cc	/^::caffe::PlacementGroup* Strategy::mutable_placement_group(int index) {$/;"	f	class:caffe::Strategy
mutable_placement_group	caffe.pb.cc	/^Strategy::mutable_placement_group() {$/;"	f	class:caffe::Strategy
mutable_placement_group	caffe.pb.h	/^Strategy::mutable_placement_group() {$/;"	f	class:caffe::Strategy
mutable_placement_group	caffe.pb.h	/^inline ::caffe::PlacementGroup* Strategy::mutable_placement_group(int index) {$/;"	f	class:caffe::Strategy
mutable_pooling_proto	caffe.pb.cc	/^::caffe::PoolingProto* LayerProto::mutable_pooling_proto() {$/;"	f	class:caffe::LayerProto
mutable_pooling_proto	caffe.pb.h	/^inline ::caffe::PoolingProto* LayerProto::mutable_pooling_proto() {$/;"	f	class:caffe::LayerProto
mutable_port	caffe.pb.cc	/^::std::string* Machine::mutable_port() {$/;"	f	class:caffe::Machine
mutable_port	caffe.pb.h	/^inline ::std::string* Machine::mutable_port() {$/;"	f	class:caffe::Machine
mutable_regularization_type	caffe.pb.cc	/^::std::string* SolverProto::mutable_regularization_type() {$/;"	f	class:caffe::SolverProto
mutable_regularization_type	caffe.pb.h	/^inline ::std::string* SolverProto::mutable_regularization_type() {$/;"	f	class:caffe::SolverProto
mutable_relu_proto	caffe.pb.cc	/^::caffe::ReLUProto* LayerProto::mutable_relu_proto() {$/;"	f	class:caffe::LayerProto
mutable_relu_proto	caffe.pb.h	/^inline ::caffe::ReLUProto* LayerProto::mutable_relu_proto() {$/;"	f	class:caffe::LayerProto
mutable_resource	caffe.pb.cc	/^::std::string* SolverProto::mutable_resource() {$/;"	f	class:caffe::SolverProto
mutable_resource	caffe.pb.h	/^inline ::std::string* SolverProto::mutable_resource() {$/;"	f	class:caffe::SolverProto
mutable_sigmoid_proto	caffe.pb.cc	/^::caffe::SigmoidProto* LayerProto::mutable_sigmoid_proto() {$/;"	f	class:caffe::LayerProto
mutable_sigmoid_proto	caffe.pb.h	/^inline ::caffe::SigmoidProto* LayerProto::mutable_sigmoid_proto() {$/;"	f	class:caffe::LayerProto
mutable_snapshot_prefix	caffe.pb.cc	/^::std::string* SolverProto::mutable_snapshot_prefix() {$/;"	f	class:caffe::SolverProto
mutable_snapshot_prefix	caffe.pb.h	/^inline ::std::string* SolverProto::mutable_snapshot_prefix() {$/;"	f	class:caffe::SolverProto
mutable_softmax_proto	caffe.pb.cc	/^::caffe::SoftmaxProto* LayerProto::mutable_softmax_proto() {$/;"	f	class:caffe::LayerProto
mutable_softmax_proto	caffe.pb.h	/^inline ::caffe::SoftmaxProto* LayerProto::mutable_softmax_proto() {$/;"	f	class:caffe::LayerProto
mutable_source	caffe.pb.cc	/^::std::string* LoaderProto::mutable_source() {$/;"	f	class:caffe::LoaderProto
mutable_source	caffe.pb.h	/^inline ::std::string* LoaderProto::mutable_source() {$/;"	f	class:caffe::LoaderProto
mutable_split_proto	caffe.pb.cc	/^::caffe::SplitProto* LayerProto::mutable_split_proto() {$/;"	f	class:caffe::LayerProto
mutable_split_proto	caffe.pb.h	/^inline ::caffe::SplitProto* LayerProto::mutable_split_proto() {$/;"	f	class:caffe::LayerProto
mutable_stage	caffe.pb.cc	/^::std::string* NetState::mutable_stage(int index) {$/;"	f	class:caffe::NetState
mutable_stage	caffe.pb.cc	/^NetState::mutable_stage() {$/;"	f	class:caffe::NetState
mutable_stage	caffe.pb.h	/^NetState::mutable_stage() {$/;"	f	class:caffe::NetState
mutable_stage	caffe.pb.h	/^inline ::std::string* NetState::mutable_stage(int index) {$/;"	f	class:caffe::NetState
mutable_state	caffe.pb.cc	/^::caffe::NetState* NetParameter::mutable_state() {$/;"	f	class:caffe::NetParameter
mutable_state	caffe.pb.h	/^inline ::caffe::NetState* NetParameter::mutable_state() {$/;"	f	class:caffe::NetParameter
mutable_stepvalue	caffe.pb.cc	/^SolverProto::mutable_stepvalue() {$/;"	f	class:caffe::SolverProto
mutable_stepvalue	caffe.pb.h	/^SolverProto::mutable_stepvalue() {$/;"	f	class:caffe::SolverProto
mutable_store_layer_names	caffe.pb.cc	/^::std::string* StoreProto::mutable_store_layer_names(int index) {$/;"	f	class:caffe::StoreProto
mutable_store_layer_names	caffe.pb.cc	/^StoreProto::mutable_store_layer_names() {$/;"	f	class:caffe::StoreProto
mutable_store_layer_names	caffe.pb.h	/^StoreProto::mutable_store_layer_names() {$/;"	f	class:caffe::StoreProto
mutable_store_layer_names	caffe.pb.h	/^inline ::std::string* StoreProto::mutable_store_layer_names(int index) {$/;"	f	class:caffe::StoreProto
mutable_store_layer_shapes	caffe.pb.cc	/^StoreProto::mutable_store_layer_shapes() {$/;"	f	class:caffe::StoreProto
mutable_store_layer_shapes	caffe.pb.h	/^StoreProto::mutable_store_layer_shapes() {$/;"	f	class:caffe::StoreProto
mutable_store_proto	caffe.pb.cc	/^::caffe::StoreProto* LayerProto::mutable_store_proto() {$/;"	f	class:caffe::LayerProto
mutable_store_proto	caffe.pb.h	/^inline ::caffe::StoreProto* LayerProto::mutable_store_proto() {$/;"	f	class:caffe::LayerProto
mutable_strategy	caffe.pb.cc	/^::std::string* SolverProto::mutable_strategy() {$/;"	f	class:caffe::SolverProto
mutable_strategy	caffe.pb.h	/^inline ::std::string* SolverProto::mutable_strategy() {$/;"	f	class:caffe::SolverProto
mutable_string_data	caffe.pb.cc	/^::std::string* BlobProto::mutable_string_data(int index) {$/;"	f	class:caffe::BlobProto
mutable_string_data	caffe.pb.cc	/^BlobProto::mutable_string_data() {$/;"	f	class:caffe::BlobProto
mutable_string_data	caffe.pb.h	/^BlobProto::mutable_string_data() {$/;"	f	class:caffe::BlobProto
mutable_string_data	caffe.pb.h	/^inline ::std::string* BlobProto::mutable_string_data(int index) {$/;"	f	class:caffe::BlobProto
mutable_test_iter	caffe.pb.cc	/^SolverProto::mutable_test_iter() {$/;"	f	class:caffe::SolverProto
mutable_test_iter	caffe.pb.h	/^SolverProto::mutable_test_iter() {$/;"	f	class:caffe::SolverProto
mutable_test_net	caffe.pb.cc	/^::std::string* SolverProto::mutable_test_net(int index) {$/;"	f	class:caffe::SolverProto
mutable_test_net	caffe.pb.cc	/^SolverProto::mutable_test_net() {$/;"	f	class:caffe::SolverProto
mutable_test_net	caffe.pb.h	/^SolverProto::mutable_test_net() {$/;"	f	class:caffe::SolverProto
mutable_test_net	caffe.pb.h	/^inline ::std::string* SolverProto::mutable_test_net(int index) {$/;"	f	class:caffe::SolverProto
mutable_test_state	caffe.pb.cc	/^::caffe::NetState* SolverProto::mutable_test_state(int index) {$/;"	f	class:caffe::SolverProto
mutable_test_state	caffe.pb.cc	/^SolverProto::mutable_test_state() {$/;"	f	class:caffe::SolverProto
mutable_test_state	caffe.pb.h	/^SolverProto::mutable_test_state() {$/;"	f	class:caffe::SolverProto
mutable_test_state	caffe.pb.h	/^inline ::caffe::NetState* SolverProto::mutable_test_state(int index) {$/;"	f	class:caffe::SolverProto
mutable_train_net	caffe.pb.cc	/^::std::string* SolverProto::mutable_train_net() {$/;"	f	class:caffe::SolverProto
mutable_train_net	caffe.pb.h	/^inline ::std::string* SolverProto::mutable_train_net() {$/;"	f	class:caffe::SolverProto
mutable_train_state	caffe.pb.cc	/^::caffe::NetState* SolverProto::mutable_train_state() {$/;"	f	class:caffe::SolverProto
mutable_train_state	caffe.pb.h	/^inline ::caffe::NetState* SolverProto::mutable_train_state() {$/;"	f	class:caffe::SolverProto
mutable_type	caffe.pb.cc	/^::std::string* FillerParameter::mutable_type() {$/;"	f	class:caffe::FillerParameter
mutable_type	caffe.pb.cc	/^::std::string* LayerProto::mutable_type() {$/;"	f	class:caffe::LayerProto
mutable_type	caffe.pb.h	/^inline ::std::string* FillerParameter::mutable_type() {$/;"	f	class:caffe::FillerParameter
mutable_type	caffe.pb.h	/^inline ::std::string* LayerProto::mutable_type() {$/;"	f	class:caffe::LayerProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::BatchNormProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::BlobProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::BlobShape
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::BoxingProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::ConcatProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::ConvolutionProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::CopyProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::DeviceGroup
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::DeviceSet
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::FillerParameter
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::InnerProductProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::LRNProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::LayerProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::LayerSet
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::LoadPartialModelProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::LoaderProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::Machine
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::MachineGroup
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::ModelUpdateProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::MultinomialLogisticLossProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::NetParameter
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::NetProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::NetState
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::NullUpdateProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::ParamSpec
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::PlaceholderProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::PlacementGroup
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::PoolingProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::ReLUProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::Resource
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::SigmoidProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::SoftmaxProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::SolverProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::SolverState
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::SplitProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::StoreProto
mutable_unknown_fields	caffe.pb.h	/^  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {$/;"	f	class:caffe::Strategy
mutable_weight	caffe.pb.cc	/^::std::string* ModelUpdateProto::mutable_weight() {$/;"	f	class:caffe::ModelUpdateProto
mutable_weight	caffe.pb.cc	/^::std::string* NullUpdateProto::mutable_weight() {$/;"	f	class:caffe::NullUpdateProto
mutable_weight	caffe.pb.h	/^inline ::std::string* ModelUpdateProto::mutable_weight() {$/;"	f	class:caffe::ModelUpdateProto
mutable_weight	caffe.pb.h	/^inline ::std::string* NullUpdateProto::mutable_weight() {$/;"	f	class:caffe::NullUpdateProto
mutable_weight_filler	caffe.pb.cc	/^::caffe::FillerParameter* ConvolutionProto::mutable_weight_filler() {$/;"	f	class:caffe::ConvolutionProto
mutable_weight_filler	caffe.pb.cc	/^::caffe::FillerParameter* InnerProductProto::mutable_weight_filler() {$/;"	f	class:caffe::InnerProductProto
mutable_weight_filler	caffe.pb.h	/^inline ::caffe::FillerParameter* ConvolutionProto::mutable_weight_filler() {$/;"	f	class:caffe::ConvolutionProto
mutable_weight_filler	caffe.pb.h	/^inline ::caffe::FillerParameter* InnerProductProto::mutable_weight_filler() {$/;"	f	class:caffe::InnerProductProto
my_set	logic.hpp	/^      >::Result my_set;$/;"	t	namespace:base
my_set2	logic.hpp	/^typedef typename SetKV<IntType<1>, IntType<22>, my_set>::Result my_set2;$/;"	t	namespace:base
my_set3	logic.hpp	/^typedef typename Delete<IntType<1>, my_set2>::Result my_set3;$/;"	t	namespace:base
name	caffe.pb.cc	/^LayerSet::name() const {$/;"	f	class:caffe::LayerSet
name	caffe.pb.cc	/^const ::std::string& BlobProto::name() const {$/;"	f	class:caffe::BlobProto
name	caffe.pb.cc	/^const ::std::string& LayerProto::name() const {$/;"	f	class:caffe::LayerProto
name	caffe.pb.cc	/^const ::std::string& LayerSet::name(int index) const {$/;"	f	class:caffe::LayerSet
name	caffe.pb.cc	/^const ::std::string& Machine::name() const {$/;"	f	class:caffe::Machine
name	caffe.pb.cc	/^const ::std::string& NetParameter::name() const {$/;"	f	class:caffe::NetParameter
name	caffe.pb.cc	/^const ::std::string& ParamSpec::name() const {$/;"	f	class:caffe::ParamSpec
name	caffe.pb.cc	/^const ::std::string& PlacementGroup::name() const {$/;"	f	class:caffe::PlacementGroup
name	caffe.pb.h	/^LayerSet::name() const {$/;"	f	class:caffe::LayerSet
name	caffe.pb.h	/^inline const ::std::string& BlobProto::name() const {$/;"	f	class:caffe::BlobProto
name	caffe.pb.h	/^inline const ::std::string& LayerProto::name() const {$/;"	f	class:caffe::LayerProto
name	caffe.pb.h	/^inline const ::std::string& LayerSet::name(int index) const {$/;"	f	class:caffe::LayerSet
name	caffe.pb.h	/^inline const ::std::string& Machine::name() const {$/;"	f	class:caffe::Machine
name	caffe.pb.h	/^inline const ::std::string& NetParameter::name() const {$/;"	f	class:caffe::NetParameter
name	caffe.pb.h	/^inline const ::std::string& ParamSpec::name() const {$/;"	f	class:caffe::ParamSpec
name	caffe.pb.h	/^inline const ::std::string& PlacementGroup::name() const {$/;"	f	class:caffe::PlacementGroup
name	graph.h	/^  std::string name;$/;"	m	struct:dataflow::NodeInfo
name_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> name_;$/;"	m	class:caffe::LayerSet
name_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr name_;$/;"	m	class:caffe::BlobProto
name_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr name_;$/;"	m	class:caffe::LayerProto
name_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr name_;$/;"	m	class:caffe::Machine
name_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr name_;$/;"	m	class:caffe::NetParameter
name_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr name_;$/;"	m	class:caffe::ParamSpec
name_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr name_;$/;"	m	class:caffe::PlacementGroup
name_size	caffe.pb.cc	/^int LayerSet::name_size() const {$/;"	f	class:caffe::LayerSet
name_size	caffe.pb.h	/^inline int LayerSet::name_size() const {$/;"	f	class:caffe::LayerSet
negative_slope	caffe.pb.cc	/^float ReLUProto::negative_slope() const {$/;"	f	class:caffe::ReLUProto
negative_slope	caffe.pb.h	/^inline float ReLUProto::negative_slope() const {$/;"	f	class:caffe::ReLUProto
negative_slope_	caffe.pb.h	/^  float negative_slope_;$/;"	m	class:caffe::ReLUProto
no	logic.hpp	/^  typedef char no[2];$/;"	t	struct:base::IsDerivedFrom
node_index_	graph.h	/^  std::unordered_map<std::string, int> node_index_;$/;"	m	class:dataflow::Graph
node_pool_	graph.h	/^  static ObjectPool<Node> node_pool_;$/;"	m	class:dataflow::Graph
nodes_	graph.h	/^  std::unordered_map<int, Node*> nodes_;$/;"	m	class:dataflow::Graph
norm_region	caffe.pb.cc	/^::caffe::LRNProto_NormRegion LRNProto::norm_region() const {$/;"	f	class:caffe::LRNProto
norm_region	caffe.pb.h	/^inline ::caffe::LRNProto_NormRegion LRNProto::norm_region() const {$/;"	f	class:caffe::LRNProto
norm_region_	caffe.pb.h	/^  int norm_region_;$/;"	m	class:caffe::LRNProto
nullupdate_proto	caffe.pb.cc	/^const ::caffe::NullUpdateProto& LayerProto::nullupdate_proto() const {$/;"	f	class:caffe::LayerProto
nullupdate_proto	caffe.pb.h	/^inline const ::caffe::NullUpdateProto& LayerProto::nullupdate_proto() const {$/;"	f	class:caffe::LayerProto
nullupdate_proto_	caffe.pb.h	/^  ::caffe::NullUpdateProto* nullupdate_proto_;$/;"	m	class:caffe::LayerProto
num	caffe.pb.cc	/^::google::protobuf::uint32 CopyProto::num() const {$/;"	f	class:caffe::CopyProto
num	caffe.pb.h	/^inline ::google::protobuf::uint32 CopyProto::num() const {$/;"	f	class:caffe::CopyProto
num_	caffe.pb.h	/^  ::google::protobuf::uint32 num_;$/;"	m	class:caffe::CopyProto
num_batch_per_sync	caffe.pb.cc	/^::google::protobuf::int32 SolverProto::num_batch_per_sync() const {$/;"	f	class:caffe::SolverProto
num_batch_per_sync	caffe.pb.h	/^inline ::google::protobuf::int32 SolverProto::num_batch_per_sync() const {$/;"	f	class:caffe::SolverProto
num_batch_per_sync_	caffe.pb.h	/^  ::google::protobuf::int32 num_batch_per_sync_;$/;"	m	class:caffe::SolverProto
num_data_param_copy	caffe.pb.cc	/^::google::protobuf::int32 SolverProto::num_data_param_copy() const {$/;"	f	class:caffe::SolverProto
num_data_param_copy	caffe.pb.h	/^inline ::google::protobuf::int32 SolverProto::num_data_param_copy() const {$/;"	f	class:caffe::SolverProto
num_data_param_copy_	caffe.pb.h	/^  ::google::protobuf::int32 num_data_param_copy_;$/;"	m	class:caffe::SolverProto
num_model_param_copy	caffe.pb.cc	/^::google::protobuf::int32 SolverProto::num_model_param_copy() const {$/;"	f	class:caffe::SolverProto
num_model_param_copy	caffe.pb.h	/^inline ::google::protobuf::int32 SolverProto::num_model_param_copy() const {$/;"	f	class:caffe::SolverProto
num_model_param_copy_	caffe.pb.h	/^  ::google::protobuf::int32 num_model_param_copy_;$/;"	m	class:caffe::SolverProto
num_output	caffe.pb.cc	/^::google::protobuf::uint32 ConvolutionProto::num_output() const {$/;"	f	class:caffe::ConvolutionProto
num_output	caffe.pb.cc	/^::google::protobuf::uint32 InnerProductProto::num_output() const {$/;"	f	class:caffe::InnerProductProto
num_output	caffe.pb.h	/^inline ::google::protobuf::uint32 ConvolutionProto::num_output() const {$/;"	f	class:caffe::ConvolutionProto
num_output	caffe.pb.h	/^inline ::google::protobuf::uint32 InnerProductProto::num_output() const {$/;"	f	class:caffe::InnerProductProto
num_output_	caffe.pb.h	/^  ::google::protobuf::uint32 num_output_;$/;"	m	class:caffe::ConvolutionProto
num_output_	caffe.pb.h	/^  ::google::protobuf::uint32 num_output_;$/;"	m	class:caffe::InnerProductProto
offsets	caffe.pb.cc	/^const ::google::protobuf::uint32 TableStruct::offsets[] = {$/;"	m	class:caffe::protobuf_caffe_2eproto::TableStruct	file:
offsets	caffe.pb.h	/^  static const ::google::protobuf::uint32 offsets[];$/;"	m	struct:caffe::protobuf_caffe_2eproto::TableStruct
old_weight	caffe.pb.cc	/^const ::std::string& ModelUpdateProto::old_weight() const {$/;"	f	class:caffe::ModelUpdateProto
old_weight	caffe.pb.h	/^inline const ::std::string& ModelUpdateProto::old_weight() const {$/;"	f	class:caffe::ModelUpdateProto
old_weight_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr old_weight_;$/;"	m	class:caffe::ModelUpdateProto
operator =	caffe.pb.h	/^  inline BatchNormProto& operator=(const BatchNormProto& from) {$/;"	f	class:caffe::BatchNormProto
operator =	caffe.pb.h	/^  inline BlobProto& operator=(const BlobProto& from) {$/;"	f	class:caffe::BlobProto
operator =	caffe.pb.h	/^  inline BlobShape& operator=(const BlobShape& from) {$/;"	f	class:caffe::BlobShape
operator =	caffe.pb.h	/^  inline BoxingProto& operator=(const BoxingProto& from) {$/;"	f	class:caffe::BoxingProto
operator =	caffe.pb.h	/^  inline ConcatProto& operator=(const ConcatProto& from) {$/;"	f	class:caffe::ConcatProto
operator =	caffe.pb.h	/^  inline ConvolutionProto& operator=(const ConvolutionProto& from) {$/;"	f	class:caffe::ConvolutionProto
operator =	caffe.pb.h	/^  inline CopyProto& operator=(const CopyProto& from) {$/;"	f	class:caffe::CopyProto
operator =	caffe.pb.h	/^  inline DeviceGroup& operator=(const DeviceGroup& from) {$/;"	f	class:caffe::DeviceGroup
operator =	caffe.pb.h	/^  inline DeviceSet& operator=(const DeviceSet& from) {$/;"	f	class:caffe::DeviceSet
operator =	caffe.pb.h	/^  inline FillerParameter& operator=(const FillerParameter& from) {$/;"	f	class:caffe::FillerParameter
operator =	caffe.pb.h	/^  inline InnerProductProto& operator=(const InnerProductProto& from) {$/;"	f	class:caffe::InnerProductProto
operator =	caffe.pb.h	/^  inline LRNProto& operator=(const LRNProto& from) {$/;"	f	class:caffe::LRNProto
operator =	caffe.pb.h	/^  inline LayerProto& operator=(const LayerProto& from) {$/;"	f	class:caffe::LayerProto
operator =	caffe.pb.h	/^  inline LayerSet& operator=(const LayerSet& from) {$/;"	f	class:caffe::LayerSet
operator =	caffe.pb.h	/^  inline LoadPartialModelProto& operator=(const LoadPartialModelProto& from) {$/;"	f	class:caffe::LoadPartialModelProto
operator =	caffe.pb.h	/^  inline LoaderProto& operator=(const LoaderProto& from) {$/;"	f	class:caffe::LoaderProto
operator =	caffe.pb.h	/^  inline Machine& operator=(const Machine& from) {$/;"	f	class:caffe::Machine
operator =	caffe.pb.h	/^  inline MachineGroup& operator=(const MachineGroup& from) {$/;"	f	class:caffe::MachineGroup
operator =	caffe.pb.h	/^  inline ModelUpdateProto& operator=(const ModelUpdateProto& from) {$/;"	f	class:caffe::ModelUpdateProto
operator =	caffe.pb.h	/^  inline MultinomialLogisticLossProto& operator=(const MultinomialLogisticLossProto& from) {$/;"	f	class:caffe::MultinomialLogisticLossProto
operator =	caffe.pb.h	/^  inline NetParameter& operator=(const NetParameter& from) {$/;"	f	class:caffe::NetParameter
operator =	caffe.pb.h	/^  inline NetProto& operator=(const NetProto& from) {$/;"	f	class:caffe::NetProto
operator =	caffe.pb.h	/^  inline NetState& operator=(const NetState& from) {$/;"	f	class:caffe::NetState
operator =	caffe.pb.h	/^  inline NullUpdateProto& operator=(const NullUpdateProto& from) {$/;"	f	class:caffe::NullUpdateProto
operator =	caffe.pb.h	/^  inline ParamSpec& operator=(const ParamSpec& from) {$/;"	f	class:caffe::ParamSpec
operator =	caffe.pb.h	/^  inline PlaceholderProto& operator=(const PlaceholderProto& from) {$/;"	f	class:caffe::PlaceholderProto
operator =	caffe.pb.h	/^  inline PlacementGroup& operator=(const PlacementGroup& from) {$/;"	f	class:caffe::PlacementGroup
operator =	caffe.pb.h	/^  inline PoolingProto& operator=(const PoolingProto& from) {$/;"	f	class:caffe::PoolingProto
operator =	caffe.pb.h	/^  inline ReLUProto& operator=(const ReLUProto& from) {$/;"	f	class:caffe::ReLUProto
operator =	caffe.pb.h	/^  inline Resource& operator=(const Resource& from) {$/;"	f	class:caffe::Resource
operator =	caffe.pb.h	/^  inline SigmoidProto& operator=(const SigmoidProto& from) {$/;"	f	class:caffe::SigmoidProto
operator =	caffe.pb.h	/^  inline SoftmaxProto& operator=(const SoftmaxProto& from) {$/;"	f	class:caffe::SoftmaxProto
operator =	caffe.pb.h	/^  inline SolverProto& operator=(const SolverProto& from) {$/;"	f	class:caffe::SolverProto
operator =	caffe.pb.h	/^  inline SolverState& operator=(const SolverState& from) {$/;"	f	class:caffe::SolverState
operator =	caffe.pb.h	/^  inline SplitProto& operator=(const SplitProto& from) {$/;"	f	class:caffe::SplitProto
operator =	caffe.pb.h	/^  inline StoreProto& operator=(const StoreProto& from) {$/;"	f	class:caffe::StoreProto
operator =	caffe.pb.h	/^  inline Strategy& operator=(const Strategy& from) {$/;"	f	class:caffe::Strategy
operator char	logic.hpp	/^  operator char() {$/;"	f	struct:base::StaticPrint
out	caffe.pb.cc	/^BoxingProto::out() const {$/;"	f	class:caffe::BoxingProto
out	caffe.pb.cc	/^CopyProto::out() const {$/;"	f	class:caffe::CopyProto
out	caffe.pb.cc	/^NetProto::out() const {$/;"	f	class:caffe::NetProto
out	caffe.pb.cc	/^SplitProto::out() const {$/;"	f	class:caffe::SplitProto
out	caffe.pb.cc	/^const ::std::string& BoxingProto::out(int index) const {$/;"	f	class:caffe::BoxingProto
out	caffe.pb.cc	/^const ::std::string& ConcatProto::out() const {$/;"	f	class:caffe::ConcatProto
out	caffe.pb.cc	/^const ::std::string& ConvolutionProto::out() const {$/;"	f	class:caffe::ConvolutionProto
out	caffe.pb.cc	/^const ::std::string& CopyProto::out(int index) const {$/;"	f	class:caffe::CopyProto
out	caffe.pb.cc	/^const ::std::string& InnerProductProto::out() const {$/;"	f	class:caffe::InnerProductProto
out	caffe.pb.cc	/^const ::std::string& LRNProto::out() const {$/;"	f	class:caffe::LRNProto
out	caffe.pb.cc	/^const ::std::string& LoadPartialModelProto::out() const {$/;"	f	class:caffe::LoadPartialModelProto
out	caffe.pb.cc	/^const ::std::string& NetProto::out(int index) const {$/;"	f	class:caffe::NetProto
out	caffe.pb.cc	/^const ::std::string& PlaceholderProto::out() const {$/;"	f	class:caffe::PlaceholderProto
out	caffe.pb.cc	/^const ::std::string& PoolingProto::out() const {$/;"	f	class:caffe::PoolingProto
out	caffe.pb.cc	/^const ::std::string& ReLUProto::out() const {$/;"	f	class:caffe::ReLUProto
out	caffe.pb.cc	/^const ::std::string& SigmoidProto::out() const {$/;"	f	class:caffe::SigmoidProto
out	caffe.pb.cc	/^const ::std::string& SoftmaxProto::out() const {$/;"	f	class:caffe::SoftmaxProto
out	caffe.pb.cc	/^const ::std::string& SplitProto::out(int index) const {$/;"	f	class:caffe::SplitProto
out	caffe.pb.cc	/^const ::std::string& StoreProto::out() const {$/;"	f	class:caffe::StoreProto
out	caffe.pb.h	/^BoxingProto::out() const {$/;"	f	class:caffe::BoxingProto
out	caffe.pb.h	/^CopyProto::out() const {$/;"	f	class:caffe::CopyProto
out	caffe.pb.h	/^NetProto::out() const {$/;"	f	class:caffe::NetProto
out	caffe.pb.h	/^SplitProto::out() const {$/;"	f	class:caffe::SplitProto
out	caffe.pb.h	/^inline const ::std::string& BoxingProto::out(int index) const {$/;"	f	class:caffe::BoxingProto
out	caffe.pb.h	/^inline const ::std::string& ConcatProto::out() const {$/;"	f	class:caffe::ConcatProto
out	caffe.pb.h	/^inline const ::std::string& ConvolutionProto::out() const {$/;"	f	class:caffe::ConvolutionProto
out	caffe.pb.h	/^inline const ::std::string& CopyProto::out(int index) const {$/;"	f	class:caffe::CopyProto
out	caffe.pb.h	/^inline const ::std::string& InnerProductProto::out() const {$/;"	f	class:caffe::InnerProductProto
out	caffe.pb.h	/^inline const ::std::string& LRNProto::out() const {$/;"	f	class:caffe::LRNProto
out	caffe.pb.h	/^inline const ::std::string& LoadPartialModelProto::out() const {$/;"	f	class:caffe::LoadPartialModelProto
out	caffe.pb.h	/^inline const ::std::string& NetProto::out(int index) const {$/;"	f	class:caffe::NetProto
out	caffe.pb.h	/^inline const ::std::string& PlaceholderProto::out() const {$/;"	f	class:caffe::PlaceholderProto
out	caffe.pb.h	/^inline const ::std::string& PoolingProto::out() const {$/;"	f	class:caffe::PoolingProto
out	caffe.pb.h	/^inline const ::std::string& ReLUProto::out() const {$/;"	f	class:caffe::ReLUProto
out	caffe.pb.h	/^inline const ::std::string& SigmoidProto::out() const {$/;"	f	class:caffe::SigmoidProto
out	caffe.pb.h	/^inline const ::std::string& SoftmaxProto::out() const {$/;"	f	class:caffe::SoftmaxProto
out	caffe.pb.h	/^inline const ::std::string& SplitProto::out(int index) const {$/;"	f	class:caffe::SplitProto
out	caffe.pb.h	/^inline const ::std::string& StoreProto::out() const {$/;"	f	class:caffe::StoreProto
out_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> out_;$/;"	m	class:caffe::BoxingProto
out_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> out_;$/;"	m	class:caffe::CopyProto
out_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> out_;$/;"	m	class:caffe::NetProto
out_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> out_;$/;"	m	class:caffe::SplitProto
out_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr out_;$/;"	m	class:caffe::ConcatProto
out_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr out_;$/;"	m	class:caffe::ConvolutionProto
out_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr out_;$/;"	m	class:caffe::InnerProductProto
out_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr out_;$/;"	m	class:caffe::LRNProto
out_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr out_;$/;"	m	class:caffe::LoadPartialModelProto
out_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr out_;$/;"	m	class:caffe::PlaceholderProto
out_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr out_;$/;"	m	class:caffe::PoolingProto
out_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr out_;$/;"	m	class:caffe::ReLUProto
out_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr out_;$/;"	m	class:caffe::SigmoidProto
out_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr out_;$/;"	m	class:caffe::SoftmaxProto
out_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr out_;$/;"	m	class:caffe::StoreProto
out_axis	caffe.pb.cc	/^::google::protobuf::int32 BoxingProto::out_axis() const {$/;"	f	class:caffe::BoxingProto
out_axis	caffe.pb.h	/^inline ::google::protobuf::int32 BoxingProto::out_axis() const {$/;"	f	class:caffe::BoxingProto
out_axis_	caffe.pb.h	/^  ::google::protobuf::int32 out_axis_;$/;"	m	class:caffe::BoxingProto
out_envelope	caffe.pb.cc	/^const ::std::string& NetProto::out_envelope() const {$/;"	f	class:caffe::NetProto
out_envelope	caffe.pb.h	/^inline const ::std::string& NetProto::out_envelope() const {$/;"	f	class:caffe::NetProto
out_envelope_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr out_envelope_;$/;"	m	class:caffe::NetProto
out_nodes	graph.h	/^  std::vector<std::string> out_nodes;$/;"	m	struct:dataflow::NodeInfo
out_num	caffe.pb.cc	/^::google::protobuf::uint32 BoxingProto::out_num() const {$/;"	f	class:caffe::BoxingProto
out_num	caffe.pb.cc	/^::google::protobuf::uint32 NetProto::out_num() const {$/;"	f	class:caffe::NetProto
out_num	caffe.pb.cc	/^::google::protobuf::uint32 SplitProto::out_num() const {$/;"	f	class:caffe::SplitProto
out_num	caffe.pb.h	/^inline ::google::protobuf::uint32 BoxingProto::out_num() const {$/;"	f	class:caffe::BoxingProto
out_num	caffe.pb.h	/^inline ::google::protobuf::uint32 NetProto::out_num() const {$/;"	f	class:caffe::NetProto
out_num	caffe.pb.h	/^inline ::google::protobuf::uint32 SplitProto::out_num() const {$/;"	f	class:caffe::SplitProto
out_num_	caffe.pb.h	/^  ::google::protobuf::uint32 out_num_;$/;"	m	class:caffe::BoxingProto
out_num_	caffe.pb.h	/^  ::google::protobuf::uint32 out_num_;$/;"	m	class:caffe::NetProto
out_num_	caffe.pb.h	/^  ::google::protobuf::uint32 out_num_;$/;"	m	class:caffe::SplitProto
out_op	caffe.pb.cc	/^::caffe::BoxingOp BoxingProto::out_op() const {$/;"	f	class:caffe::BoxingProto
out_op	caffe.pb.h	/^inline ::caffe::BoxingOp BoxingProto::out_op() const {$/;"	f	class:caffe::BoxingProto
out_op_	caffe.pb.h	/^  int out_op_;$/;"	m	class:caffe::BoxingProto
out_size	caffe.pb.cc	/^int BoxingProto::out_size() const {$/;"	f	class:caffe::BoxingProto
out_size	caffe.pb.cc	/^int CopyProto::out_size() const {$/;"	f	class:caffe::CopyProto
out_size	caffe.pb.cc	/^int NetProto::out_size() const {$/;"	f	class:caffe::NetProto
out_size	caffe.pb.cc	/^int SplitProto::out_size() const {$/;"	f	class:caffe::SplitProto
out_size	caffe.pb.h	/^inline int BoxingProto::out_size() const {$/;"	f	class:caffe::BoxingProto
out_size	caffe.pb.h	/^inline int CopyProto::out_size() const {$/;"	f	class:caffe::CopyProto
out_size	caffe.pb.h	/^inline int NetProto::out_size() const {$/;"	f	class:caffe::NetProto
out_size	caffe.pb.h	/^inline int SplitProto::out_size() const {$/;"	f	class:caffe::SplitProto
pad	caffe.pb.cc	/^::google::protobuf::uint32 ConvolutionProto::pad() const {$/;"	f	class:caffe::ConvolutionProto
pad	caffe.pb.cc	/^::google::protobuf::uint32 PoolingProto::pad() const {$/;"	f	class:caffe::PoolingProto
pad	caffe.pb.h	/^inline ::google::protobuf::uint32 ConvolutionProto::pad() const {$/;"	f	class:caffe::ConvolutionProto
pad	caffe.pb.h	/^inline ::google::protobuf::uint32 PoolingProto::pad() const {$/;"	f	class:caffe::PoolingProto
pad_	caffe.pb.h	/^  ::google::protobuf::uint32 pad_;$/;"	m	class:caffe::ConvolutionProto
pad_	caffe.pb.h	/^  ::google::protobuf::uint32 pad_;$/;"	m	class:caffe::PoolingProto
pad_h	caffe.pb.cc	/^::google::protobuf::uint32 ConvolutionProto::pad_h() const {$/;"	f	class:caffe::ConvolutionProto
pad_h	caffe.pb.cc	/^::google::protobuf::uint32 PoolingProto::pad_h() const {$/;"	f	class:caffe::PoolingProto
pad_h	caffe.pb.h	/^inline ::google::protobuf::uint32 ConvolutionProto::pad_h() const {$/;"	f	class:caffe::ConvolutionProto
pad_h	caffe.pb.h	/^inline ::google::protobuf::uint32 PoolingProto::pad_h() const {$/;"	f	class:caffe::PoolingProto
pad_h_	caffe.pb.h	/^  ::google::protobuf::uint32 pad_h_;$/;"	m	class:caffe::ConvolutionProto
pad_h_	caffe.pb.h	/^  ::google::protobuf::uint32 pad_h_;$/;"	m	class:caffe::PoolingProto
pad_w	caffe.pb.cc	/^::google::protobuf::uint32 ConvolutionProto::pad_w() const {$/;"	f	class:caffe::ConvolutionProto
pad_w	caffe.pb.cc	/^::google::protobuf::uint32 PoolingProto::pad_w() const {$/;"	f	class:caffe::PoolingProto
pad_w	caffe.pb.h	/^inline ::google::protobuf::uint32 ConvolutionProto::pad_w() const {$/;"	f	class:caffe::ConvolutionProto
pad_w	caffe.pb.h	/^inline ::google::protobuf::uint32 PoolingProto::pad_w() const {$/;"	f	class:caffe::PoolingProto
pad_w_	caffe.pb.h	/^  ::google::protobuf::uint32 pad_w_;$/;"	m	class:caffe::ConvolutionProto
pad_w_	caffe.pb.h	/^  ::google::protobuf::uint32 pad_w_;$/;"	m	class:caffe::PoolingProto
parallel_policy	caffe.pb.cc	/^::caffe::ParallelPolicy PlacementGroup::parallel_policy() const {$/;"	f	class:caffe::PlacementGroup
parallel_policy	caffe.pb.h	/^inline ::caffe::ParallelPolicy PlacementGroup::parallel_policy() const {$/;"	f	class:caffe::PlacementGroup
parallel_policy_	caffe.pb.h	/^  int parallel_policy_;$/;"	m	class:caffe::PlacementGroup
param	caffe.pb.cc	/^ConvolutionProto::param() const {$/;"	f	class:caffe::ConvolutionProto
param	caffe.pb.cc	/^InnerProductProto::param() const {$/;"	f	class:caffe::InnerProductProto
param	caffe.pb.cc	/^const ::caffe::ParamSpec& ConvolutionProto::param(int index) const {$/;"	f	class:caffe::ConvolutionProto
param	caffe.pb.cc	/^const ::caffe::ParamSpec& InnerProductProto::param(int index) const {$/;"	f	class:caffe::InnerProductProto
param	caffe.pb.h	/^ConvolutionProto::param() const {$/;"	f	class:caffe::ConvolutionProto
param	caffe.pb.h	/^InnerProductProto::param() const {$/;"	f	class:caffe::InnerProductProto
param	caffe.pb.h	/^inline const ::caffe::ParamSpec& ConvolutionProto::param(int index) const {$/;"	f	class:caffe::ConvolutionProto
param	caffe.pb.h	/^inline const ::caffe::ParamSpec& InnerProductProto::param(int index) const {$/;"	f	class:caffe::InnerProductProto
param_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::caffe::ParamSpec > param_;$/;"	m	class:caffe::ConvolutionProto
param_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::caffe::ParamSpec > param_;$/;"	m	class:caffe::InnerProductProto
param_size	caffe.pb.cc	/^int ConvolutionProto::param_size() const {$/;"	f	class:caffe::ConvolutionProto
param_size	caffe.pb.cc	/^int InnerProductProto::param_size() const {$/;"	f	class:caffe::InnerProductProto
param_size	caffe.pb.h	/^inline int ConvolutionProto::param_size() const {$/;"	f	class:caffe::ConvolutionProto
param_size	caffe.pb.h	/^inline int InnerProductProto::param_size() const {$/;"	f	class:caffe::InnerProductProto
phase	caffe.pb.cc	/^::caffe::Phase NetState::phase() const {$/;"	f	class:caffe::NetState
phase	caffe.pb.h	/^inline ::caffe::Phase NetState::phase() const {$/;"	f	class:caffe::NetState
phase_	caffe.pb.h	/^  int phase_;$/;"	m	class:caffe::NetState
piece_size	caffe.pb.cc	/^::google::protobuf::uint32 LoaderProto::piece_size() const {$/;"	f	class:caffe::LoaderProto
piece_size	caffe.pb.h	/^inline ::google::protobuf::uint32 LoaderProto::piece_size() const {$/;"	f	class:caffe::LoaderProto
piece_size_	caffe.pb.h	/^  ::google::protobuf::uint32 piece_size_;$/;"	m	class:caffe::LoaderProto
placeholder_proto	caffe.pb.cc	/^const ::caffe::PlaceholderProto& LayerProto::placeholder_proto() const {$/;"	f	class:caffe::LayerProto
placeholder_proto	caffe.pb.h	/^inline const ::caffe::PlaceholderProto& LayerProto::placeholder_proto() const {$/;"	f	class:caffe::LayerProto
placeholder_proto_	caffe.pb.h	/^  ::caffe::PlaceholderProto* placeholder_proto_;$/;"	m	class:caffe::LayerProto
placement_group	caffe.pb.cc	/^Strategy::placement_group() const {$/;"	f	class:caffe::Strategy
placement_group	caffe.pb.cc	/^const ::caffe::PlacementGroup& Strategy::placement_group(int index) const {$/;"	f	class:caffe::Strategy
placement_group	caffe.pb.h	/^Strategy::placement_group() const {$/;"	f	class:caffe::Strategy
placement_group	caffe.pb.h	/^inline const ::caffe::PlacementGroup& Strategy::placement_group(int index) const {$/;"	f	class:caffe::Strategy
placement_group_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::caffe::PlacementGroup > placement_group_;$/;"	m	class:caffe::Strategy
placement_group_size	caffe.pb.cc	/^int Strategy::placement_group_size() const {$/;"	f	class:caffe::Strategy
placement_group_size	caffe.pb.h	/^inline int Strategy::placement_group_size() const {$/;"	f	class:caffe::Strategy
pool	caffe.pb.cc	/^::caffe::PoolingProto_PoolMethod PoolingProto::pool() const {$/;"	f	class:caffe::PoolingProto
pool	caffe.pb.h	/^inline ::caffe::PoolingProto_PoolMethod PoolingProto::pool() const {$/;"	f	class:caffe::PoolingProto
pool	object_pool_test.cc	/^  ObjectPool<int> pool;$/;"	m	class:dataflow::ObjectPool_Test	file:
pool_	caffe.pb.h	/^  int pool_;$/;"	m	class:caffe::PoolingProto
pooling_proto	caffe.pb.cc	/^const ::caffe::PoolingProto& LayerProto::pooling_proto() const {$/;"	f	class:caffe::LayerProto
pooling_proto	caffe.pb.h	/^inline const ::caffe::PoolingProto& LayerProto::pooling_proto() const {$/;"	f	class:caffe::LayerProto
pooling_proto_	caffe.pb.h	/^  ::caffe::PoolingProto* pooling_proto_;$/;"	m	class:caffe::LayerProto
port	caffe.pb.cc	/^const ::std::string& Machine::port() const {$/;"	f	class:caffe::Machine
port	caffe.pb.h	/^inline const ::std::string& Machine::port() const {$/;"	f	class:caffe::Machine
port_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr port_;$/;"	m	class:caffe::Machine
power	caffe.pb.cc	/^float SolverProto::power() const {$/;"	f	class:caffe::SolverProto
power	caffe.pb.h	/^inline float SolverProto::power() const {$/;"	f	class:caffe::SolverProto
power_	caffe.pb.h	/^  float power_;$/;"	m	class:caffe::SolverProto
private	object_pool_test.cc	/^#define private /;"	d	file:
protected	object_pool_test.cc	/^#define protected /;"	d	file:
protobuf	caffe.pb.h	/^namespace protobuf {$/;"	n	namespace:google
protobuf_AssignDescriptors	caffe.pb.cc	/^void protobuf_AssignDescriptors() {$/;"	f	namespace:caffe::protobuf_caffe_2eproto::__anon2
protobuf_AssignDescriptorsOnce	caffe.pb.cc	/^void protobuf_AssignDescriptorsOnce() {$/;"	f	namespace:caffe::protobuf_caffe_2eproto::__anon2
protobuf_RegisterTypes	caffe.pb.cc	/^void protobuf_RegisterTypes(const ::std::string&) {$/;"	f	namespace:caffe::protobuf_caffe_2eproto::__anon2
protobuf_caffe_2eproto	caffe.pb.cc	/^namespace protobuf_caffe_2eproto {$/;"	n	namespace:caffe	file:
protobuf_caffe_2eproto	caffe.pb.h	/^namespace protobuf_caffe_2eproto {$/;"	n	namespace:caffe
random_seed	caffe.pb.cc	/^::google::protobuf::int64 SolverProto::random_seed() const {$/;"	f	class:caffe::SolverProto
random_seed	caffe.pb.h	/^inline ::google::protobuf::int64 SolverProto::random_seed() const {$/;"	f	class:caffe::SolverProto
random_seed_	caffe.pb.h	/^  ::google::protobuf::int64 random_seed_;$/;"	m	class:caffe::SolverProto
regularization_type	caffe.pb.cc	/^const ::std::string& SolverProto::regularization_type() const {$/;"	f	class:caffe::SolverProto
regularization_type	caffe.pb.h	/^inline const ::std::string& SolverProto::regularization_type() const {$/;"	f	class:caffe::SolverProto
regularization_type_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr regularization_type_;$/;"	m	class:caffe::SolverProto
release_batchnorm_proto	caffe.pb.cc	/^::caffe::BatchNormProto* LayerProto::release_batchnorm_proto() {$/;"	f	class:caffe::LayerProto
release_batchnorm_proto	caffe.pb.h	/^inline ::caffe::BatchNormProto* LayerProto::release_batchnorm_proto() {$/;"	f	class:caffe::LayerProto
release_bias_filler	caffe.pb.cc	/^::caffe::FillerParameter* ConvolutionProto::release_bias_filler() {$/;"	f	class:caffe::ConvolutionProto
release_bias_filler	caffe.pb.cc	/^::caffe::FillerParameter* InnerProductProto::release_bias_filler() {$/;"	f	class:caffe::InnerProductProto
release_bias_filler	caffe.pb.h	/^inline ::caffe::FillerParameter* ConvolutionProto::release_bias_filler() {$/;"	f	class:caffe::ConvolutionProto
release_bias_filler	caffe.pb.h	/^inline ::caffe::FillerParameter* InnerProductProto::release_bias_filler() {$/;"	f	class:caffe::InnerProductProto
release_byte_data	caffe.pb.cc	/^::std::string* BlobProto::release_byte_data() {$/;"	f	class:caffe::BlobProto
release_byte_data	caffe.pb.h	/^inline ::std::string* BlobProto::release_byte_data() {$/;"	f	class:caffe::BlobProto
release_concat_proto	caffe.pb.cc	/^::caffe::ConcatProto* LayerProto::release_concat_proto() {$/;"	f	class:caffe::LayerProto
release_concat_proto	caffe.pb.h	/^inline ::caffe::ConcatProto* LayerProto::release_concat_proto() {$/;"	f	class:caffe::LayerProto
release_convolution_proto	caffe.pb.cc	/^::caffe::ConvolutionProto* LayerProto::release_convolution_proto() {$/;"	f	class:caffe::LayerProto
release_convolution_proto	caffe.pb.h	/^inline ::caffe::ConvolutionProto* LayerProto::release_convolution_proto() {$/;"	f	class:caffe::LayerProto
release_data	caffe.pb.cc	/^::std::string* LoaderProto::release_data() {$/;"	f	class:caffe::LoaderProto
release_data	caffe.pb.cc	/^::std::string* MultinomialLogisticLossProto::release_data() {$/;"	f	class:caffe::MultinomialLogisticLossProto
release_data	caffe.pb.h	/^inline ::std::string* LoaderProto::release_data() {$/;"	f	class:caffe::LoaderProto
release_data	caffe.pb.h	/^inline ::std::string* MultinomialLogisticLossProto::release_data() {$/;"	f	class:caffe::MultinomialLogisticLossProto
release_device_group	caffe.pb.cc	/^::caffe::DeviceGroup* PlacementGroup::release_device_group() {$/;"	f	class:caffe::PlacementGroup
release_device_group	caffe.pb.h	/^inline ::caffe::DeviceGroup* PlacementGroup::release_device_group() {$/;"	f	class:caffe::PlacementGroup
release_device_set	caffe.pb.cc	/^::caffe::DeviceSet* Machine::release_device_set() {$/;"	f	class:caffe::Machine
release_device_set	caffe.pb.h	/^inline ::caffe::DeviceSet* Machine::release_device_set() {$/;"	f	class:caffe::Machine
release_gradient	caffe.pb.cc	/^::std::string* ModelUpdateProto::release_gradient() {$/;"	f	class:caffe::ModelUpdateProto
release_gradient	caffe.pb.h	/^inline ::std::string* ModelUpdateProto::release_gradient() {$/;"	f	class:caffe::ModelUpdateProto
release_in	caffe.pb.cc	/^::std::string* ConvolutionProto::release_in() {$/;"	f	class:caffe::ConvolutionProto
release_in	caffe.pb.cc	/^::std::string* InnerProductProto::release_in() {$/;"	f	class:caffe::InnerProductProto
release_in	caffe.pb.cc	/^::std::string* LRNProto::release_in() {$/;"	f	class:caffe::LRNProto
release_in	caffe.pb.cc	/^::std::string* PlaceholderProto::release_in() {$/;"	f	class:caffe::PlaceholderProto
release_in	caffe.pb.cc	/^::std::string* PoolingProto::release_in() {$/;"	f	class:caffe::PoolingProto
release_in	caffe.pb.cc	/^::std::string* ReLUProto::release_in() {$/;"	f	class:caffe::ReLUProto
release_in	caffe.pb.cc	/^::std::string* SigmoidProto::release_in() {$/;"	f	class:caffe::SigmoidProto
release_in	caffe.pb.cc	/^::std::string* SoftmaxProto::release_in() {$/;"	f	class:caffe::SoftmaxProto
release_in	caffe.pb.cc	/^::std::string* SplitProto::release_in() {$/;"	f	class:caffe::SplitProto
release_in	caffe.pb.cc	/^::std::string* StoreProto::release_in() {$/;"	f	class:caffe::StoreProto
release_in	caffe.pb.h	/^inline ::std::string* ConvolutionProto::release_in() {$/;"	f	class:caffe::ConvolutionProto
release_in	caffe.pb.h	/^inline ::std::string* InnerProductProto::release_in() {$/;"	f	class:caffe::InnerProductProto
release_in	caffe.pb.h	/^inline ::std::string* LRNProto::release_in() {$/;"	f	class:caffe::LRNProto
release_in	caffe.pb.h	/^inline ::std::string* PlaceholderProto::release_in() {$/;"	f	class:caffe::PlaceholderProto
release_in	caffe.pb.h	/^inline ::std::string* PoolingProto::release_in() {$/;"	f	class:caffe::PoolingProto
release_in	caffe.pb.h	/^inline ::std::string* ReLUProto::release_in() {$/;"	f	class:caffe::ReLUProto
release_in	caffe.pb.h	/^inline ::std::string* SigmoidProto::release_in() {$/;"	f	class:caffe::SigmoidProto
release_in	caffe.pb.h	/^inline ::std::string* SoftmaxProto::release_in() {$/;"	f	class:caffe::SoftmaxProto
release_in	caffe.pb.h	/^inline ::std::string* SplitProto::release_in() {$/;"	f	class:caffe::SplitProto
release_in	caffe.pb.h	/^inline ::std::string* StoreProto::release_in() {$/;"	f	class:caffe::StoreProto
release_in_envelope	caffe.pb.cc	/^::std::string* NetProto::release_in_envelope() {$/;"	f	class:caffe::NetProto
release_in_envelope	caffe.pb.h	/^inline ::std::string* NetProto::release_in_envelope() {$/;"	f	class:caffe::NetProto
release_innerproduct_proto	caffe.pb.cc	/^::caffe::InnerProductProto* LayerProto::release_innerproduct_proto() {$/;"	f	class:caffe::LayerProto
release_innerproduct_proto	caffe.pb.h	/^inline ::caffe::InnerProductProto* LayerProto::release_innerproduct_proto() {$/;"	f	class:caffe::LayerProto
release_label	caffe.pb.cc	/^::std::string* LoaderProto::release_label() {$/;"	f	class:caffe::LoaderProto
release_label	caffe.pb.cc	/^::std::string* MultinomialLogisticLossProto::release_label() {$/;"	f	class:caffe::MultinomialLogisticLossProto
release_label	caffe.pb.h	/^inline ::std::string* LoaderProto::release_label() {$/;"	f	class:caffe::LoaderProto
release_label	caffe.pb.h	/^inline ::std::string* MultinomialLogisticLossProto::release_label() {$/;"	f	class:caffe::MultinomialLogisticLossProto
release_layer_set	caffe.pb.cc	/^::caffe::LayerSet* PlacementGroup::release_layer_set() {$/;"	f	class:caffe::PlacementGroup
release_layer_set	caffe.pb.h	/^inline ::caffe::LayerSet* PlacementGroup::release_layer_set() {$/;"	f	class:caffe::PlacementGroup
release_learned_net	caffe.pb.cc	/^::std::string* SolverState::release_learned_net() {$/;"	f	class:caffe::SolverState
release_learned_net	caffe.pb.h	/^inline ::std::string* SolverState::release_learned_net() {$/;"	f	class:caffe::SolverState
release_loader_proto	caffe.pb.cc	/^::caffe::LoaderProto* LayerProto::release_loader_proto() {$/;"	f	class:caffe::LayerProto
release_loader_proto	caffe.pb.h	/^inline ::caffe::LoaderProto* LayerProto::release_loader_proto() {$/;"	f	class:caffe::LayerProto
release_loadpartialmodel_proto	caffe.pb.cc	/^::caffe::LoadPartialModelProto* LayerProto::release_loadpartialmodel_proto() {$/;"	f	class:caffe::LayerProto
release_loadpartialmodel_proto	caffe.pb.h	/^inline ::caffe::LoadPartialModelProto* LayerProto::release_loadpartialmodel_proto() {$/;"	f	class:caffe::LayerProto
release_loss	caffe.pb.cc	/^::std::string* MultinomialLogisticLossProto::release_loss() {$/;"	f	class:caffe::MultinomialLogisticLossProto
release_loss	caffe.pb.h	/^inline ::std::string* MultinomialLogisticLossProto::release_loss() {$/;"	f	class:caffe::MultinomialLogisticLossProto
release_lr_policy	caffe.pb.cc	/^::std::string* SolverProto::release_lr_policy() {$/;"	f	class:caffe::SolverProto
release_lr_policy	caffe.pb.h	/^inline ::std::string* SolverProto::release_lr_policy() {$/;"	f	class:caffe::SolverProto
release_lrn_proto	caffe.pb.cc	/^::caffe::LRNProto* LayerProto::release_lrn_proto() {$/;"	f	class:caffe::LayerProto
release_lrn_proto	caffe.pb.h	/^inline ::caffe::LRNProto* LayerProto::release_lrn_proto() {$/;"	f	class:caffe::LayerProto
release_machine_group	caffe.pb.cc	/^::caffe::MachineGroup* PlacementGroup::release_machine_group() {$/;"	f	class:caffe::PlacementGroup
release_machine_group	caffe.pb.h	/^inline ::caffe::MachineGroup* PlacementGroup::release_machine_group() {$/;"	f	class:caffe::PlacementGroup
release_modelupdate_proto	caffe.pb.cc	/^::caffe::ModelUpdateProto* LayerProto::release_modelupdate_proto() {$/;"	f	class:caffe::LayerProto
release_modelupdate_proto	caffe.pb.h	/^inline ::caffe::ModelUpdateProto* LayerProto::release_modelupdate_proto() {$/;"	f	class:caffe::LayerProto
release_multinomiallogisticloss_proto	caffe.pb.cc	/^::caffe::MultinomialLogisticLossProto* LayerProto::release_multinomiallogisticloss_proto() {$/;"	f	class:caffe::LayerProto
release_multinomiallogisticloss_proto	caffe.pb.h	/^inline ::caffe::MultinomialLogisticLossProto* LayerProto::release_multinomiallogisticloss_proto() {$/;"	f	class:caffe::LayerProto
release_name	caffe.pb.cc	/^::std::string* BlobProto::release_name() {$/;"	f	class:caffe::BlobProto
release_name	caffe.pb.cc	/^::std::string* LayerProto::release_name() {$/;"	f	class:caffe::LayerProto
release_name	caffe.pb.cc	/^::std::string* Machine::release_name() {$/;"	f	class:caffe::Machine
release_name	caffe.pb.cc	/^::std::string* NetParameter::release_name() {$/;"	f	class:caffe::NetParameter
release_name	caffe.pb.cc	/^::std::string* ParamSpec::release_name() {$/;"	f	class:caffe::ParamSpec
release_name	caffe.pb.cc	/^::std::string* PlacementGroup::release_name() {$/;"	f	class:caffe::PlacementGroup
release_name	caffe.pb.h	/^inline ::std::string* BlobProto::release_name() {$/;"	f	class:caffe::BlobProto
release_name	caffe.pb.h	/^inline ::std::string* LayerProto::release_name() {$/;"	f	class:caffe::LayerProto
release_name	caffe.pb.h	/^inline ::std::string* Machine::release_name() {$/;"	f	class:caffe::Machine
release_name	caffe.pb.h	/^inline ::std::string* NetParameter::release_name() {$/;"	f	class:caffe::NetParameter
release_name	caffe.pb.h	/^inline ::std::string* ParamSpec::release_name() {$/;"	f	class:caffe::ParamSpec
release_name	caffe.pb.h	/^inline ::std::string* PlacementGroup::release_name() {$/;"	f	class:caffe::PlacementGroup
release_nullupdate_proto	caffe.pb.cc	/^::caffe::NullUpdateProto* LayerProto::release_nullupdate_proto() {$/;"	f	class:caffe::LayerProto
release_nullupdate_proto	caffe.pb.h	/^inline ::caffe::NullUpdateProto* LayerProto::release_nullupdate_proto() {$/;"	f	class:caffe::LayerProto
release_old_weight	caffe.pb.cc	/^::std::string* ModelUpdateProto::release_old_weight() {$/;"	f	class:caffe::ModelUpdateProto
release_old_weight	caffe.pb.h	/^inline ::std::string* ModelUpdateProto::release_old_weight() {$/;"	f	class:caffe::ModelUpdateProto
release_out	caffe.pb.cc	/^::std::string* ConcatProto::release_out() {$/;"	f	class:caffe::ConcatProto
release_out	caffe.pb.cc	/^::std::string* ConvolutionProto::release_out() {$/;"	f	class:caffe::ConvolutionProto
release_out	caffe.pb.cc	/^::std::string* InnerProductProto::release_out() {$/;"	f	class:caffe::InnerProductProto
release_out	caffe.pb.cc	/^::std::string* LRNProto::release_out() {$/;"	f	class:caffe::LRNProto
release_out	caffe.pb.cc	/^::std::string* LoadPartialModelProto::release_out() {$/;"	f	class:caffe::LoadPartialModelProto
release_out	caffe.pb.cc	/^::std::string* PlaceholderProto::release_out() {$/;"	f	class:caffe::PlaceholderProto
release_out	caffe.pb.cc	/^::std::string* PoolingProto::release_out() {$/;"	f	class:caffe::PoolingProto
release_out	caffe.pb.cc	/^::std::string* ReLUProto::release_out() {$/;"	f	class:caffe::ReLUProto
release_out	caffe.pb.cc	/^::std::string* SigmoidProto::release_out() {$/;"	f	class:caffe::SigmoidProto
release_out	caffe.pb.cc	/^::std::string* SoftmaxProto::release_out() {$/;"	f	class:caffe::SoftmaxProto
release_out	caffe.pb.cc	/^::std::string* StoreProto::release_out() {$/;"	f	class:caffe::StoreProto
release_out	caffe.pb.h	/^inline ::std::string* ConcatProto::release_out() {$/;"	f	class:caffe::ConcatProto
release_out	caffe.pb.h	/^inline ::std::string* ConvolutionProto::release_out() {$/;"	f	class:caffe::ConvolutionProto
release_out	caffe.pb.h	/^inline ::std::string* InnerProductProto::release_out() {$/;"	f	class:caffe::InnerProductProto
release_out	caffe.pb.h	/^inline ::std::string* LRNProto::release_out() {$/;"	f	class:caffe::LRNProto
release_out	caffe.pb.h	/^inline ::std::string* LoadPartialModelProto::release_out() {$/;"	f	class:caffe::LoadPartialModelProto
release_out	caffe.pb.h	/^inline ::std::string* PlaceholderProto::release_out() {$/;"	f	class:caffe::PlaceholderProto
release_out	caffe.pb.h	/^inline ::std::string* PoolingProto::release_out() {$/;"	f	class:caffe::PoolingProto
release_out	caffe.pb.h	/^inline ::std::string* ReLUProto::release_out() {$/;"	f	class:caffe::ReLUProto
release_out	caffe.pb.h	/^inline ::std::string* SigmoidProto::release_out() {$/;"	f	class:caffe::SigmoidProto
release_out	caffe.pb.h	/^inline ::std::string* SoftmaxProto::release_out() {$/;"	f	class:caffe::SoftmaxProto
release_out	caffe.pb.h	/^inline ::std::string* StoreProto::release_out() {$/;"	f	class:caffe::StoreProto
release_out_envelope	caffe.pb.cc	/^::std::string* NetProto::release_out_envelope() {$/;"	f	class:caffe::NetProto
release_out_envelope	caffe.pb.h	/^inline ::std::string* NetProto::release_out_envelope() {$/;"	f	class:caffe::NetProto
release_placeholder_proto	caffe.pb.cc	/^::caffe::PlaceholderProto* LayerProto::release_placeholder_proto() {$/;"	f	class:caffe::LayerProto
release_placeholder_proto	caffe.pb.h	/^inline ::caffe::PlaceholderProto* LayerProto::release_placeholder_proto() {$/;"	f	class:caffe::LayerProto
release_pooling_proto	caffe.pb.cc	/^::caffe::PoolingProto* LayerProto::release_pooling_proto() {$/;"	f	class:caffe::LayerProto
release_pooling_proto	caffe.pb.h	/^inline ::caffe::PoolingProto* LayerProto::release_pooling_proto() {$/;"	f	class:caffe::LayerProto
release_port	caffe.pb.cc	/^::std::string* Machine::release_port() {$/;"	f	class:caffe::Machine
release_port	caffe.pb.h	/^inline ::std::string* Machine::release_port() {$/;"	f	class:caffe::Machine
release_regularization_type	caffe.pb.cc	/^::std::string* SolverProto::release_regularization_type() {$/;"	f	class:caffe::SolverProto
release_regularization_type	caffe.pb.h	/^inline ::std::string* SolverProto::release_regularization_type() {$/;"	f	class:caffe::SolverProto
release_relu_proto	caffe.pb.cc	/^::caffe::ReLUProto* LayerProto::release_relu_proto() {$/;"	f	class:caffe::LayerProto
release_relu_proto	caffe.pb.h	/^inline ::caffe::ReLUProto* LayerProto::release_relu_proto() {$/;"	f	class:caffe::LayerProto
release_resource	caffe.pb.cc	/^::std::string* SolverProto::release_resource() {$/;"	f	class:caffe::SolverProto
release_resource	caffe.pb.h	/^inline ::std::string* SolverProto::release_resource() {$/;"	f	class:caffe::SolverProto
release_sigmoid_proto	caffe.pb.cc	/^::caffe::SigmoidProto* LayerProto::release_sigmoid_proto() {$/;"	f	class:caffe::LayerProto
release_sigmoid_proto	caffe.pb.h	/^inline ::caffe::SigmoidProto* LayerProto::release_sigmoid_proto() {$/;"	f	class:caffe::LayerProto
release_snapshot_prefix	caffe.pb.cc	/^::std::string* SolverProto::release_snapshot_prefix() {$/;"	f	class:caffe::SolverProto
release_snapshot_prefix	caffe.pb.h	/^inline ::std::string* SolverProto::release_snapshot_prefix() {$/;"	f	class:caffe::SolverProto
release_softmax_proto	caffe.pb.cc	/^::caffe::SoftmaxProto* LayerProto::release_softmax_proto() {$/;"	f	class:caffe::LayerProto
release_softmax_proto	caffe.pb.h	/^inline ::caffe::SoftmaxProto* LayerProto::release_softmax_proto() {$/;"	f	class:caffe::LayerProto
release_source	caffe.pb.cc	/^::std::string* LoaderProto::release_source() {$/;"	f	class:caffe::LoaderProto
release_source	caffe.pb.h	/^inline ::std::string* LoaderProto::release_source() {$/;"	f	class:caffe::LoaderProto
release_split_proto	caffe.pb.cc	/^::caffe::SplitProto* LayerProto::release_split_proto() {$/;"	f	class:caffe::LayerProto
release_split_proto	caffe.pb.h	/^inline ::caffe::SplitProto* LayerProto::release_split_proto() {$/;"	f	class:caffe::LayerProto
release_state	caffe.pb.cc	/^::caffe::NetState* NetParameter::release_state() {$/;"	f	class:caffe::NetParameter
release_state	caffe.pb.h	/^inline ::caffe::NetState* NetParameter::release_state() {$/;"	f	class:caffe::NetParameter
release_store_proto	caffe.pb.cc	/^::caffe::StoreProto* LayerProto::release_store_proto() {$/;"	f	class:caffe::LayerProto
release_store_proto	caffe.pb.h	/^inline ::caffe::StoreProto* LayerProto::release_store_proto() {$/;"	f	class:caffe::LayerProto
release_strategy	caffe.pb.cc	/^::std::string* SolverProto::release_strategy() {$/;"	f	class:caffe::SolverProto
release_strategy	caffe.pb.h	/^inline ::std::string* SolverProto::release_strategy() {$/;"	f	class:caffe::SolverProto
release_train_net	caffe.pb.cc	/^::std::string* SolverProto::release_train_net() {$/;"	f	class:caffe::SolverProto
release_train_net	caffe.pb.h	/^inline ::std::string* SolverProto::release_train_net() {$/;"	f	class:caffe::SolverProto
release_train_state	caffe.pb.cc	/^::caffe::NetState* SolverProto::release_train_state() {$/;"	f	class:caffe::SolverProto
release_train_state	caffe.pb.h	/^inline ::caffe::NetState* SolverProto::release_train_state() {$/;"	f	class:caffe::SolverProto
release_type	caffe.pb.cc	/^::std::string* FillerParameter::release_type() {$/;"	f	class:caffe::FillerParameter
release_type	caffe.pb.cc	/^::std::string* LayerProto::release_type() {$/;"	f	class:caffe::LayerProto
release_type	caffe.pb.h	/^inline ::std::string* FillerParameter::release_type() {$/;"	f	class:caffe::FillerParameter
release_type	caffe.pb.h	/^inline ::std::string* LayerProto::release_type() {$/;"	f	class:caffe::LayerProto
release_weight	caffe.pb.cc	/^::std::string* ModelUpdateProto::release_weight() {$/;"	f	class:caffe::ModelUpdateProto
release_weight	caffe.pb.cc	/^::std::string* NullUpdateProto::release_weight() {$/;"	f	class:caffe::NullUpdateProto
release_weight	caffe.pb.h	/^inline ::std::string* ModelUpdateProto::release_weight() {$/;"	f	class:caffe::ModelUpdateProto
release_weight	caffe.pb.h	/^inline ::std::string* NullUpdateProto::release_weight() {$/;"	f	class:caffe::NullUpdateProto
release_weight_filler	caffe.pb.cc	/^::caffe::FillerParameter* ConvolutionProto::release_weight_filler() {$/;"	f	class:caffe::ConvolutionProto
release_weight_filler	caffe.pb.cc	/^::caffe::FillerParameter* InnerProductProto::release_weight_filler() {$/;"	f	class:caffe::InnerProductProto
release_weight_filler	caffe.pb.h	/^inline ::caffe::FillerParameter* ConvolutionProto::release_weight_filler() {$/;"	f	class:caffe::ConvolutionProto
release_weight_filler	caffe.pb.h	/^inline ::caffe::FillerParameter* InnerProductProto::release_weight_filler() {$/;"	f	class:caffe::InnerProductProto
relu_proto	caffe.pb.cc	/^const ::caffe::ReLUProto& LayerProto::relu_proto() const {$/;"	f	class:caffe::LayerProto
relu_proto	caffe.pb.h	/^inline const ::caffe::ReLUProto& LayerProto::relu_proto() const {$/;"	f	class:caffe::LayerProto
relu_proto_	caffe.pb.h	/^  ::caffe::ReLUProto* relu_proto_;$/;"	m	class:caffe::LayerProto
resource	caffe.pb.cc	/^const ::std::string& SolverProto::resource() const {$/;"	f	class:caffe::SolverProto
resource	caffe.pb.h	/^inline const ::std::string& SolverProto::resource() const {$/;"	f	class:caffe::SolverProto
resource_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr resource_;$/;"	m	class:caffe::SolverProto
schemas	caffe.pb.cc	/^static const ::google::protobuf::internal::MigrationSchema schemas[] = {$/;"	m	namespace:caffe::protobuf_caffe_2eproto	file:
set_allocated_batchnorm_proto	caffe.pb.cc	/^void LayerProto::set_allocated_batchnorm_proto(::caffe::BatchNormProto* batchnorm_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_batchnorm_proto	caffe.pb.h	/^inline void LayerProto::set_allocated_batchnorm_proto(::caffe::BatchNormProto* batchnorm_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_bias_filler	caffe.pb.cc	/^void ConvolutionProto::set_allocated_bias_filler(::caffe::FillerParameter* bias_filler) {$/;"	f	class:caffe::ConvolutionProto
set_allocated_bias_filler	caffe.pb.cc	/^void InnerProductProto::set_allocated_bias_filler(::caffe::FillerParameter* bias_filler) {$/;"	f	class:caffe::InnerProductProto
set_allocated_bias_filler	caffe.pb.h	/^inline void ConvolutionProto::set_allocated_bias_filler(::caffe::FillerParameter* bias_filler) {$/;"	f	class:caffe::ConvolutionProto
set_allocated_bias_filler	caffe.pb.h	/^inline void InnerProductProto::set_allocated_bias_filler(::caffe::FillerParameter* bias_filler) {$/;"	f	class:caffe::InnerProductProto
set_allocated_byte_data	caffe.pb.cc	/^void BlobProto::set_allocated_byte_data(::std::string* byte_data) {$/;"	f	class:caffe::BlobProto
set_allocated_byte_data	caffe.pb.h	/^inline void BlobProto::set_allocated_byte_data(::std::string* byte_data) {$/;"	f	class:caffe::BlobProto
set_allocated_concat_proto	caffe.pb.cc	/^void LayerProto::set_allocated_concat_proto(::caffe::ConcatProto* concat_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_concat_proto	caffe.pb.h	/^inline void LayerProto::set_allocated_concat_proto(::caffe::ConcatProto* concat_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_convolution_proto	caffe.pb.cc	/^void LayerProto::set_allocated_convolution_proto(::caffe::ConvolutionProto* convolution_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_convolution_proto	caffe.pb.h	/^inline void LayerProto::set_allocated_convolution_proto(::caffe::ConvolutionProto* convolution_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_data	caffe.pb.cc	/^void LoaderProto::set_allocated_data(::std::string* data) {$/;"	f	class:caffe::LoaderProto
set_allocated_data	caffe.pb.cc	/^void MultinomialLogisticLossProto::set_allocated_data(::std::string* data) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_allocated_data	caffe.pb.h	/^inline void LoaderProto::set_allocated_data(::std::string* data) {$/;"	f	class:caffe::LoaderProto
set_allocated_data	caffe.pb.h	/^inline void MultinomialLogisticLossProto::set_allocated_data(::std::string* data) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_allocated_device_group	caffe.pb.cc	/^void PlacementGroup::set_allocated_device_group(::caffe::DeviceGroup* device_group) {$/;"	f	class:caffe::PlacementGroup
set_allocated_device_group	caffe.pb.h	/^inline void PlacementGroup::set_allocated_device_group(::caffe::DeviceGroup* device_group) {$/;"	f	class:caffe::PlacementGroup
set_allocated_device_set	caffe.pb.cc	/^void Machine::set_allocated_device_set(::caffe::DeviceSet* device_set) {$/;"	f	class:caffe::Machine
set_allocated_device_set	caffe.pb.h	/^inline void Machine::set_allocated_device_set(::caffe::DeviceSet* device_set) {$/;"	f	class:caffe::Machine
set_allocated_gradient	caffe.pb.cc	/^void ModelUpdateProto::set_allocated_gradient(::std::string* gradient) {$/;"	f	class:caffe::ModelUpdateProto
set_allocated_gradient	caffe.pb.h	/^inline void ModelUpdateProto::set_allocated_gradient(::std::string* gradient) {$/;"	f	class:caffe::ModelUpdateProto
set_allocated_in	caffe.pb.cc	/^void ConvolutionProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::ConvolutionProto
set_allocated_in	caffe.pb.cc	/^void InnerProductProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::InnerProductProto
set_allocated_in	caffe.pb.cc	/^void LRNProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::LRNProto
set_allocated_in	caffe.pb.cc	/^void PlaceholderProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::PlaceholderProto
set_allocated_in	caffe.pb.cc	/^void PoolingProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::PoolingProto
set_allocated_in	caffe.pb.cc	/^void ReLUProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::ReLUProto
set_allocated_in	caffe.pb.cc	/^void SigmoidProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::SigmoidProto
set_allocated_in	caffe.pb.cc	/^void SoftmaxProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::SoftmaxProto
set_allocated_in	caffe.pb.cc	/^void SplitProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::SplitProto
set_allocated_in	caffe.pb.cc	/^void StoreProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::StoreProto
set_allocated_in	caffe.pb.h	/^inline void ConvolutionProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::ConvolutionProto
set_allocated_in	caffe.pb.h	/^inline void InnerProductProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::InnerProductProto
set_allocated_in	caffe.pb.h	/^inline void LRNProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::LRNProto
set_allocated_in	caffe.pb.h	/^inline void PlaceholderProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::PlaceholderProto
set_allocated_in	caffe.pb.h	/^inline void PoolingProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::PoolingProto
set_allocated_in	caffe.pb.h	/^inline void ReLUProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::ReLUProto
set_allocated_in	caffe.pb.h	/^inline void SigmoidProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::SigmoidProto
set_allocated_in	caffe.pb.h	/^inline void SoftmaxProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::SoftmaxProto
set_allocated_in	caffe.pb.h	/^inline void SplitProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::SplitProto
set_allocated_in	caffe.pb.h	/^inline void StoreProto::set_allocated_in(::std::string* in) {$/;"	f	class:caffe::StoreProto
set_allocated_in_envelope	caffe.pb.cc	/^void NetProto::set_allocated_in_envelope(::std::string* in_envelope) {$/;"	f	class:caffe::NetProto
set_allocated_in_envelope	caffe.pb.h	/^inline void NetProto::set_allocated_in_envelope(::std::string* in_envelope) {$/;"	f	class:caffe::NetProto
set_allocated_innerproduct_proto	caffe.pb.cc	/^void LayerProto::set_allocated_innerproduct_proto(::caffe::InnerProductProto* innerproduct_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_innerproduct_proto	caffe.pb.h	/^inline void LayerProto::set_allocated_innerproduct_proto(::caffe::InnerProductProto* innerproduct_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_label	caffe.pb.cc	/^void LoaderProto::set_allocated_label(::std::string* label) {$/;"	f	class:caffe::LoaderProto
set_allocated_label	caffe.pb.cc	/^void MultinomialLogisticLossProto::set_allocated_label(::std::string* label) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_allocated_label	caffe.pb.h	/^inline void LoaderProto::set_allocated_label(::std::string* label) {$/;"	f	class:caffe::LoaderProto
set_allocated_label	caffe.pb.h	/^inline void MultinomialLogisticLossProto::set_allocated_label(::std::string* label) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_allocated_layer_set	caffe.pb.cc	/^void PlacementGroup::set_allocated_layer_set(::caffe::LayerSet* layer_set) {$/;"	f	class:caffe::PlacementGroup
set_allocated_layer_set	caffe.pb.h	/^inline void PlacementGroup::set_allocated_layer_set(::caffe::LayerSet* layer_set) {$/;"	f	class:caffe::PlacementGroup
set_allocated_learned_net	caffe.pb.cc	/^void SolverState::set_allocated_learned_net(::std::string* learned_net) {$/;"	f	class:caffe::SolverState
set_allocated_learned_net	caffe.pb.h	/^inline void SolverState::set_allocated_learned_net(::std::string* learned_net) {$/;"	f	class:caffe::SolverState
set_allocated_loader_proto	caffe.pb.cc	/^void LayerProto::set_allocated_loader_proto(::caffe::LoaderProto* loader_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_loader_proto	caffe.pb.h	/^inline void LayerProto::set_allocated_loader_proto(::caffe::LoaderProto* loader_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_loadpartialmodel_proto	caffe.pb.cc	/^void LayerProto::set_allocated_loadpartialmodel_proto(::caffe::LoadPartialModelProto* loadpartialmodel_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_loadpartialmodel_proto	caffe.pb.h	/^inline void LayerProto::set_allocated_loadpartialmodel_proto(::caffe::LoadPartialModelProto* loadpartialmodel_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_loss	caffe.pb.cc	/^void MultinomialLogisticLossProto::set_allocated_loss(::std::string* loss) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_allocated_loss	caffe.pb.h	/^inline void MultinomialLogisticLossProto::set_allocated_loss(::std::string* loss) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_allocated_lr_policy	caffe.pb.cc	/^void SolverProto::set_allocated_lr_policy(::std::string* lr_policy) {$/;"	f	class:caffe::SolverProto
set_allocated_lr_policy	caffe.pb.h	/^inline void SolverProto::set_allocated_lr_policy(::std::string* lr_policy) {$/;"	f	class:caffe::SolverProto
set_allocated_lrn_proto	caffe.pb.cc	/^void LayerProto::set_allocated_lrn_proto(::caffe::LRNProto* lrn_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_lrn_proto	caffe.pb.h	/^inline void LayerProto::set_allocated_lrn_proto(::caffe::LRNProto* lrn_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_machine_group	caffe.pb.cc	/^void PlacementGroup::set_allocated_machine_group(::caffe::MachineGroup* machine_group) {$/;"	f	class:caffe::PlacementGroup
set_allocated_machine_group	caffe.pb.h	/^inline void PlacementGroup::set_allocated_machine_group(::caffe::MachineGroup* machine_group) {$/;"	f	class:caffe::PlacementGroup
set_allocated_modelupdate_proto	caffe.pb.cc	/^void LayerProto::set_allocated_modelupdate_proto(::caffe::ModelUpdateProto* modelupdate_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_modelupdate_proto	caffe.pb.h	/^inline void LayerProto::set_allocated_modelupdate_proto(::caffe::ModelUpdateProto* modelupdate_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_multinomiallogisticloss_proto	caffe.pb.cc	/^void LayerProto::set_allocated_multinomiallogisticloss_proto(::caffe::MultinomialLogisticLossProto* multinomiallogisticloss_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_multinomiallogisticloss_proto	caffe.pb.h	/^inline void LayerProto::set_allocated_multinomiallogisticloss_proto(::caffe::MultinomialLogisticLossProto* multinomiallogisticloss_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_name	caffe.pb.cc	/^void BlobProto::set_allocated_name(::std::string* name) {$/;"	f	class:caffe::BlobProto
set_allocated_name	caffe.pb.cc	/^void LayerProto::set_allocated_name(::std::string* name) {$/;"	f	class:caffe::LayerProto
set_allocated_name	caffe.pb.cc	/^void Machine::set_allocated_name(::std::string* name) {$/;"	f	class:caffe::Machine
set_allocated_name	caffe.pb.cc	/^void NetParameter::set_allocated_name(::std::string* name) {$/;"	f	class:caffe::NetParameter
set_allocated_name	caffe.pb.cc	/^void ParamSpec::set_allocated_name(::std::string* name) {$/;"	f	class:caffe::ParamSpec
set_allocated_name	caffe.pb.cc	/^void PlacementGroup::set_allocated_name(::std::string* name) {$/;"	f	class:caffe::PlacementGroup
set_allocated_name	caffe.pb.h	/^inline void BlobProto::set_allocated_name(::std::string* name) {$/;"	f	class:caffe::BlobProto
set_allocated_name	caffe.pb.h	/^inline void LayerProto::set_allocated_name(::std::string* name) {$/;"	f	class:caffe::LayerProto
set_allocated_name	caffe.pb.h	/^inline void Machine::set_allocated_name(::std::string* name) {$/;"	f	class:caffe::Machine
set_allocated_name	caffe.pb.h	/^inline void NetParameter::set_allocated_name(::std::string* name) {$/;"	f	class:caffe::NetParameter
set_allocated_name	caffe.pb.h	/^inline void ParamSpec::set_allocated_name(::std::string* name) {$/;"	f	class:caffe::ParamSpec
set_allocated_name	caffe.pb.h	/^inline void PlacementGroup::set_allocated_name(::std::string* name) {$/;"	f	class:caffe::PlacementGroup
set_allocated_nullupdate_proto	caffe.pb.cc	/^void LayerProto::set_allocated_nullupdate_proto(::caffe::NullUpdateProto* nullupdate_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_nullupdate_proto	caffe.pb.h	/^inline void LayerProto::set_allocated_nullupdate_proto(::caffe::NullUpdateProto* nullupdate_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_old_weight	caffe.pb.cc	/^void ModelUpdateProto::set_allocated_old_weight(::std::string* old_weight) {$/;"	f	class:caffe::ModelUpdateProto
set_allocated_old_weight	caffe.pb.h	/^inline void ModelUpdateProto::set_allocated_old_weight(::std::string* old_weight) {$/;"	f	class:caffe::ModelUpdateProto
set_allocated_out	caffe.pb.cc	/^void ConcatProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::ConcatProto
set_allocated_out	caffe.pb.cc	/^void ConvolutionProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::ConvolutionProto
set_allocated_out	caffe.pb.cc	/^void InnerProductProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::InnerProductProto
set_allocated_out	caffe.pb.cc	/^void LRNProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::LRNProto
set_allocated_out	caffe.pb.cc	/^void LoadPartialModelProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::LoadPartialModelProto
set_allocated_out	caffe.pb.cc	/^void PlaceholderProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::PlaceholderProto
set_allocated_out	caffe.pb.cc	/^void PoolingProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::PoolingProto
set_allocated_out	caffe.pb.cc	/^void ReLUProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::ReLUProto
set_allocated_out	caffe.pb.cc	/^void SigmoidProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::SigmoidProto
set_allocated_out	caffe.pb.cc	/^void SoftmaxProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::SoftmaxProto
set_allocated_out	caffe.pb.cc	/^void StoreProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::StoreProto
set_allocated_out	caffe.pb.h	/^inline void ConcatProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::ConcatProto
set_allocated_out	caffe.pb.h	/^inline void ConvolutionProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::ConvolutionProto
set_allocated_out	caffe.pb.h	/^inline void InnerProductProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::InnerProductProto
set_allocated_out	caffe.pb.h	/^inline void LRNProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::LRNProto
set_allocated_out	caffe.pb.h	/^inline void LoadPartialModelProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::LoadPartialModelProto
set_allocated_out	caffe.pb.h	/^inline void PlaceholderProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::PlaceholderProto
set_allocated_out	caffe.pb.h	/^inline void PoolingProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::PoolingProto
set_allocated_out	caffe.pb.h	/^inline void ReLUProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::ReLUProto
set_allocated_out	caffe.pb.h	/^inline void SigmoidProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::SigmoidProto
set_allocated_out	caffe.pb.h	/^inline void SoftmaxProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::SoftmaxProto
set_allocated_out	caffe.pb.h	/^inline void StoreProto::set_allocated_out(::std::string* out) {$/;"	f	class:caffe::StoreProto
set_allocated_out_envelope	caffe.pb.cc	/^void NetProto::set_allocated_out_envelope(::std::string* out_envelope) {$/;"	f	class:caffe::NetProto
set_allocated_out_envelope	caffe.pb.h	/^inline void NetProto::set_allocated_out_envelope(::std::string* out_envelope) {$/;"	f	class:caffe::NetProto
set_allocated_placeholder_proto	caffe.pb.cc	/^void LayerProto::set_allocated_placeholder_proto(::caffe::PlaceholderProto* placeholder_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_placeholder_proto	caffe.pb.h	/^inline void LayerProto::set_allocated_placeholder_proto(::caffe::PlaceholderProto* placeholder_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_pooling_proto	caffe.pb.cc	/^void LayerProto::set_allocated_pooling_proto(::caffe::PoolingProto* pooling_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_pooling_proto	caffe.pb.h	/^inline void LayerProto::set_allocated_pooling_proto(::caffe::PoolingProto* pooling_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_port	caffe.pb.cc	/^void Machine::set_allocated_port(::std::string* port) {$/;"	f	class:caffe::Machine
set_allocated_port	caffe.pb.h	/^inline void Machine::set_allocated_port(::std::string* port) {$/;"	f	class:caffe::Machine
set_allocated_regularization_type	caffe.pb.cc	/^void SolverProto::set_allocated_regularization_type(::std::string* regularization_type) {$/;"	f	class:caffe::SolverProto
set_allocated_regularization_type	caffe.pb.h	/^inline void SolverProto::set_allocated_regularization_type(::std::string* regularization_type) {$/;"	f	class:caffe::SolverProto
set_allocated_relu_proto	caffe.pb.cc	/^void LayerProto::set_allocated_relu_proto(::caffe::ReLUProto* relu_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_relu_proto	caffe.pb.h	/^inline void LayerProto::set_allocated_relu_proto(::caffe::ReLUProto* relu_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_resource	caffe.pb.cc	/^void SolverProto::set_allocated_resource(::std::string* resource) {$/;"	f	class:caffe::SolverProto
set_allocated_resource	caffe.pb.h	/^inline void SolverProto::set_allocated_resource(::std::string* resource) {$/;"	f	class:caffe::SolverProto
set_allocated_sigmoid_proto	caffe.pb.cc	/^void LayerProto::set_allocated_sigmoid_proto(::caffe::SigmoidProto* sigmoid_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_sigmoid_proto	caffe.pb.h	/^inline void LayerProto::set_allocated_sigmoid_proto(::caffe::SigmoidProto* sigmoid_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_snapshot_prefix	caffe.pb.cc	/^void SolverProto::set_allocated_snapshot_prefix(::std::string* snapshot_prefix) {$/;"	f	class:caffe::SolverProto
set_allocated_snapshot_prefix	caffe.pb.h	/^inline void SolverProto::set_allocated_snapshot_prefix(::std::string* snapshot_prefix) {$/;"	f	class:caffe::SolverProto
set_allocated_softmax_proto	caffe.pb.cc	/^void LayerProto::set_allocated_softmax_proto(::caffe::SoftmaxProto* softmax_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_softmax_proto	caffe.pb.h	/^inline void LayerProto::set_allocated_softmax_proto(::caffe::SoftmaxProto* softmax_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_source	caffe.pb.cc	/^void LoaderProto::set_allocated_source(::std::string* source) {$/;"	f	class:caffe::LoaderProto
set_allocated_source	caffe.pb.h	/^inline void LoaderProto::set_allocated_source(::std::string* source) {$/;"	f	class:caffe::LoaderProto
set_allocated_split_proto	caffe.pb.cc	/^void LayerProto::set_allocated_split_proto(::caffe::SplitProto* split_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_split_proto	caffe.pb.h	/^inline void LayerProto::set_allocated_split_proto(::caffe::SplitProto* split_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_state	caffe.pb.cc	/^void NetParameter::set_allocated_state(::caffe::NetState* state) {$/;"	f	class:caffe::NetParameter
set_allocated_state	caffe.pb.h	/^inline void NetParameter::set_allocated_state(::caffe::NetState* state) {$/;"	f	class:caffe::NetParameter
set_allocated_store_proto	caffe.pb.cc	/^void LayerProto::set_allocated_store_proto(::caffe::StoreProto* store_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_store_proto	caffe.pb.h	/^inline void LayerProto::set_allocated_store_proto(::caffe::StoreProto* store_proto) {$/;"	f	class:caffe::LayerProto
set_allocated_strategy	caffe.pb.cc	/^void SolverProto::set_allocated_strategy(::std::string* strategy) {$/;"	f	class:caffe::SolverProto
set_allocated_strategy	caffe.pb.h	/^inline void SolverProto::set_allocated_strategy(::std::string* strategy) {$/;"	f	class:caffe::SolverProto
set_allocated_train_net	caffe.pb.cc	/^void SolverProto::set_allocated_train_net(::std::string* train_net) {$/;"	f	class:caffe::SolverProto
set_allocated_train_net	caffe.pb.h	/^inline void SolverProto::set_allocated_train_net(::std::string* train_net) {$/;"	f	class:caffe::SolverProto
set_allocated_train_state	caffe.pb.cc	/^void SolverProto::set_allocated_train_state(::caffe::NetState* train_state) {$/;"	f	class:caffe::SolverProto
set_allocated_train_state	caffe.pb.h	/^inline void SolverProto::set_allocated_train_state(::caffe::NetState* train_state) {$/;"	f	class:caffe::SolverProto
set_allocated_type	caffe.pb.cc	/^void FillerParameter::set_allocated_type(::std::string* type) {$/;"	f	class:caffe::FillerParameter
set_allocated_type	caffe.pb.cc	/^void LayerProto::set_allocated_type(::std::string* type) {$/;"	f	class:caffe::LayerProto
set_allocated_type	caffe.pb.h	/^inline void FillerParameter::set_allocated_type(::std::string* type) {$/;"	f	class:caffe::FillerParameter
set_allocated_type	caffe.pb.h	/^inline void LayerProto::set_allocated_type(::std::string* type) {$/;"	f	class:caffe::LayerProto
set_allocated_weight	caffe.pb.cc	/^void ModelUpdateProto::set_allocated_weight(::std::string* weight) {$/;"	f	class:caffe::ModelUpdateProto
set_allocated_weight	caffe.pb.cc	/^void NullUpdateProto::set_allocated_weight(::std::string* weight) {$/;"	f	class:caffe::NullUpdateProto
set_allocated_weight	caffe.pb.h	/^inline void ModelUpdateProto::set_allocated_weight(::std::string* weight) {$/;"	f	class:caffe::ModelUpdateProto
set_allocated_weight	caffe.pb.h	/^inline void NullUpdateProto::set_allocated_weight(::std::string* weight) {$/;"	f	class:caffe::NullUpdateProto
set_allocated_weight_filler	caffe.pb.cc	/^void ConvolutionProto::set_allocated_weight_filler(::caffe::FillerParameter* weight_filler) {$/;"	f	class:caffe::ConvolutionProto
set_allocated_weight_filler	caffe.pb.cc	/^void InnerProductProto::set_allocated_weight_filler(::caffe::FillerParameter* weight_filler) {$/;"	f	class:caffe::InnerProductProto
set_allocated_weight_filler	caffe.pb.h	/^inline void ConvolutionProto::set_allocated_weight_filler(::caffe::FillerParameter* weight_filler) {$/;"	f	class:caffe::ConvolutionProto
set_allocated_weight_filler	caffe.pb.h	/^inline void InnerProductProto::set_allocated_weight_filler(::caffe::FillerParameter* weight_filler) {$/;"	f	class:caffe::InnerProductProto
set_alpha	caffe.pb.cc	/^void LRNProto::set_alpha(float value) {$/;"	f	class:caffe::LRNProto
set_alpha	caffe.pb.h	/^inline void LRNProto::set_alpha(float value) {$/;"	f	class:caffe::LRNProto
set_average_loss	caffe.pb.cc	/^void SolverProto::set_average_loss(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_average_loss	caffe.pb.h	/^inline void SolverProto::set_average_loss(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_axis	caffe.pb.cc	/^void ConcatProto::set_axis(::google::protobuf::int32 value) {$/;"	f	class:caffe::ConcatProto
set_axis	caffe.pb.cc	/^void InnerProductProto::set_axis(::google::protobuf::int32 value) {$/;"	f	class:caffe::InnerProductProto
set_axis	caffe.pb.cc	/^void SoftmaxProto::set_axis(::google::protobuf::int32 value) {$/;"	f	class:caffe::SoftmaxProto
set_axis	caffe.pb.h	/^inline void ConcatProto::set_axis(::google::protobuf::int32 value) {$/;"	f	class:caffe::ConcatProto
set_axis	caffe.pb.h	/^inline void InnerProductProto::set_axis(::google::protobuf::int32 value) {$/;"	f	class:caffe::InnerProductProto
set_axis	caffe.pb.h	/^inline void SoftmaxProto::set_axis(::google::protobuf::int32 value) {$/;"	f	class:caffe::SoftmaxProto
set_backward_in_op	caffe.pb.cc	/^void BoxingProto::set_backward_in_op(::caffe::BoxingOp value) {$/;"	f	class:caffe::BoxingProto
set_backward_in_op	caffe.pb.h	/^inline void BoxingProto::set_backward_in_op(::caffe::BoxingOp value) {$/;"	f	class:caffe::BoxingProto
set_backward_out_op	caffe.pb.cc	/^void BoxingProto::set_backward_out_op(::caffe::BoxingOp value) {$/;"	f	class:caffe::BoxingProto
set_backward_out_op	caffe.pb.h	/^inline void BoxingProto::set_backward_out_op(::caffe::BoxingOp value) {$/;"	f	class:caffe::BoxingProto
set_base_lr	caffe.pb.cc	/^void SolverProto::set_base_lr(float value) {$/;"	f	class:caffe::SolverProto
set_base_lr	caffe.pb.h	/^inline void SolverProto::set_base_lr(float value) {$/;"	f	class:caffe::SolverProto
set_begin	caffe.pb.cc	/^void DeviceGroup::set_begin(::google::protobuf::int32 value) {$/;"	f	class:caffe::DeviceGroup
set_begin	caffe.pb.cc	/^void MachineGroup::set_begin(::google::protobuf::int32 value) {$/;"	f	class:caffe::MachineGroup
set_begin	caffe.pb.h	/^inline void DeviceGroup::set_begin(::google::protobuf::int32 value) {$/;"	f	class:caffe::DeviceGroup
set_begin	caffe.pb.h	/^inline void MachineGroup::set_begin(::google::protobuf::int32 value) {$/;"	f	class:caffe::MachineGroup
set_beta	caffe.pb.cc	/^void LRNProto::set_beta(float value) {$/;"	f	class:caffe::LRNProto
set_beta	caffe.pb.h	/^inline void LRNProto::set_beta(float value) {$/;"	f	class:caffe::LRNProto
set_bias_term	caffe.pb.cc	/^void ConvolutionProto::set_bias_term(bool value) {$/;"	f	class:caffe::ConvolutionProto
set_bias_term	caffe.pb.cc	/^void InnerProductProto::set_bias_term(bool value) {$/;"	f	class:caffe::InnerProductProto
set_bias_term	caffe.pb.h	/^inline void ConvolutionProto::set_bias_term(bool value) {$/;"	f	class:caffe::ConvolutionProto
set_bias_term	caffe.pb.h	/^inline void InnerProductProto::set_bias_term(bool value) {$/;"	f	class:caffe::InnerProductProto
set_byte_data	caffe.pb.cc	/^void BlobProto::set_byte_data(::std::string&& value) {$/;"	f	class:caffe::BlobProto
set_byte_data	caffe.pb.cc	/^void BlobProto::set_byte_data(const ::std::string& value) {$/;"	f	class:caffe::BlobProto
set_byte_data	caffe.pb.cc	/^void BlobProto::set_byte_data(const char* value) {$/;"	f	class:caffe::BlobProto
set_byte_data	caffe.pb.cc	/^void BlobProto::set_byte_data(const void* value, size_t size) {$/;"	f	class:caffe::BlobProto
set_byte_data	caffe.pb.h	/^inline void BlobProto::set_byte_data(::std::string&& value) {$/;"	f	class:caffe::BlobProto
set_byte_data	caffe.pb.h	/^inline void BlobProto::set_byte_data(const ::std::string& value) {$/;"	f	class:caffe::BlobProto
set_byte_data	caffe.pb.h	/^inline void BlobProto::set_byte_data(const char* value) {$/;"	f	class:caffe::BlobProto
set_byte_data	caffe.pb.h	/^inline void BlobProto::set_byte_data(const void* value, size_t size) {$/;"	f	class:caffe::BlobProto
set_channel	caffe.pb.cc	/^void LoaderProto::set_channel(::google::protobuf::uint32 value) {$/;"	f	class:caffe::LoaderProto
set_channel	caffe.pb.h	/^inline void LoaderProto::set_channel(::google::protobuf::uint32 value) {$/;"	f	class:caffe::LoaderProto
set_clip_gradients	caffe.pb.cc	/^void SolverProto::set_clip_gradients(float value) {$/;"	f	class:caffe::SolverProto
set_clip_gradients	caffe.pb.h	/^inline void SolverProto::set_clip_gradients(float value) {$/;"	f	class:caffe::SolverProto
set_copy_type	caffe.pb.cc	/^void CopyProto::set_copy_type(::caffe::CopyType value) {$/;"	f	class:caffe::CopyProto
set_copy_type	caffe.pb.h	/^inline void CopyProto::set_copy_type(::caffe::CopyType value) {$/;"	f	class:caffe::CopyProto
set_current_step	caffe.pb.cc	/^void SolverState::set_current_step(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverState
set_current_step	caffe.pb.h	/^inline void SolverState::set_current_step(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverState
set_data	caffe.pb.cc	/^void LoaderProto::set_data(::std::string&& value) {$/;"	f	class:caffe::LoaderProto
set_data	caffe.pb.cc	/^void LoaderProto::set_data(const ::std::string& value) {$/;"	f	class:caffe::LoaderProto
set_data	caffe.pb.cc	/^void LoaderProto::set_data(const char* value) {$/;"	f	class:caffe::LoaderProto
set_data	caffe.pb.cc	/^void LoaderProto::set_data(const char* value, size_t size) {$/;"	f	class:caffe::LoaderProto
set_data	caffe.pb.cc	/^void MultinomialLogisticLossProto::set_data(::std::string&& value) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_data	caffe.pb.cc	/^void MultinomialLogisticLossProto::set_data(const ::std::string& value) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_data	caffe.pb.cc	/^void MultinomialLogisticLossProto::set_data(const char* value) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_data	caffe.pb.cc	/^void MultinomialLogisticLossProto::set_data(const char* value, size_t size) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_data	caffe.pb.h	/^inline void LoaderProto::set_data(::std::string&& value) {$/;"	f	class:caffe::LoaderProto
set_data	caffe.pb.h	/^inline void LoaderProto::set_data(const ::std::string& value) {$/;"	f	class:caffe::LoaderProto
set_data	caffe.pb.h	/^inline void LoaderProto::set_data(const char* value) {$/;"	f	class:caffe::LoaderProto
set_data	caffe.pb.h	/^inline void LoaderProto::set_data(const char* value, size_t size) {$/;"	f	class:caffe::LoaderProto
set_data	caffe.pb.h	/^inline void MultinomialLogisticLossProto::set_data(::std::string&& value) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_data	caffe.pb.h	/^inline void MultinomialLogisticLossProto::set_data(const ::std::string& value) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_data	caffe.pb.h	/^inline void MultinomialLogisticLossProto::set_data(const char* value) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_data	caffe.pb.h	/^inline void MultinomialLogisticLossProto::set_data(const char* value, size_t size) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_data_type	caffe.pb.cc	/^void BlobProto::set_data_type(::caffe::BlobProto_DataType value) {$/;"	f	class:caffe::BlobProto
set_data_type	caffe.pb.h	/^inline void BlobProto::set_data_type(::caffe::BlobProto_DataType value) {$/;"	f	class:caffe::BlobProto
set_debug_info	caffe.pb.cc	/^void NetParameter::set_debug_info(bool value) {$/;"	f	class:caffe::NetParameter
set_debug_info	caffe.pb.cc	/^void SolverProto::set_debug_info(bool value) {$/;"	f	class:caffe::SolverProto
set_debug_info	caffe.pb.h	/^inline void NetParameter::set_debug_info(bool value) {$/;"	f	class:caffe::NetParameter
set_debug_info	caffe.pb.h	/^inline void SolverProto::set_debug_info(bool value) {$/;"	f	class:caffe::SolverProto
set_decay_mult	caffe.pb.cc	/^void ParamSpec::set_decay_mult(float value) {$/;"	f	class:caffe::ParamSpec
set_decay_mult	caffe.pb.h	/^inline void ParamSpec::set_decay_mult(float value) {$/;"	f	class:caffe::ParamSpec
set_delta	caffe.pb.cc	/^void SolverProto::set_delta(float value) {$/;"	f	class:caffe::SolverProto
set_delta	caffe.pb.h	/^inline void SolverProto::set_delta(float value) {$/;"	f	class:caffe::SolverProto
set_device_id	caffe.pb.cc	/^void DeviceSet::set_device_id(int index, ::google::protobuf::int32 value) {$/;"	f	class:caffe::DeviceSet
set_device_id	caffe.pb.h	/^inline void DeviceSet::set_device_id(int index, ::google::protobuf::int32 value) {$/;"	f	class:caffe::DeviceSet
set_dim	caffe.pb.cc	/^void BlobShape::set_dim(int index, ::google::protobuf::int64 value) {$/;"	f	class:caffe::BlobShape
set_dim	caffe.pb.h	/^inline void BlobShape::set_dim(int index, ::google::protobuf::int64 value) {$/;"	f	class:caffe::BlobShape
set_display	caffe.pb.cc	/^void SolverProto::set_display(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_display	caffe.pb.h	/^inline void SolverProto::set_display(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_double_data	caffe.pb.cc	/^void BlobProto::set_double_data(int index, double value) {$/;"	f	class:caffe::BlobProto
set_double_data	caffe.pb.h	/^inline void BlobProto::set_double_data(int index, double value) {$/;"	f	class:caffe::BlobProto
set_end	caffe.pb.cc	/^void DeviceGroup::set_end(::google::protobuf::int32 value) {$/;"	f	class:caffe::DeviceGroup
set_end	caffe.pb.cc	/^void MachineGroup::set_end(::google::protobuf::int32 value) {$/;"	f	class:caffe::MachineGroup
set_end	caffe.pb.h	/^inline void DeviceGroup::set_end(::google::protobuf::int32 value) {$/;"	f	class:caffe::DeviceGroup
set_end	caffe.pb.h	/^inline void MachineGroup::set_end(::google::protobuf::int32 value) {$/;"	f	class:caffe::MachineGroup
set_engine	caffe.pb.cc	/^void ConvolutionProto::set_engine(::caffe::ConvolutionProto_Engine value) {$/;"	f	class:caffe::ConvolutionProto
set_engine	caffe.pb.cc	/^void LRNProto::set_engine(::caffe::LRNProto_Engine value) {$/;"	f	class:caffe::LRNProto
set_engine	caffe.pb.cc	/^void PoolingProto::set_engine(::caffe::PoolingProto_Engine value) {$/;"	f	class:caffe::PoolingProto
set_engine	caffe.pb.cc	/^void ReLUProto::set_engine(::caffe::ReLUProto_Engine value) {$/;"	f	class:caffe::ReLUProto
set_engine	caffe.pb.cc	/^void SigmoidProto::set_engine(::caffe::SigmoidProto_Engine value) {$/;"	f	class:caffe::SigmoidProto
set_engine	caffe.pb.cc	/^void SoftmaxProto::set_engine(::caffe::SoftmaxProto_Engine value) {$/;"	f	class:caffe::SoftmaxProto
set_engine	caffe.pb.cc	/^void StoreProto::set_engine(::caffe::StoreProto_Engine value) {$/;"	f	class:caffe::StoreProto
set_engine	caffe.pb.h	/^inline void ConvolutionProto::set_engine(::caffe::ConvolutionProto_Engine value) {$/;"	f	class:caffe::ConvolutionProto
set_engine	caffe.pb.h	/^inline void LRNProto::set_engine(::caffe::LRNProto_Engine value) {$/;"	f	class:caffe::LRNProto
set_engine	caffe.pb.h	/^inline void PoolingProto::set_engine(::caffe::PoolingProto_Engine value) {$/;"	f	class:caffe::PoolingProto
set_engine	caffe.pb.h	/^inline void ReLUProto::set_engine(::caffe::ReLUProto_Engine value) {$/;"	f	class:caffe::ReLUProto
set_engine	caffe.pb.h	/^inline void SigmoidProto::set_engine(::caffe::SigmoidProto_Engine value) {$/;"	f	class:caffe::SigmoidProto
set_engine	caffe.pb.h	/^inline void SoftmaxProto::set_engine(::caffe::SoftmaxProto_Engine value) {$/;"	f	class:caffe::SoftmaxProto
set_engine	caffe.pb.h	/^inline void StoreProto::set_engine(::caffe::StoreProto_Engine value) {$/;"	f	class:caffe::StoreProto
set_eps	caffe.pb.cc	/^void BatchNormProto::set_eps(float value) {$/;"	f	class:caffe::BatchNormProto
set_eps	caffe.pb.h	/^inline void BatchNormProto::set_eps(float value) {$/;"	f	class:caffe::BatchNormProto
set_float_data	caffe.pb.cc	/^void BlobProto::set_float_data(int index, float value) {$/;"	f	class:caffe::BlobProto
set_float_data	caffe.pb.h	/^inline void BlobProto::set_float_data(int index, float value) {$/;"	f	class:caffe::BlobProto
set_force_backward	caffe.pb.cc	/^void NetParameter::set_force_backward(bool value) {$/;"	f	class:caffe::NetParameter
set_force_backward	caffe.pb.h	/^inline void NetParameter::set_force_backward(bool value) {$/;"	f	class:caffe::NetParameter
set_forward_is_sender	caffe.pb.cc	/^void NetProto::set_forward_is_sender(bool value) {$/;"	f	class:caffe::NetProto
set_forward_is_sender	caffe.pb.h	/^inline void NetProto::set_forward_is_sender(bool value) {$/;"	f	class:caffe::NetProto
set_gamma	caffe.pb.cc	/^void SolverProto::set_gamma(float value) {$/;"	f	class:caffe::SolverProto
set_gamma	caffe.pb.h	/^inline void SolverProto::set_gamma(float value) {$/;"	f	class:caffe::SolverProto
set_global_pooling	caffe.pb.cc	/^void PoolingProto::set_global_pooling(bool value) {$/;"	f	class:caffe::PoolingProto
set_global_pooling	caffe.pb.h	/^inline void PoolingProto::set_global_pooling(bool value) {$/;"	f	class:caffe::PoolingProto
set_gradient	caffe.pb.cc	/^void ModelUpdateProto::set_gradient(::std::string&& value) {$/;"	f	class:caffe::ModelUpdateProto
set_gradient	caffe.pb.cc	/^void ModelUpdateProto::set_gradient(const ::std::string& value) {$/;"	f	class:caffe::ModelUpdateProto
set_gradient	caffe.pb.cc	/^void ModelUpdateProto::set_gradient(const char* value) {$/;"	f	class:caffe::ModelUpdateProto
set_gradient	caffe.pb.cc	/^void ModelUpdateProto::set_gradient(const char* value, size_t size) {$/;"	f	class:caffe::ModelUpdateProto
set_gradient	caffe.pb.h	/^inline void ModelUpdateProto::set_gradient(::std::string&& value) {$/;"	f	class:caffe::ModelUpdateProto
set_gradient	caffe.pb.h	/^inline void ModelUpdateProto::set_gradient(const ::std::string& value) {$/;"	f	class:caffe::ModelUpdateProto
set_gradient	caffe.pb.h	/^inline void ModelUpdateProto::set_gradient(const char* value) {$/;"	f	class:caffe::ModelUpdateProto
set_gradient	caffe.pb.h	/^inline void ModelUpdateProto::set_gradient(const char* value, size_t size) {$/;"	f	class:caffe::ModelUpdateProto
set_group	caffe.pb.cc	/^void ConvolutionProto::set_group(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_group	caffe.pb.h	/^inline void ConvolutionProto::set_group(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_has_alpha	caffe.pb.cc	/^void LRNProto::set_has_alpha() {$/;"	f	class:caffe::LRNProto
set_has_alpha	caffe.pb.h	/^inline void LRNProto::set_has_alpha() {$/;"	f	class:caffe::LRNProto
set_has_average_loss	caffe.pb.cc	/^void SolverProto::set_has_average_loss() {$/;"	f	class:caffe::SolverProto
set_has_average_loss	caffe.pb.h	/^inline void SolverProto::set_has_average_loss() {$/;"	f	class:caffe::SolverProto
set_has_axis	caffe.pb.cc	/^void ConcatProto::set_has_axis() {$/;"	f	class:caffe::ConcatProto
set_has_axis	caffe.pb.cc	/^void InnerProductProto::set_has_axis() {$/;"	f	class:caffe::InnerProductProto
set_has_axis	caffe.pb.cc	/^void SoftmaxProto::set_has_axis() {$/;"	f	class:caffe::SoftmaxProto
set_has_axis	caffe.pb.h	/^inline void ConcatProto::set_has_axis() {$/;"	f	class:caffe::ConcatProto
set_has_axis	caffe.pb.h	/^inline void InnerProductProto::set_has_axis() {$/;"	f	class:caffe::InnerProductProto
set_has_axis	caffe.pb.h	/^inline void SoftmaxProto::set_has_axis() {$/;"	f	class:caffe::SoftmaxProto
set_has_backward_in_op	caffe.pb.cc	/^void BoxingProto::set_has_backward_in_op() {$/;"	f	class:caffe::BoxingProto
set_has_backward_in_op	caffe.pb.h	/^inline void BoxingProto::set_has_backward_in_op() {$/;"	f	class:caffe::BoxingProto
set_has_backward_out_op	caffe.pb.cc	/^void BoxingProto::set_has_backward_out_op() {$/;"	f	class:caffe::BoxingProto
set_has_backward_out_op	caffe.pb.h	/^inline void BoxingProto::set_has_backward_out_op() {$/;"	f	class:caffe::BoxingProto
set_has_base_lr	caffe.pb.cc	/^void SolverProto::set_has_base_lr() {$/;"	f	class:caffe::SolverProto
set_has_base_lr	caffe.pb.h	/^inline void SolverProto::set_has_base_lr() {$/;"	f	class:caffe::SolverProto
set_has_batchnorm_proto	caffe.pb.cc	/^void LayerProto::set_has_batchnorm_proto() {$/;"	f	class:caffe::LayerProto
set_has_batchnorm_proto	caffe.pb.h	/^inline void LayerProto::set_has_batchnorm_proto() {$/;"	f	class:caffe::LayerProto
set_has_begin	caffe.pb.cc	/^void DeviceGroup::set_has_begin() {$/;"	f	class:caffe::DeviceGroup
set_has_begin	caffe.pb.cc	/^void MachineGroup::set_has_begin() {$/;"	f	class:caffe::MachineGroup
set_has_begin	caffe.pb.h	/^inline void DeviceGroup::set_has_begin() {$/;"	f	class:caffe::DeviceGroup
set_has_begin	caffe.pb.h	/^inline void MachineGroup::set_has_begin() {$/;"	f	class:caffe::MachineGroup
set_has_beta	caffe.pb.cc	/^void LRNProto::set_has_beta() {$/;"	f	class:caffe::LRNProto
set_has_beta	caffe.pb.h	/^inline void LRNProto::set_has_beta() {$/;"	f	class:caffe::LRNProto
set_has_bias_filler	caffe.pb.cc	/^void ConvolutionProto::set_has_bias_filler() {$/;"	f	class:caffe::ConvolutionProto
set_has_bias_filler	caffe.pb.cc	/^void InnerProductProto::set_has_bias_filler() {$/;"	f	class:caffe::InnerProductProto
set_has_bias_filler	caffe.pb.h	/^inline void ConvolutionProto::set_has_bias_filler() {$/;"	f	class:caffe::ConvolutionProto
set_has_bias_filler	caffe.pb.h	/^inline void InnerProductProto::set_has_bias_filler() {$/;"	f	class:caffe::InnerProductProto
set_has_bias_term	caffe.pb.cc	/^void ConvolutionProto::set_has_bias_term() {$/;"	f	class:caffe::ConvolutionProto
set_has_bias_term	caffe.pb.cc	/^void InnerProductProto::set_has_bias_term() {$/;"	f	class:caffe::InnerProductProto
set_has_bias_term	caffe.pb.h	/^inline void ConvolutionProto::set_has_bias_term() {$/;"	f	class:caffe::ConvolutionProto
set_has_bias_term	caffe.pb.h	/^inline void InnerProductProto::set_has_bias_term() {$/;"	f	class:caffe::InnerProductProto
set_has_byte_data	caffe.pb.cc	/^void BlobProto::set_has_byte_data() {$/;"	f	class:caffe::BlobProto
set_has_byte_data	caffe.pb.h	/^inline void BlobProto::set_has_byte_data() {$/;"	f	class:caffe::BlobProto
set_has_channel	caffe.pb.cc	/^void LoaderProto::set_has_channel() {$/;"	f	class:caffe::LoaderProto
set_has_channel	caffe.pb.h	/^inline void LoaderProto::set_has_channel() {$/;"	f	class:caffe::LoaderProto
set_has_clip_gradients	caffe.pb.cc	/^void SolverProto::set_has_clip_gradients() {$/;"	f	class:caffe::SolverProto
set_has_clip_gradients	caffe.pb.h	/^inline void SolverProto::set_has_clip_gradients() {$/;"	f	class:caffe::SolverProto
set_has_concat_proto	caffe.pb.cc	/^void LayerProto::set_has_concat_proto() {$/;"	f	class:caffe::LayerProto
set_has_concat_proto	caffe.pb.h	/^inline void LayerProto::set_has_concat_proto() {$/;"	f	class:caffe::LayerProto
set_has_convolution_proto	caffe.pb.cc	/^void LayerProto::set_has_convolution_proto() {$/;"	f	class:caffe::LayerProto
set_has_convolution_proto	caffe.pb.h	/^inline void LayerProto::set_has_convolution_proto() {$/;"	f	class:caffe::LayerProto
set_has_copy_type	caffe.pb.cc	/^void CopyProto::set_has_copy_type() {$/;"	f	class:caffe::CopyProto
set_has_copy_type	caffe.pb.h	/^inline void CopyProto::set_has_copy_type() {$/;"	f	class:caffe::CopyProto
set_has_current_step	caffe.pb.cc	/^void SolverState::set_has_current_step() {$/;"	f	class:caffe::SolverState
set_has_current_step	caffe.pb.h	/^inline void SolverState::set_has_current_step() {$/;"	f	class:caffe::SolverState
set_has_data	caffe.pb.cc	/^void LoaderProto::set_has_data() {$/;"	f	class:caffe::LoaderProto
set_has_data	caffe.pb.cc	/^void MultinomialLogisticLossProto::set_has_data() {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_has_data	caffe.pb.h	/^inline void LoaderProto::set_has_data() {$/;"	f	class:caffe::LoaderProto
set_has_data	caffe.pb.h	/^inline void MultinomialLogisticLossProto::set_has_data() {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_has_data_type	caffe.pb.cc	/^void BlobProto::set_has_data_type() {$/;"	f	class:caffe::BlobProto
set_has_data_type	caffe.pb.h	/^inline void BlobProto::set_has_data_type() {$/;"	f	class:caffe::BlobProto
set_has_debug_info	caffe.pb.cc	/^void NetParameter::set_has_debug_info() {$/;"	f	class:caffe::NetParameter
set_has_debug_info	caffe.pb.cc	/^void SolverProto::set_has_debug_info() {$/;"	f	class:caffe::SolverProto
set_has_debug_info	caffe.pb.h	/^inline void NetParameter::set_has_debug_info() {$/;"	f	class:caffe::NetParameter
set_has_debug_info	caffe.pb.h	/^inline void SolverProto::set_has_debug_info() {$/;"	f	class:caffe::SolverProto
set_has_decay_mult	caffe.pb.cc	/^void ParamSpec::set_has_decay_mult() {$/;"	f	class:caffe::ParamSpec
set_has_decay_mult	caffe.pb.h	/^inline void ParamSpec::set_has_decay_mult() {$/;"	f	class:caffe::ParamSpec
set_has_delta	caffe.pb.cc	/^void SolverProto::set_has_delta() {$/;"	f	class:caffe::SolverProto
set_has_delta	caffe.pb.h	/^inline void SolverProto::set_has_delta() {$/;"	f	class:caffe::SolverProto
set_has_device_group	caffe.pb.cc	/^void PlacementGroup::set_has_device_group() {$/;"	f	class:caffe::PlacementGroup
set_has_device_group	caffe.pb.h	/^inline void PlacementGroup::set_has_device_group() {$/;"	f	class:caffe::PlacementGroup
set_has_device_set	caffe.pb.cc	/^void Machine::set_has_device_set() {$/;"	f	class:caffe::Machine
set_has_device_set	caffe.pb.h	/^inline void Machine::set_has_device_set() {$/;"	f	class:caffe::Machine
set_has_display	caffe.pb.cc	/^void SolverProto::set_has_display() {$/;"	f	class:caffe::SolverProto
set_has_display	caffe.pb.h	/^inline void SolverProto::set_has_display() {$/;"	f	class:caffe::SolverProto
set_has_end	caffe.pb.cc	/^void DeviceGroup::set_has_end() {$/;"	f	class:caffe::DeviceGroup
set_has_end	caffe.pb.cc	/^void MachineGroup::set_has_end() {$/;"	f	class:caffe::MachineGroup
set_has_end	caffe.pb.h	/^inline void DeviceGroup::set_has_end() {$/;"	f	class:caffe::DeviceGroup
set_has_end	caffe.pb.h	/^inline void MachineGroup::set_has_end() {$/;"	f	class:caffe::MachineGroup
set_has_engine	caffe.pb.cc	/^void ConvolutionProto::set_has_engine() {$/;"	f	class:caffe::ConvolutionProto
set_has_engine	caffe.pb.cc	/^void LRNProto::set_has_engine() {$/;"	f	class:caffe::LRNProto
set_has_engine	caffe.pb.cc	/^void PoolingProto::set_has_engine() {$/;"	f	class:caffe::PoolingProto
set_has_engine	caffe.pb.cc	/^void ReLUProto::set_has_engine() {$/;"	f	class:caffe::ReLUProto
set_has_engine	caffe.pb.cc	/^void SigmoidProto::set_has_engine() {$/;"	f	class:caffe::SigmoidProto
set_has_engine	caffe.pb.cc	/^void SoftmaxProto::set_has_engine() {$/;"	f	class:caffe::SoftmaxProto
set_has_engine	caffe.pb.cc	/^void StoreProto::set_has_engine() {$/;"	f	class:caffe::StoreProto
set_has_engine	caffe.pb.h	/^inline void ConvolutionProto::set_has_engine() {$/;"	f	class:caffe::ConvolutionProto
set_has_engine	caffe.pb.h	/^inline void LRNProto::set_has_engine() {$/;"	f	class:caffe::LRNProto
set_has_engine	caffe.pb.h	/^inline void PoolingProto::set_has_engine() {$/;"	f	class:caffe::PoolingProto
set_has_engine	caffe.pb.h	/^inline void ReLUProto::set_has_engine() {$/;"	f	class:caffe::ReLUProto
set_has_engine	caffe.pb.h	/^inline void SigmoidProto::set_has_engine() {$/;"	f	class:caffe::SigmoidProto
set_has_engine	caffe.pb.h	/^inline void SoftmaxProto::set_has_engine() {$/;"	f	class:caffe::SoftmaxProto
set_has_engine	caffe.pb.h	/^inline void StoreProto::set_has_engine() {$/;"	f	class:caffe::StoreProto
set_has_eps	caffe.pb.cc	/^void BatchNormProto::set_has_eps() {$/;"	f	class:caffe::BatchNormProto
set_has_eps	caffe.pb.h	/^inline void BatchNormProto::set_has_eps() {$/;"	f	class:caffe::BatchNormProto
set_has_force_backward	caffe.pb.cc	/^void NetParameter::set_has_force_backward() {$/;"	f	class:caffe::NetParameter
set_has_force_backward	caffe.pb.h	/^inline void NetParameter::set_has_force_backward() {$/;"	f	class:caffe::NetParameter
set_has_forward_is_sender	caffe.pb.cc	/^void NetProto::set_has_forward_is_sender() {$/;"	f	class:caffe::NetProto
set_has_forward_is_sender	caffe.pb.h	/^inline void NetProto::set_has_forward_is_sender() {$/;"	f	class:caffe::NetProto
set_has_gamma	caffe.pb.cc	/^void SolverProto::set_has_gamma() {$/;"	f	class:caffe::SolverProto
set_has_gamma	caffe.pb.h	/^inline void SolverProto::set_has_gamma() {$/;"	f	class:caffe::SolverProto
set_has_global_pooling	caffe.pb.cc	/^void PoolingProto::set_has_global_pooling() {$/;"	f	class:caffe::PoolingProto
set_has_global_pooling	caffe.pb.h	/^inline void PoolingProto::set_has_global_pooling() {$/;"	f	class:caffe::PoolingProto
set_has_gradient	caffe.pb.cc	/^void ModelUpdateProto::set_has_gradient() {$/;"	f	class:caffe::ModelUpdateProto
set_has_gradient	caffe.pb.h	/^inline void ModelUpdateProto::set_has_gradient() {$/;"	f	class:caffe::ModelUpdateProto
set_has_group	caffe.pb.cc	/^void ConvolutionProto::set_has_group() {$/;"	f	class:caffe::ConvolutionProto
set_has_group	caffe.pb.h	/^inline void ConvolutionProto::set_has_group() {$/;"	f	class:caffe::ConvolutionProto
set_has_height	caffe.pb.cc	/^void LoaderProto::set_has_height() {$/;"	f	class:caffe::LoaderProto
set_has_height	caffe.pb.h	/^inline void LoaderProto::set_has_height() {$/;"	f	class:caffe::LoaderProto
set_has_in	caffe.pb.cc	/^void ConvolutionProto::set_has_in() {$/;"	f	class:caffe::ConvolutionProto
set_has_in	caffe.pb.cc	/^void InnerProductProto::set_has_in() {$/;"	f	class:caffe::InnerProductProto
set_has_in	caffe.pb.cc	/^void LRNProto::set_has_in() {$/;"	f	class:caffe::LRNProto
set_has_in	caffe.pb.cc	/^void PlaceholderProto::set_has_in() {$/;"	f	class:caffe::PlaceholderProto
set_has_in	caffe.pb.cc	/^void PoolingProto::set_has_in() {$/;"	f	class:caffe::PoolingProto
set_has_in	caffe.pb.cc	/^void ReLUProto::set_has_in() {$/;"	f	class:caffe::ReLUProto
set_has_in	caffe.pb.cc	/^void SigmoidProto::set_has_in() {$/;"	f	class:caffe::SigmoidProto
set_has_in	caffe.pb.cc	/^void SoftmaxProto::set_has_in() {$/;"	f	class:caffe::SoftmaxProto
set_has_in	caffe.pb.cc	/^void SplitProto::set_has_in() {$/;"	f	class:caffe::SplitProto
set_has_in	caffe.pb.cc	/^void StoreProto::set_has_in() {$/;"	f	class:caffe::StoreProto
set_has_in	caffe.pb.h	/^inline void ConvolutionProto::set_has_in() {$/;"	f	class:caffe::ConvolutionProto
set_has_in	caffe.pb.h	/^inline void InnerProductProto::set_has_in() {$/;"	f	class:caffe::InnerProductProto
set_has_in	caffe.pb.h	/^inline void LRNProto::set_has_in() {$/;"	f	class:caffe::LRNProto
set_has_in	caffe.pb.h	/^inline void PlaceholderProto::set_has_in() {$/;"	f	class:caffe::PlaceholderProto
set_has_in	caffe.pb.h	/^inline void PoolingProto::set_has_in() {$/;"	f	class:caffe::PoolingProto
set_has_in	caffe.pb.h	/^inline void ReLUProto::set_has_in() {$/;"	f	class:caffe::ReLUProto
set_has_in	caffe.pb.h	/^inline void SigmoidProto::set_has_in() {$/;"	f	class:caffe::SigmoidProto
set_has_in	caffe.pb.h	/^inline void SoftmaxProto::set_has_in() {$/;"	f	class:caffe::SoftmaxProto
set_has_in	caffe.pb.h	/^inline void SplitProto::set_has_in() {$/;"	f	class:caffe::SplitProto
set_has_in	caffe.pb.h	/^inline void StoreProto::set_has_in() {$/;"	f	class:caffe::StoreProto
set_has_in_axis	caffe.pb.cc	/^void BoxingProto::set_has_in_axis() {$/;"	f	class:caffe::BoxingProto
set_has_in_axis	caffe.pb.h	/^inline void BoxingProto::set_has_in_axis() {$/;"	f	class:caffe::BoxingProto
set_has_in_envelope	caffe.pb.cc	/^void NetProto::set_has_in_envelope() {$/;"	f	class:caffe::NetProto
set_has_in_envelope	caffe.pb.h	/^inline void NetProto::set_has_in_envelope() {$/;"	f	class:caffe::NetProto
set_has_in_num	caffe.pb.cc	/^void BoxingProto::set_has_in_num() {$/;"	f	class:caffe::BoxingProto
set_has_in_num	caffe.pb.cc	/^void ConcatProto::set_has_in_num() {$/;"	f	class:caffe::ConcatProto
set_has_in_num	caffe.pb.cc	/^void NetProto::set_has_in_num() {$/;"	f	class:caffe::NetProto
set_has_in_num	caffe.pb.h	/^inline void BoxingProto::set_has_in_num() {$/;"	f	class:caffe::BoxingProto
set_has_in_num	caffe.pb.h	/^inline void ConcatProto::set_has_in_num() {$/;"	f	class:caffe::ConcatProto
set_has_in_num	caffe.pb.h	/^inline void NetProto::set_has_in_num() {$/;"	f	class:caffe::NetProto
set_has_in_op	caffe.pb.cc	/^void BoxingProto::set_has_in_op() {$/;"	f	class:caffe::BoxingProto
set_has_in_op	caffe.pb.h	/^inline void BoxingProto::set_has_in_op() {$/;"	f	class:caffe::BoxingProto
set_has_innerproduct_proto	caffe.pb.cc	/^void LayerProto::set_has_innerproduct_proto() {$/;"	f	class:caffe::LayerProto
set_has_innerproduct_proto	caffe.pb.h	/^inline void LayerProto::set_has_innerproduct_proto() {$/;"	f	class:caffe::LayerProto
set_has_iter	caffe.pb.cc	/^void SolverState::set_has_iter() {$/;"	f	class:caffe::SolverState
set_has_iter	caffe.pb.h	/^inline void SolverState::set_has_iter() {$/;"	f	class:caffe::SolverState
set_has_k	caffe.pb.cc	/^void LRNProto::set_has_k() {$/;"	f	class:caffe::LRNProto
set_has_k	caffe.pb.h	/^inline void LRNProto::set_has_k() {$/;"	f	class:caffe::LRNProto
set_has_kernel_h	caffe.pb.cc	/^void ConvolutionProto::set_has_kernel_h() {$/;"	f	class:caffe::ConvolutionProto
set_has_kernel_h	caffe.pb.cc	/^void PoolingProto::set_has_kernel_h() {$/;"	f	class:caffe::PoolingProto
set_has_kernel_h	caffe.pb.h	/^inline void ConvolutionProto::set_has_kernel_h() {$/;"	f	class:caffe::ConvolutionProto
set_has_kernel_h	caffe.pb.h	/^inline void PoolingProto::set_has_kernel_h() {$/;"	f	class:caffe::PoolingProto
set_has_kernel_size	caffe.pb.cc	/^void ConvolutionProto::set_has_kernel_size() {$/;"	f	class:caffe::ConvolutionProto
set_has_kernel_size	caffe.pb.cc	/^void PoolingProto::set_has_kernel_size() {$/;"	f	class:caffe::PoolingProto
set_has_kernel_size	caffe.pb.h	/^inline void ConvolutionProto::set_has_kernel_size() {$/;"	f	class:caffe::ConvolutionProto
set_has_kernel_size	caffe.pb.h	/^inline void PoolingProto::set_has_kernel_size() {$/;"	f	class:caffe::PoolingProto
set_has_kernel_w	caffe.pb.cc	/^void ConvolutionProto::set_has_kernel_w() {$/;"	f	class:caffe::ConvolutionProto
set_has_kernel_w	caffe.pb.cc	/^void PoolingProto::set_has_kernel_w() {$/;"	f	class:caffe::PoolingProto
set_has_kernel_w	caffe.pb.h	/^inline void ConvolutionProto::set_has_kernel_w() {$/;"	f	class:caffe::ConvolutionProto
set_has_kernel_w	caffe.pb.h	/^inline void PoolingProto::set_has_kernel_w() {$/;"	f	class:caffe::PoolingProto
set_has_label	caffe.pb.cc	/^void LoaderProto::set_has_label() {$/;"	f	class:caffe::LoaderProto
set_has_label	caffe.pb.cc	/^void MultinomialLogisticLossProto::set_has_label() {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_has_label	caffe.pb.h	/^inline void LoaderProto::set_has_label() {$/;"	f	class:caffe::LoaderProto
set_has_label	caffe.pb.h	/^inline void MultinomialLogisticLossProto::set_has_label() {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_has_layer_set	caffe.pb.cc	/^void PlacementGroup::set_has_layer_set() {$/;"	f	class:caffe::PlacementGroup
set_has_layer_set	caffe.pb.h	/^inline void PlacementGroup::set_has_layer_set() {$/;"	f	class:caffe::PlacementGroup
set_has_learned_net	caffe.pb.cc	/^void SolverState::set_has_learned_net() {$/;"	f	class:caffe::SolverState
set_has_learned_net	caffe.pb.h	/^inline void SolverState::set_has_learned_net() {$/;"	f	class:caffe::SolverState
set_has_level	caffe.pb.cc	/^void NetState::set_has_level() {$/;"	f	class:caffe::NetState
set_has_level	caffe.pb.h	/^inline void NetState::set_has_level() {$/;"	f	class:caffe::NetState
set_has_loader_proto	caffe.pb.cc	/^void LayerProto::set_has_loader_proto() {$/;"	f	class:caffe::LayerProto
set_has_loader_proto	caffe.pb.h	/^inline void LayerProto::set_has_loader_proto() {$/;"	f	class:caffe::LayerProto
set_has_loadpartialmodel_proto	caffe.pb.cc	/^void LayerProto::set_has_loadpartialmodel_proto() {$/;"	f	class:caffe::LayerProto
set_has_loadpartialmodel_proto	caffe.pb.h	/^inline void LayerProto::set_has_loadpartialmodel_proto() {$/;"	f	class:caffe::LayerProto
set_has_local_size	caffe.pb.cc	/^void LRNProto::set_has_local_size() {$/;"	f	class:caffe::LRNProto
set_has_local_size	caffe.pb.h	/^inline void LRNProto::set_has_local_size() {$/;"	f	class:caffe::LRNProto
set_has_loss	caffe.pb.cc	/^void MultinomialLogisticLossProto::set_has_loss() {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_has_loss	caffe.pb.h	/^inline void MultinomialLogisticLossProto::set_has_loss() {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_has_lr_mult	caffe.pb.cc	/^void ParamSpec::set_has_lr_mult() {$/;"	f	class:caffe::ParamSpec
set_has_lr_mult	caffe.pb.h	/^inline void ParamSpec::set_has_lr_mult() {$/;"	f	class:caffe::ParamSpec
set_has_lr_policy	caffe.pb.cc	/^void SolverProto::set_has_lr_policy() {$/;"	f	class:caffe::SolverProto
set_has_lr_policy	caffe.pb.h	/^inline void SolverProto::set_has_lr_policy() {$/;"	f	class:caffe::SolverProto
set_has_lrn_proto	caffe.pb.cc	/^void LayerProto::set_has_lrn_proto() {$/;"	f	class:caffe::LayerProto
set_has_lrn_proto	caffe.pb.h	/^inline void LayerProto::set_has_lrn_proto() {$/;"	f	class:caffe::LayerProto
set_has_machine_group	caffe.pb.cc	/^void PlacementGroup::set_has_machine_group() {$/;"	f	class:caffe::PlacementGroup
set_has_machine_group	caffe.pb.h	/^inline void PlacementGroup::set_has_machine_group() {$/;"	f	class:caffe::PlacementGroup
set_has_machine_id	caffe.pb.cc	/^void SolverProto::set_has_machine_id() {$/;"	f	class:caffe::SolverProto
set_has_machine_id	caffe.pb.h	/^inline void SolverProto::set_has_machine_id() {$/;"	f	class:caffe::SolverProto
set_has_max	caffe.pb.cc	/^void FillerParameter::set_has_max() {$/;"	f	class:caffe::FillerParameter
set_has_max	caffe.pb.h	/^inline void FillerParameter::set_has_max() {$/;"	f	class:caffe::FillerParameter
set_has_max_iter	caffe.pb.cc	/^void SolverProto::set_has_max_iter() {$/;"	f	class:caffe::SolverProto
set_has_max_iter	caffe.pb.h	/^inline void SolverProto::set_has_max_iter() {$/;"	f	class:caffe::SolverProto
set_has_mean	caffe.pb.cc	/^void FillerParameter::set_has_mean() {$/;"	f	class:caffe::FillerParameter
set_has_mean	caffe.pb.h	/^inline void FillerParameter::set_has_mean() {$/;"	f	class:caffe::FillerParameter
set_has_min	caffe.pb.cc	/^void FillerParameter::set_has_min() {$/;"	f	class:caffe::FillerParameter
set_has_min	caffe.pb.h	/^inline void FillerParameter::set_has_min() {$/;"	f	class:caffe::FillerParameter
set_has_modelupdate_proto	caffe.pb.cc	/^void LayerProto::set_has_modelupdate_proto() {$/;"	f	class:caffe::LayerProto
set_has_modelupdate_proto	caffe.pb.h	/^inline void LayerProto::set_has_modelupdate_proto() {$/;"	f	class:caffe::LayerProto
set_has_momentum	caffe.pb.cc	/^void SolverProto::set_has_momentum() {$/;"	f	class:caffe::SolverProto
set_has_momentum	caffe.pb.h	/^inline void SolverProto::set_has_momentum() {$/;"	f	class:caffe::SolverProto
set_has_moving_average_fraction	caffe.pb.cc	/^void BatchNormProto::set_has_moving_average_fraction() {$/;"	f	class:caffe::BatchNormProto
set_has_moving_average_fraction	caffe.pb.h	/^inline void BatchNormProto::set_has_moving_average_fraction() {$/;"	f	class:caffe::BatchNormProto
set_has_multinomiallogisticloss_proto	caffe.pb.cc	/^void LayerProto::set_has_multinomiallogisticloss_proto() {$/;"	f	class:caffe::LayerProto
set_has_multinomiallogisticloss_proto	caffe.pb.h	/^inline void LayerProto::set_has_multinomiallogisticloss_proto() {$/;"	f	class:caffe::LayerProto
set_has_name	caffe.pb.cc	/^void BlobProto::set_has_name() {$/;"	f	class:caffe::BlobProto
set_has_name	caffe.pb.cc	/^void LayerProto::set_has_name() {$/;"	f	class:caffe::LayerProto
set_has_name	caffe.pb.cc	/^void Machine::set_has_name() {$/;"	f	class:caffe::Machine
set_has_name	caffe.pb.cc	/^void NetParameter::set_has_name() {$/;"	f	class:caffe::NetParameter
set_has_name	caffe.pb.cc	/^void ParamSpec::set_has_name() {$/;"	f	class:caffe::ParamSpec
set_has_name	caffe.pb.cc	/^void PlacementGroup::set_has_name() {$/;"	f	class:caffe::PlacementGroup
set_has_name	caffe.pb.h	/^inline void BlobProto::set_has_name() {$/;"	f	class:caffe::BlobProto
set_has_name	caffe.pb.h	/^inline void LayerProto::set_has_name() {$/;"	f	class:caffe::LayerProto
set_has_name	caffe.pb.h	/^inline void Machine::set_has_name() {$/;"	f	class:caffe::Machine
set_has_name	caffe.pb.h	/^inline void NetParameter::set_has_name() {$/;"	f	class:caffe::NetParameter
set_has_name	caffe.pb.h	/^inline void ParamSpec::set_has_name() {$/;"	f	class:caffe::ParamSpec
set_has_name	caffe.pb.h	/^inline void PlacementGroup::set_has_name() {$/;"	f	class:caffe::PlacementGroup
set_has_negative_slope	caffe.pb.cc	/^void ReLUProto::set_has_negative_slope() {$/;"	f	class:caffe::ReLUProto
set_has_negative_slope	caffe.pb.h	/^inline void ReLUProto::set_has_negative_slope() {$/;"	f	class:caffe::ReLUProto
set_has_norm_region	caffe.pb.cc	/^void LRNProto::set_has_norm_region() {$/;"	f	class:caffe::LRNProto
set_has_norm_region	caffe.pb.h	/^inline void LRNProto::set_has_norm_region() {$/;"	f	class:caffe::LRNProto
set_has_nullupdate_proto	caffe.pb.cc	/^void LayerProto::set_has_nullupdate_proto() {$/;"	f	class:caffe::LayerProto
set_has_nullupdate_proto	caffe.pb.h	/^inline void LayerProto::set_has_nullupdate_proto() {$/;"	f	class:caffe::LayerProto
set_has_num	caffe.pb.cc	/^void CopyProto::set_has_num() {$/;"	f	class:caffe::CopyProto
set_has_num	caffe.pb.h	/^inline void CopyProto::set_has_num() {$/;"	f	class:caffe::CopyProto
set_has_num_batch_per_sync	caffe.pb.cc	/^void SolverProto::set_has_num_batch_per_sync() {$/;"	f	class:caffe::SolverProto
set_has_num_batch_per_sync	caffe.pb.h	/^inline void SolverProto::set_has_num_batch_per_sync() {$/;"	f	class:caffe::SolverProto
set_has_num_data_param_copy	caffe.pb.cc	/^void SolverProto::set_has_num_data_param_copy() {$/;"	f	class:caffe::SolverProto
set_has_num_data_param_copy	caffe.pb.h	/^inline void SolverProto::set_has_num_data_param_copy() {$/;"	f	class:caffe::SolverProto
set_has_num_model_param_copy	caffe.pb.cc	/^void SolverProto::set_has_num_model_param_copy() {$/;"	f	class:caffe::SolverProto
set_has_num_model_param_copy	caffe.pb.h	/^inline void SolverProto::set_has_num_model_param_copy() {$/;"	f	class:caffe::SolverProto
set_has_num_output	caffe.pb.cc	/^void ConvolutionProto::set_has_num_output() {$/;"	f	class:caffe::ConvolutionProto
set_has_num_output	caffe.pb.cc	/^void InnerProductProto::set_has_num_output() {$/;"	f	class:caffe::InnerProductProto
set_has_num_output	caffe.pb.h	/^inline void ConvolutionProto::set_has_num_output() {$/;"	f	class:caffe::ConvolutionProto
set_has_num_output	caffe.pb.h	/^inline void InnerProductProto::set_has_num_output() {$/;"	f	class:caffe::InnerProductProto
set_has_old_weight	caffe.pb.cc	/^void ModelUpdateProto::set_has_old_weight() {$/;"	f	class:caffe::ModelUpdateProto
set_has_old_weight	caffe.pb.h	/^inline void ModelUpdateProto::set_has_old_weight() {$/;"	f	class:caffe::ModelUpdateProto
set_has_out	caffe.pb.cc	/^void ConcatProto::set_has_out() {$/;"	f	class:caffe::ConcatProto
set_has_out	caffe.pb.cc	/^void ConvolutionProto::set_has_out() {$/;"	f	class:caffe::ConvolutionProto
set_has_out	caffe.pb.cc	/^void InnerProductProto::set_has_out() {$/;"	f	class:caffe::InnerProductProto
set_has_out	caffe.pb.cc	/^void LRNProto::set_has_out() {$/;"	f	class:caffe::LRNProto
set_has_out	caffe.pb.cc	/^void LoadPartialModelProto::set_has_out() {$/;"	f	class:caffe::LoadPartialModelProto
set_has_out	caffe.pb.cc	/^void PlaceholderProto::set_has_out() {$/;"	f	class:caffe::PlaceholderProto
set_has_out	caffe.pb.cc	/^void PoolingProto::set_has_out() {$/;"	f	class:caffe::PoolingProto
set_has_out	caffe.pb.cc	/^void ReLUProto::set_has_out() {$/;"	f	class:caffe::ReLUProto
set_has_out	caffe.pb.cc	/^void SigmoidProto::set_has_out() {$/;"	f	class:caffe::SigmoidProto
set_has_out	caffe.pb.cc	/^void SoftmaxProto::set_has_out() {$/;"	f	class:caffe::SoftmaxProto
set_has_out	caffe.pb.cc	/^void StoreProto::set_has_out() {$/;"	f	class:caffe::StoreProto
set_has_out	caffe.pb.h	/^inline void ConcatProto::set_has_out() {$/;"	f	class:caffe::ConcatProto
set_has_out	caffe.pb.h	/^inline void ConvolutionProto::set_has_out() {$/;"	f	class:caffe::ConvolutionProto
set_has_out	caffe.pb.h	/^inline void InnerProductProto::set_has_out() {$/;"	f	class:caffe::InnerProductProto
set_has_out	caffe.pb.h	/^inline void LRNProto::set_has_out() {$/;"	f	class:caffe::LRNProto
set_has_out	caffe.pb.h	/^inline void LoadPartialModelProto::set_has_out() {$/;"	f	class:caffe::LoadPartialModelProto
set_has_out	caffe.pb.h	/^inline void PlaceholderProto::set_has_out() {$/;"	f	class:caffe::PlaceholderProto
set_has_out	caffe.pb.h	/^inline void PoolingProto::set_has_out() {$/;"	f	class:caffe::PoolingProto
set_has_out	caffe.pb.h	/^inline void ReLUProto::set_has_out() {$/;"	f	class:caffe::ReLUProto
set_has_out	caffe.pb.h	/^inline void SigmoidProto::set_has_out() {$/;"	f	class:caffe::SigmoidProto
set_has_out	caffe.pb.h	/^inline void SoftmaxProto::set_has_out() {$/;"	f	class:caffe::SoftmaxProto
set_has_out	caffe.pb.h	/^inline void StoreProto::set_has_out() {$/;"	f	class:caffe::StoreProto
set_has_out_axis	caffe.pb.cc	/^void BoxingProto::set_has_out_axis() {$/;"	f	class:caffe::BoxingProto
set_has_out_axis	caffe.pb.h	/^inline void BoxingProto::set_has_out_axis() {$/;"	f	class:caffe::BoxingProto
set_has_out_envelope	caffe.pb.cc	/^void NetProto::set_has_out_envelope() {$/;"	f	class:caffe::NetProto
set_has_out_envelope	caffe.pb.h	/^inline void NetProto::set_has_out_envelope() {$/;"	f	class:caffe::NetProto
set_has_out_num	caffe.pb.cc	/^void BoxingProto::set_has_out_num() {$/;"	f	class:caffe::BoxingProto
set_has_out_num	caffe.pb.cc	/^void NetProto::set_has_out_num() {$/;"	f	class:caffe::NetProto
set_has_out_num	caffe.pb.cc	/^void SplitProto::set_has_out_num() {$/;"	f	class:caffe::SplitProto
set_has_out_num	caffe.pb.h	/^inline void BoxingProto::set_has_out_num() {$/;"	f	class:caffe::BoxingProto
set_has_out_num	caffe.pb.h	/^inline void NetProto::set_has_out_num() {$/;"	f	class:caffe::NetProto
set_has_out_num	caffe.pb.h	/^inline void SplitProto::set_has_out_num() {$/;"	f	class:caffe::SplitProto
set_has_out_op	caffe.pb.cc	/^void BoxingProto::set_has_out_op() {$/;"	f	class:caffe::BoxingProto
set_has_out_op	caffe.pb.h	/^inline void BoxingProto::set_has_out_op() {$/;"	f	class:caffe::BoxingProto
set_has_pad	caffe.pb.cc	/^void ConvolutionProto::set_has_pad() {$/;"	f	class:caffe::ConvolutionProto
set_has_pad	caffe.pb.cc	/^void PoolingProto::set_has_pad() {$/;"	f	class:caffe::PoolingProto
set_has_pad	caffe.pb.h	/^inline void ConvolutionProto::set_has_pad() {$/;"	f	class:caffe::ConvolutionProto
set_has_pad	caffe.pb.h	/^inline void PoolingProto::set_has_pad() {$/;"	f	class:caffe::PoolingProto
set_has_pad_h	caffe.pb.cc	/^void ConvolutionProto::set_has_pad_h() {$/;"	f	class:caffe::ConvolutionProto
set_has_pad_h	caffe.pb.cc	/^void PoolingProto::set_has_pad_h() {$/;"	f	class:caffe::PoolingProto
set_has_pad_h	caffe.pb.h	/^inline void ConvolutionProto::set_has_pad_h() {$/;"	f	class:caffe::ConvolutionProto
set_has_pad_h	caffe.pb.h	/^inline void PoolingProto::set_has_pad_h() {$/;"	f	class:caffe::PoolingProto
set_has_pad_w	caffe.pb.cc	/^void ConvolutionProto::set_has_pad_w() {$/;"	f	class:caffe::ConvolutionProto
set_has_pad_w	caffe.pb.cc	/^void PoolingProto::set_has_pad_w() {$/;"	f	class:caffe::PoolingProto
set_has_pad_w	caffe.pb.h	/^inline void ConvolutionProto::set_has_pad_w() {$/;"	f	class:caffe::ConvolutionProto
set_has_pad_w	caffe.pb.h	/^inline void PoolingProto::set_has_pad_w() {$/;"	f	class:caffe::PoolingProto
set_has_parallel_policy	caffe.pb.cc	/^void PlacementGroup::set_has_parallel_policy() {$/;"	f	class:caffe::PlacementGroup
set_has_parallel_policy	caffe.pb.h	/^inline void PlacementGroup::set_has_parallel_policy() {$/;"	f	class:caffe::PlacementGroup
set_has_phase	caffe.pb.cc	/^void NetState::set_has_phase() {$/;"	f	class:caffe::NetState
set_has_phase	caffe.pb.h	/^inline void NetState::set_has_phase() {$/;"	f	class:caffe::NetState
set_has_piece_size	caffe.pb.cc	/^void LoaderProto::set_has_piece_size() {$/;"	f	class:caffe::LoaderProto
set_has_piece_size	caffe.pb.h	/^inline void LoaderProto::set_has_piece_size() {$/;"	f	class:caffe::LoaderProto
set_has_placeholder_proto	caffe.pb.cc	/^void LayerProto::set_has_placeholder_proto() {$/;"	f	class:caffe::LayerProto
set_has_placeholder_proto	caffe.pb.h	/^inline void LayerProto::set_has_placeholder_proto() {$/;"	f	class:caffe::LayerProto
set_has_pool	caffe.pb.cc	/^void PoolingProto::set_has_pool() {$/;"	f	class:caffe::PoolingProto
set_has_pool	caffe.pb.h	/^inline void PoolingProto::set_has_pool() {$/;"	f	class:caffe::PoolingProto
set_has_pooling_proto	caffe.pb.cc	/^void LayerProto::set_has_pooling_proto() {$/;"	f	class:caffe::LayerProto
set_has_pooling_proto	caffe.pb.h	/^inline void LayerProto::set_has_pooling_proto() {$/;"	f	class:caffe::LayerProto
set_has_port	caffe.pb.cc	/^void Machine::set_has_port() {$/;"	f	class:caffe::Machine
set_has_port	caffe.pb.h	/^inline void Machine::set_has_port() {$/;"	f	class:caffe::Machine
set_has_power	caffe.pb.cc	/^void SolverProto::set_has_power() {$/;"	f	class:caffe::SolverProto
set_has_power	caffe.pb.h	/^inline void SolverProto::set_has_power() {$/;"	f	class:caffe::SolverProto
set_has_random_seed	caffe.pb.cc	/^void SolverProto::set_has_random_seed() {$/;"	f	class:caffe::SolverProto
set_has_random_seed	caffe.pb.h	/^inline void SolverProto::set_has_random_seed() {$/;"	f	class:caffe::SolverProto
set_has_regularization_type	caffe.pb.cc	/^void SolverProto::set_has_regularization_type() {$/;"	f	class:caffe::SolverProto
set_has_regularization_type	caffe.pb.h	/^inline void SolverProto::set_has_regularization_type() {$/;"	f	class:caffe::SolverProto
set_has_relu_proto	caffe.pb.cc	/^void LayerProto::set_has_relu_proto() {$/;"	f	class:caffe::LayerProto
set_has_relu_proto	caffe.pb.h	/^inline void LayerProto::set_has_relu_proto() {$/;"	f	class:caffe::LayerProto
set_has_resource	caffe.pb.cc	/^void SolverProto::set_has_resource() {$/;"	f	class:caffe::SolverProto
set_has_resource	caffe.pb.h	/^inline void SolverProto::set_has_resource() {$/;"	f	class:caffe::SolverProto
set_has_shape	caffe.pb.cc	/^void BlobProto::set_has_shape() {$/;"	f	class:caffe::BlobProto
set_has_shape	caffe.pb.h	/^inline void BlobProto::set_has_shape() {$/;"	f	class:caffe::BlobProto
set_has_share_mode	caffe.pb.cc	/^void ParamSpec::set_has_share_mode() {$/;"	f	class:caffe::ParamSpec
set_has_share_mode	caffe.pb.h	/^inline void ParamSpec::set_has_share_mode() {$/;"	f	class:caffe::ParamSpec
set_has_sigmoid_proto	caffe.pb.cc	/^void LayerProto::set_has_sigmoid_proto() {$/;"	f	class:caffe::LayerProto
set_has_sigmoid_proto	caffe.pb.h	/^inline void LayerProto::set_has_sigmoid_proto() {$/;"	f	class:caffe::LayerProto
set_has_snapshot	caffe.pb.cc	/^void SolverProto::set_has_snapshot() {$/;"	f	class:caffe::SolverProto
set_has_snapshot	caffe.pb.h	/^inline void SolverProto::set_has_snapshot() {$/;"	f	class:caffe::SolverProto
set_has_snapshot_after_train	caffe.pb.cc	/^void SolverProto::set_has_snapshot_after_train() {$/;"	f	class:caffe::SolverProto
set_has_snapshot_after_train	caffe.pb.h	/^inline void SolverProto::set_has_snapshot_after_train() {$/;"	f	class:caffe::SolverProto
set_has_snapshot_diff	caffe.pb.cc	/^void SolverProto::set_has_snapshot_diff() {$/;"	f	class:caffe::SolverProto
set_has_snapshot_diff	caffe.pb.h	/^inline void SolverProto::set_has_snapshot_diff() {$/;"	f	class:caffe::SolverProto
set_has_snapshot_prefix	caffe.pb.cc	/^void SolverProto::set_has_snapshot_prefix() {$/;"	f	class:caffe::SolverProto
set_has_snapshot_prefix	caffe.pb.h	/^inline void SolverProto::set_has_snapshot_prefix() {$/;"	f	class:caffe::SolverProto
set_has_softmax_proto	caffe.pb.cc	/^void LayerProto::set_has_softmax_proto() {$/;"	f	class:caffe::LayerProto
set_has_softmax_proto	caffe.pb.h	/^inline void LayerProto::set_has_softmax_proto() {$/;"	f	class:caffe::LayerProto
set_has_solver_type	caffe.pb.cc	/^void SolverProto::set_has_solver_type() {$/;"	f	class:caffe::SolverProto
set_has_solver_type	caffe.pb.h	/^inline void SolverProto::set_has_solver_type() {$/;"	f	class:caffe::SolverProto
set_has_source	caffe.pb.cc	/^void LoaderProto::set_has_source() {$/;"	f	class:caffe::LoaderProto
set_has_source	caffe.pb.h	/^inline void LoaderProto::set_has_source() {$/;"	f	class:caffe::LoaderProto
set_has_sparse	caffe.pb.cc	/^void FillerParameter::set_has_sparse() {$/;"	f	class:caffe::FillerParameter
set_has_sparse	caffe.pb.h	/^inline void FillerParameter::set_has_sparse() {$/;"	f	class:caffe::FillerParameter
set_has_split_proto	caffe.pb.cc	/^void LayerProto::set_has_split_proto() {$/;"	f	class:caffe::LayerProto
set_has_split_proto	caffe.pb.h	/^inline void LayerProto::set_has_split_proto() {$/;"	f	class:caffe::LayerProto
set_has_state	caffe.pb.cc	/^void NetParameter::set_has_state() {$/;"	f	class:caffe::NetParameter
set_has_state	caffe.pb.h	/^inline void NetParameter::set_has_state() {$/;"	f	class:caffe::NetParameter
set_has_std	caffe.pb.cc	/^void FillerParameter::set_has_std() {$/;"	f	class:caffe::FillerParameter
set_has_std	caffe.pb.h	/^inline void FillerParameter::set_has_std() {$/;"	f	class:caffe::FillerParameter
set_has_stepsize	caffe.pb.cc	/^void SolverProto::set_has_stepsize() {$/;"	f	class:caffe::SolverProto
set_has_stepsize	caffe.pb.h	/^inline void SolverProto::set_has_stepsize() {$/;"	f	class:caffe::SolverProto
set_has_stop	caffe.pb.cc	/^void StoreProto::set_has_stop() {$/;"	f	class:caffe::StoreProto
set_has_stop	caffe.pb.h	/^inline void StoreProto::set_has_stop() {$/;"	f	class:caffe::StoreProto
set_has_store_proto	caffe.pb.cc	/^void LayerProto::set_has_store_proto() {$/;"	f	class:caffe::LayerProto
set_has_store_proto	caffe.pb.h	/^inline void LayerProto::set_has_store_proto() {$/;"	f	class:caffe::LayerProto
set_has_strategy	caffe.pb.cc	/^void SolverProto::set_has_strategy() {$/;"	f	class:caffe::SolverProto
set_has_strategy	caffe.pb.h	/^inline void SolverProto::set_has_strategy() {$/;"	f	class:caffe::SolverProto
set_has_stride	caffe.pb.cc	/^void ConvolutionProto::set_has_stride() {$/;"	f	class:caffe::ConvolutionProto
set_has_stride	caffe.pb.cc	/^void PoolingProto::set_has_stride() {$/;"	f	class:caffe::PoolingProto
set_has_stride	caffe.pb.h	/^inline void ConvolutionProto::set_has_stride() {$/;"	f	class:caffe::ConvolutionProto
set_has_stride	caffe.pb.h	/^inline void PoolingProto::set_has_stride() {$/;"	f	class:caffe::PoolingProto
set_has_stride_h	caffe.pb.cc	/^void ConvolutionProto::set_has_stride_h() {$/;"	f	class:caffe::ConvolutionProto
set_has_stride_h	caffe.pb.cc	/^void PoolingProto::set_has_stride_h() {$/;"	f	class:caffe::PoolingProto
set_has_stride_h	caffe.pb.h	/^inline void ConvolutionProto::set_has_stride_h() {$/;"	f	class:caffe::ConvolutionProto
set_has_stride_h	caffe.pb.h	/^inline void PoolingProto::set_has_stride_h() {$/;"	f	class:caffe::PoolingProto
set_has_stride_w	caffe.pb.cc	/^void ConvolutionProto::set_has_stride_w() {$/;"	f	class:caffe::ConvolutionProto
set_has_stride_w	caffe.pb.cc	/^void PoolingProto::set_has_stride_w() {$/;"	f	class:caffe::PoolingProto
set_has_stride_w	caffe.pb.h	/^inline void ConvolutionProto::set_has_stride_w() {$/;"	f	class:caffe::ConvolutionProto
set_has_stride_w	caffe.pb.h	/^inline void PoolingProto::set_has_stride_w() {$/;"	f	class:caffe::PoolingProto
set_has_test_compute_loss	caffe.pb.cc	/^void SolverProto::set_has_test_compute_loss() {$/;"	f	class:caffe::SolverProto
set_has_test_compute_loss	caffe.pb.h	/^inline void SolverProto::set_has_test_compute_loss() {$/;"	f	class:caffe::SolverProto
set_has_test_initialization	caffe.pb.cc	/^void SolverProto::set_has_test_initialization() {$/;"	f	class:caffe::SolverProto
set_has_test_initialization	caffe.pb.h	/^inline void SolverProto::set_has_test_initialization() {$/;"	f	class:caffe::SolverProto
set_has_test_interval	caffe.pb.cc	/^void SolverProto::set_has_test_interval() {$/;"	f	class:caffe::SolverProto
set_has_test_interval	caffe.pb.h	/^inline void SolverProto::set_has_test_interval() {$/;"	f	class:caffe::SolverProto
set_has_train_net	caffe.pb.cc	/^void SolverProto::set_has_train_net() {$/;"	f	class:caffe::SolverProto
set_has_train_net	caffe.pb.h	/^inline void SolverProto::set_has_train_net() {$/;"	f	class:caffe::SolverProto
set_has_train_state	caffe.pb.cc	/^void SolverProto::set_has_train_state() {$/;"	f	class:caffe::SolverProto
set_has_train_state	caffe.pb.h	/^inline void SolverProto::set_has_train_state() {$/;"	f	class:caffe::SolverProto
set_has_type	caffe.pb.cc	/^void FillerParameter::set_has_type() {$/;"	f	class:caffe::FillerParameter
set_has_type	caffe.pb.cc	/^void LayerProto::set_has_type() {$/;"	f	class:caffe::LayerProto
set_has_type	caffe.pb.h	/^inline void FillerParameter::set_has_type() {$/;"	f	class:caffe::FillerParameter
set_has_type	caffe.pb.h	/^inline void LayerProto::set_has_type() {$/;"	f	class:caffe::LayerProto
set_has_use_global_stats	caffe.pb.cc	/^void BatchNormProto::set_has_use_global_stats() {$/;"	f	class:caffe::BatchNormProto
set_has_use_global_stats	caffe.pb.h	/^inline void BatchNormProto::set_has_use_global_stats() {$/;"	f	class:caffe::BatchNormProto
set_has_value	caffe.pb.cc	/^void FillerParameter::set_has_value() {$/;"	f	class:caffe::FillerParameter
set_has_value	caffe.pb.h	/^inline void FillerParameter::set_has_value() {$/;"	f	class:caffe::FillerParameter
set_has_weight	caffe.pb.cc	/^void ModelUpdateProto::set_has_weight() {$/;"	f	class:caffe::ModelUpdateProto
set_has_weight	caffe.pb.cc	/^void NullUpdateProto::set_has_weight() {$/;"	f	class:caffe::NullUpdateProto
set_has_weight	caffe.pb.h	/^inline void ModelUpdateProto::set_has_weight() {$/;"	f	class:caffe::ModelUpdateProto
set_has_weight	caffe.pb.h	/^inline void NullUpdateProto::set_has_weight() {$/;"	f	class:caffe::NullUpdateProto
set_has_weight_decay	caffe.pb.cc	/^void SolverProto::set_has_weight_decay() {$/;"	f	class:caffe::SolverProto
set_has_weight_decay	caffe.pb.h	/^inline void SolverProto::set_has_weight_decay() {$/;"	f	class:caffe::SolverProto
set_has_weight_filler	caffe.pb.cc	/^void ConvolutionProto::set_has_weight_filler() {$/;"	f	class:caffe::ConvolutionProto
set_has_weight_filler	caffe.pb.cc	/^void InnerProductProto::set_has_weight_filler() {$/;"	f	class:caffe::InnerProductProto
set_has_weight_filler	caffe.pb.h	/^inline void ConvolutionProto::set_has_weight_filler() {$/;"	f	class:caffe::ConvolutionProto
set_has_weight_filler	caffe.pb.h	/^inline void InnerProductProto::set_has_weight_filler() {$/;"	f	class:caffe::InnerProductProto
set_has_width	caffe.pb.cc	/^void LoaderProto::set_has_width() {$/;"	f	class:caffe::LoaderProto
set_has_width	caffe.pb.h	/^inline void LoaderProto::set_has_width() {$/;"	f	class:caffe::LoaderProto
set_height	caffe.pb.cc	/^void LoaderProto::set_height(::google::protobuf::uint32 value) {$/;"	f	class:caffe::LoaderProto
set_height	caffe.pb.h	/^inline void LoaderProto::set_height(::google::protobuf::uint32 value) {$/;"	f	class:caffe::LoaderProto
set_in	caffe.pb.cc	/^void BoxingProto::set_in(int index, const ::std::string& value) {$/;"	f	class:caffe::BoxingProto
set_in	caffe.pb.cc	/^void BoxingProto::set_in(int index, const char* value) {$/;"	f	class:caffe::BoxingProto
set_in	caffe.pb.cc	/^void BoxingProto::set_in(int index, const char* value, size_t size) {$/;"	f	class:caffe::BoxingProto
set_in	caffe.pb.cc	/^void ConcatProto::set_in(int index, const ::std::string& value) {$/;"	f	class:caffe::ConcatProto
set_in	caffe.pb.cc	/^void ConcatProto::set_in(int index, const char* value) {$/;"	f	class:caffe::ConcatProto
set_in	caffe.pb.cc	/^void ConcatProto::set_in(int index, const char* value, size_t size) {$/;"	f	class:caffe::ConcatProto
set_in	caffe.pb.cc	/^void ConvolutionProto::set_in(::std::string&& value) {$/;"	f	class:caffe::ConvolutionProto
set_in	caffe.pb.cc	/^void ConvolutionProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::ConvolutionProto
set_in	caffe.pb.cc	/^void ConvolutionProto::set_in(const char* value) {$/;"	f	class:caffe::ConvolutionProto
set_in	caffe.pb.cc	/^void ConvolutionProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::ConvolutionProto
set_in	caffe.pb.cc	/^void CopyProto::set_in(int index, const ::std::string& value) {$/;"	f	class:caffe::CopyProto
set_in	caffe.pb.cc	/^void CopyProto::set_in(int index, const char* value) {$/;"	f	class:caffe::CopyProto
set_in	caffe.pb.cc	/^void CopyProto::set_in(int index, const char* value, size_t size) {$/;"	f	class:caffe::CopyProto
set_in	caffe.pb.cc	/^void InnerProductProto::set_in(::std::string&& value) {$/;"	f	class:caffe::InnerProductProto
set_in	caffe.pb.cc	/^void InnerProductProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::InnerProductProto
set_in	caffe.pb.cc	/^void InnerProductProto::set_in(const char* value) {$/;"	f	class:caffe::InnerProductProto
set_in	caffe.pb.cc	/^void InnerProductProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::InnerProductProto
set_in	caffe.pb.cc	/^void LRNProto::set_in(::std::string&& value) {$/;"	f	class:caffe::LRNProto
set_in	caffe.pb.cc	/^void LRNProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::LRNProto
set_in	caffe.pb.cc	/^void LRNProto::set_in(const char* value) {$/;"	f	class:caffe::LRNProto
set_in	caffe.pb.cc	/^void LRNProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::LRNProto
set_in	caffe.pb.cc	/^void NetProto::set_in(int index, const ::std::string& value) {$/;"	f	class:caffe::NetProto
set_in	caffe.pb.cc	/^void NetProto::set_in(int index, const char* value) {$/;"	f	class:caffe::NetProto
set_in	caffe.pb.cc	/^void NetProto::set_in(int index, const char* value, size_t size) {$/;"	f	class:caffe::NetProto
set_in	caffe.pb.cc	/^void PlaceholderProto::set_in(::std::string&& value) {$/;"	f	class:caffe::PlaceholderProto
set_in	caffe.pb.cc	/^void PlaceholderProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::PlaceholderProto
set_in	caffe.pb.cc	/^void PlaceholderProto::set_in(const char* value) {$/;"	f	class:caffe::PlaceholderProto
set_in	caffe.pb.cc	/^void PlaceholderProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::PlaceholderProto
set_in	caffe.pb.cc	/^void PoolingProto::set_in(::std::string&& value) {$/;"	f	class:caffe::PoolingProto
set_in	caffe.pb.cc	/^void PoolingProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::PoolingProto
set_in	caffe.pb.cc	/^void PoolingProto::set_in(const char* value) {$/;"	f	class:caffe::PoolingProto
set_in	caffe.pb.cc	/^void PoolingProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::PoolingProto
set_in	caffe.pb.cc	/^void ReLUProto::set_in(::std::string&& value) {$/;"	f	class:caffe::ReLUProto
set_in	caffe.pb.cc	/^void ReLUProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::ReLUProto
set_in	caffe.pb.cc	/^void ReLUProto::set_in(const char* value) {$/;"	f	class:caffe::ReLUProto
set_in	caffe.pb.cc	/^void ReLUProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::ReLUProto
set_in	caffe.pb.cc	/^void SigmoidProto::set_in(::std::string&& value) {$/;"	f	class:caffe::SigmoidProto
set_in	caffe.pb.cc	/^void SigmoidProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::SigmoidProto
set_in	caffe.pb.cc	/^void SigmoidProto::set_in(const char* value) {$/;"	f	class:caffe::SigmoidProto
set_in	caffe.pb.cc	/^void SigmoidProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::SigmoidProto
set_in	caffe.pb.cc	/^void SoftmaxProto::set_in(::std::string&& value) {$/;"	f	class:caffe::SoftmaxProto
set_in	caffe.pb.cc	/^void SoftmaxProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::SoftmaxProto
set_in	caffe.pb.cc	/^void SoftmaxProto::set_in(const char* value) {$/;"	f	class:caffe::SoftmaxProto
set_in	caffe.pb.cc	/^void SoftmaxProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::SoftmaxProto
set_in	caffe.pb.cc	/^void SplitProto::set_in(::std::string&& value) {$/;"	f	class:caffe::SplitProto
set_in	caffe.pb.cc	/^void SplitProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::SplitProto
set_in	caffe.pb.cc	/^void SplitProto::set_in(const char* value) {$/;"	f	class:caffe::SplitProto
set_in	caffe.pb.cc	/^void SplitProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::SplitProto
set_in	caffe.pb.cc	/^void StoreProto::set_in(::std::string&& value) {$/;"	f	class:caffe::StoreProto
set_in	caffe.pb.cc	/^void StoreProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::StoreProto
set_in	caffe.pb.cc	/^void StoreProto::set_in(const char* value) {$/;"	f	class:caffe::StoreProto
set_in	caffe.pb.cc	/^void StoreProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::StoreProto
set_in	caffe.pb.h	/^inline void BoxingProto::set_in(int index, const ::std::string& value) {$/;"	f	class:caffe::BoxingProto
set_in	caffe.pb.h	/^inline void BoxingProto::set_in(int index, const char* value) {$/;"	f	class:caffe::BoxingProto
set_in	caffe.pb.h	/^inline void BoxingProto::set_in(int index, const char* value, size_t size) {$/;"	f	class:caffe::BoxingProto
set_in	caffe.pb.h	/^inline void ConcatProto::set_in(int index, const ::std::string& value) {$/;"	f	class:caffe::ConcatProto
set_in	caffe.pb.h	/^inline void ConcatProto::set_in(int index, const char* value) {$/;"	f	class:caffe::ConcatProto
set_in	caffe.pb.h	/^inline void ConcatProto::set_in(int index, const char* value, size_t size) {$/;"	f	class:caffe::ConcatProto
set_in	caffe.pb.h	/^inline void ConvolutionProto::set_in(::std::string&& value) {$/;"	f	class:caffe::ConvolutionProto
set_in	caffe.pb.h	/^inline void ConvolutionProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::ConvolutionProto
set_in	caffe.pb.h	/^inline void ConvolutionProto::set_in(const char* value) {$/;"	f	class:caffe::ConvolutionProto
set_in	caffe.pb.h	/^inline void ConvolutionProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::ConvolutionProto
set_in	caffe.pb.h	/^inline void CopyProto::set_in(int index, const ::std::string& value) {$/;"	f	class:caffe::CopyProto
set_in	caffe.pb.h	/^inline void CopyProto::set_in(int index, const char* value) {$/;"	f	class:caffe::CopyProto
set_in	caffe.pb.h	/^inline void CopyProto::set_in(int index, const char* value, size_t size) {$/;"	f	class:caffe::CopyProto
set_in	caffe.pb.h	/^inline void InnerProductProto::set_in(::std::string&& value) {$/;"	f	class:caffe::InnerProductProto
set_in	caffe.pb.h	/^inline void InnerProductProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::InnerProductProto
set_in	caffe.pb.h	/^inline void InnerProductProto::set_in(const char* value) {$/;"	f	class:caffe::InnerProductProto
set_in	caffe.pb.h	/^inline void InnerProductProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::InnerProductProto
set_in	caffe.pb.h	/^inline void LRNProto::set_in(::std::string&& value) {$/;"	f	class:caffe::LRNProto
set_in	caffe.pb.h	/^inline void LRNProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::LRNProto
set_in	caffe.pb.h	/^inline void LRNProto::set_in(const char* value) {$/;"	f	class:caffe::LRNProto
set_in	caffe.pb.h	/^inline void LRNProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::LRNProto
set_in	caffe.pb.h	/^inline void NetProto::set_in(int index, const ::std::string& value) {$/;"	f	class:caffe::NetProto
set_in	caffe.pb.h	/^inline void NetProto::set_in(int index, const char* value) {$/;"	f	class:caffe::NetProto
set_in	caffe.pb.h	/^inline void NetProto::set_in(int index, const char* value, size_t size) {$/;"	f	class:caffe::NetProto
set_in	caffe.pb.h	/^inline void PlaceholderProto::set_in(::std::string&& value) {$/;"	f	class:caffe::PlaceholderProto
set_in	caffe.pb.h	/^inline void PlaceholderProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::PlaceholderProto
set_in	caffe.pb.h	/^inline void PlaceholderProto::set_in(const char* value) {$/;"	f	class:caffe::PlaceholderProto
set_in	caffe.pb.h	/^inline void PlaceholderProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::PlaceholderProto
set_in	caffe.pb.h	/^inline void PoolingProto::set_in(::std::string&& value) {$/;"	f	class:caffe::PoolingProto
set_in	caffe.pb.h	/^inline void PoolingProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::PoolingProto
set_in	caffe.pb.h	/^inline void PoolingProto::set_in(const char* value) {$/;"	f	class:caffe::PoolingProto
set_in	caffe.pb.h	/^inline void PoolingProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::PoolingProto
set_in	caffe.pb.h	/^inline void ReLUProto::set_in(::std::string&& value) {$/;"	f	class:caffe::ReLUProto
set_in	caffe.pb.h	/^inline void ReLUProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::ReLUProto
set_in	caffe.pb.h	/^inline void ReLUProto::set_in(const char* value) {$/;"	f	class:caffe::ReLUProto
set_in	caffe.pb.h	/^inline void ReLUProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::ReLUProto
set_in	caffe.pb.h	/^inline void SigmoidProto::set_in(::std::string&& value) {$/;"	f	class:caffe::SigmoidProto
set_in	caffe.pb.h	/^inline void SigmoidProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::SigmoidProto
set_in	caffe.pb.h	/^inline void SigmoidProto::set_in(const char* value) {$/;"	f	class:caffe::SigmoidProto
set_in	caffe.pb.h	/^inline void SigmoidProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::SigmoidProto
set_in	caffe.pb.h	/^inline void SoftmaxProto::set_in(::std::string&& value) {$/;"	f	class:caffe::SoftmaxProto
set_in	caffe.pb.h	/^inline void SoftmaxProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::SoftmaxProto
set_in	caffe.pb.h	/^inline void SoftmaxProto::set_in(const char* value) {$/;"	f	class:caffe::SoftmaxProto
set_in	caffe.pb.h	/^inline void SoftmaxProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::SoftmaxProto
set_in	caffe.pb.h	/^inline void SplitProto::set_in(::std::string&& value) {$/;"	f	class:caffe::SplitProto
set_in	caffe.pb.h	/^inline void SplitProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::SplitProto
set_in	caffe.pb.h	/^inline void SplitProto::set_in(const char* value) {$/;"	f	class:caffe::SplitProto
set_in	caffe.pb.h	/^inline void SplitProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::SplitProto
set_in	caffe.pb.h	/^inline void StoreProto::set_in(::std::string&& value) {$/;"	f	class:caffe::StoreProto
set_in	caffe.pb.h	/^inline void StoreProto::set_in(const ::std::string& value) {$/;"	f	class:caffe::StoreProto
set_in	caffe.pb.h	/^inline void StoreProto::set_in(const char* value) {$/;"	f	class:caffe::StoreProto
set_in	caffe.pb.h	/^inline void StoreProto::set_in(const char* value, size_t size) {$/;"	f	class:caffe::StoreProto
set_in_axis	caffe.pb.cc	/^void BoxingProto::set_in_axis(::google::protobuf::int32 value) {$/;"	f	class:caffe::BoxingProto
set_in_axis	caffe.pb.h	/^inline void BoxingProto::set_in_axis(::google::protobuf::int32 value) {$/;"	f	class:caffe::BoxingProto
set_in_envelope	caffe.pb.cc	/^void NetProto::set_in_envelope(::std::string&& value) {$/;"	f	class:caffe::NetProto
set_in_envelope	caffe.pb.cc	/^void NetProto::set_in_envelope(const ::std::string& value) {$/;"	f	class:caffe::NetProto
set_in_envelope	caffe.pb.cc	/^void NetProto::set_in_envelope(const char* value) {$/;"	f	class:caffe::NetProto
set_in_envelope	caffe.pb.cc	/^void NetProto::set_in_envelope(const char* value, size_t size) {$/;"	f	class:caffe::NetProto
set_in_envelope	caffe.pb.h	/^inline void NetProto::set_in_envelope(::std::string&& value) {$/;"	f	class:caffe::NetProto
set_in_envelope	caffe.pb.h	/^inline void NetProto::set_in_envelope(const ::std::string& value) {$/;"	f	class:caffe::NetProto
set_in_envelope	caffe.pb.h	/^inline void NetProto::set_in_envelope(const char* value) {$/;"	f	class:caffe::NetProto
set_in_envelope	caffe.pb.h	/^inline void NetProto::set_in_envelope(const char* value, size_t size) {$/;"	f	class:caffe::NetProto
set_in_num	caffe.pb.cc	/^void BoxingProto::set_in_num(::google::protobuf::uint32 value) {$/;"	f	class:caffe::BoxingProto
set_in_num	caffe.pb.cc	/^void ConcatProto::set_in_num(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConcatProto
set_in_num	caffe.pb.cc	/^void NetProto::set_in_num(::google::protobuf::uint32 value) {$/;"	f	class:caffe::NetProto
set_in_num	caffe.pb.h	/^inline void BoxingProto::set_in_num(::google::protobuf::uint32 value) {$/;"	f	class:caffe::BoxingProto
set_in_num	caffe.pb.h	/^inline void ConcatProto::set_in_num(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConcatProto
set_in_num	caffe.pb.h	/^inline void NetProto::set_in_num(::google::protobuf::uint32 value) {$/;"	f	class:caffe::NetProto
set_in_op	caffe.pb.cc	/^void BoxingProto::set_in_op(::caffe::BoxingOp value) {$/;"	f	class:caffe::BoxingProto
set_in_op	caffe.pb.h	/^inline void BoxingProto::set_in_op(::caffe::BoxingOp value) {$/;"	f	class:caffe::BoxingProto
set_int32_data	caffe.pb.cc	/^void BlobProto::set_int32_data(int index, ::google::protobuf::int32 value) {$/;"	f	class:caffe::BlobProto
set_int32_data	caffe.pb.h	/^inline void BlobProto::set_int32_data(int index, ::google::protobuf::int32 value) {$/;"	f	class:caffe::BlobProto
set_int64_data	caffe.pb.cc	/^void BlobProto::set_int64_data(int index, ::google::protobuf::int64 value) {$/;"	f	class:caffe::BlobProto
set_int64_data	caffe.pb.h	/^inline void BlobProto::set_int64_data(int index, ::google::protobuf::int64 value) {$/;"	f	class:caffe::BlobProto
set_iter	caffe.pb.cc	/^void SolverState::set_iter(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverState
set_iter	caffe.pb.h	/^inline void SolverState::set_iter(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverState
set_k	caffe.pb.cc	/^void LRNProto::set_k(float value) {$/;"	f	class:caffe::LRNProto
set_k	caffe.pb.h	/^inline void LRNProto::set_k(float value) {$/;"	f	class:caffe::LRNProto
set_kernel_h	caffe.pb.cc	/^void ConvolutionProto::set_kernel_h(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_kernel_h	caffe.pb.cc	/^void PoolingProto::set_kernel_h(::google::protobuf::uint32 value) {$/;"	f	class:caffe::PoolingProto
set_kernel_h	caffe.pb.h	/^inline void ConvolutionProto::set_kernel_h(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_kernel_h	caffe.pb.h	/^inline void PoolingProto::set_kernel_h(::google::protobuf::uint32 value) {$/;"	f	class:caffe::PoolingProto
set_kernel_size	caffe.pb.cc	/^void ConvolutionProto::set_kernel_size(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_kernel_size	caffe.pb.cc	/^void PoolingProto::set_kernel_size(::google::protobuf::uint32 value) {$/;"	f	class:caffe::PoolingProto
set_kernel_size	caffe.pb.h	/^inline void ConvolutionProto::set_kernel_size(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_kernel_size	caffe.pb.h	/^inline void PoolingProto::set_kernel_size(::google::protobuf::uint32 value) {$/;"	f	class:caffe::PoolingProto
set_kernel_w	caffe.pb.cc	/^void ConvolutionProto::set_kernel_w(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_kernel_w	caffe.pb.cc	/^void PoolingProto::set_kernel_w(::google::protobuf::uint32 value) {$/;"	f	class:caffe::PoolingProto
set_kernel_w	caffe.pb.h	/^inline void ConvolutionProto::set_kernel_w(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_kernel_w	caffe.pb.h	/^inline void PoolingProto::set_kernel_w(::google::protobuf::uint32 value) {$/;"	f	class:caffe::PoolingProto
set_label	caffe.pb.cc	/^void LoaderProto::set_label(::std::string&& value) {$/;"	f	class:caffe::LoaderProto
set_label	caffe.pb.cc	/^void LoaderProto::set_label(const ::std::string& value) {$/;"	f	class:caffe::LoaderProto
set_label	caffe.pb.cc	/^void LoaderProto::set_label(const char* value) {$/;"	f	class:caffe::LoaderProto
set_label	caffe.pb.cc	/^void LoaderProto::set_label(const char* value, size_t size) {$/;"	f	class:caffe::LoaderProto
set_label	caffe.pb.cc	/^void MultinomialLogisticLossProto::set_label(::std::string&& value) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_label	caffe.pb.cc	/^void MultinomialLogisticLossProto::set_label(const ::std::string& value) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_label	caffe.pb.cc	/^void MultinomialLogisticLossProto::set_label(const char* value) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_label	caffe.pb.cc	/^void MultinomialLogisticLossProto::set_label(const char* value, size_t size) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_label	caffe.pb.h	/^inline void LoaderProto::set_label(::std::string&& value) {$/;"	f	class:caffe::LoaderProto
set_label	caffe.pb.h	/^inline void LoaderProto::set_label(const ::std::string& value) {$/;"	f	class:caffe::LoaderProto
set_label	caffe.pb.h	/^inline void LoaderProto::set_label(const char* value) {$/;"	f	class:caffe::LoaderProto
set_label	caffe.pb.h	/^inline void LoaderProto::set_label(const char* value, size_t size) {$/;"	f	class:caffe::LoaderProto
set_label	caffe.pb.h	/^inline void MultinomialLogisticLossProto::set_label(::std::string&& value) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_label	caffe.pb.h	/^inline void MultinomialLogisticLossProto::set_label(const ::std::string& value) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_label	caffe.pb.h	/^inline void MultinomialLogisticLossProto::set_label(const char* value) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_label	caffe.pb.h	/^inline void MultinomialLogisticLossProto::set_label(const char* value, size_t size) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_layer_seek_pos	caffe.pb.cc	/^void StoreProto::set_layer_seek_pos(int index, ::google::protobuf::int64 value) {$/;"	f	class:caffe::StoreProto
set_layer_seek_pos	caffe.pb.h	/^inline void StoreProto::set_layer_seek_pos(int index, ::google::protobuf::int64 value) {$/;"	f	class:caffe::StoreProto
set_learned_net	caffe.pb.cc	/^void SolverState::set_learned_net(::std::string&& value) {$/;"	f	class:caffe::SolverState
set_learned_net	caffe.pb.cc	/^void SolverState::set_learned_net(const ::std::string& value) {$/;"	f	class:caffe::SolverState
set_learned_net	caffe.pb.cc	/^void SolverState::set_learned_net(const char* value) {$/;"	f	class:caffe::SolverState
set_learned_net	caffe.pb.cc	/^void SolverState::set_learned_net(const char* value, size_t size) {$/;"	f	class:caffe::SolverState
set_learned_net	caffe.pb.h	/^inline void SolverState::set_learned_net(::std::string&& value) {$/;"	f	class:caffe::SolverState
set_learned_net	caffe.pb.h	/^inline void SolverState::set_learned_net(const ::std::string& value) {$/;"	f	class:caffe::SolverState
set_learned_net	caffe.pb.h	/^inline void SolverState::set_learned_net(const char* value) {$/;"	f	class:caffe::SolverState
set_learned_net	caffe.pb.h	/^inline void SolverState::set_learned_net(const char* value, size_t size) {$/;"	f	class:caffe::SolverState
set_level	caffe.pb.cc	/^void NetState::set_level(::google::protobuf::int32 value) {$/;"	f	class:caffe::NetState
set_level	caffe.pb.h	/^inline void NetState::set_level(::google::protobuf::int32 value) {$/;"	f	class:caffe::NetState
set_load_layer_names	caffe.pb.cc	/^void LoadPartialModelProto::set_load_layer_names(int index, const ::std::string& value) {$/;"	f	class:caffe::LoadPartialModelProto
set_load_layer_names	caffe.pb.cc	/^void LoadPartialModelProto::set_load_layer_names(int index, const char* value) {$/;"	f	class:caffe::LoadPartialModelProto
set_load_layer_names	caffe.pb.cc	/^void LoadPartialModelProto::set_load_layer_names(int index, const char* value, size_t size) {$/;"	f	class:caffe::LoadPartialModelProto
set_load_layer_names	caffe.pb.h	/^inline void LoadPartialModelProto::set_load_layer_names(int index, const ::std::string& value) {$/;"	f	class:caffe::LoadPartialModelProto
set_load_layer_names	caffe.pb.h	/^inline void LoadPartialModelProto::set_load_layer_names(int index, const char* value) {$/;"	f	class:caffe::LoadPartialModelProto
set_load_layer_names	caffe.pb.h	/^inline void LoadPartialModelProto::set_load_layer_names(int index, const char* value, size_t size) {$/;"	f	class:caffe::LoadPartialModelProto
set_load_layer_shapes	caffe.pb.cc	/^void LoadPartialModelProto::set_load_layer_shapes(int index, ::google::protobuf::int64 value) {$/;"	f	class:caffe::LoadPartialModelProto
set_load_layer_shapes	caffe.pb.h	/^inline void LoadPartialModelProto::set_load_layer_shapes(int index, ::google::protobuf::int64 value) {$/;"	f	class:caffe::LoadPartialModelProto
set_local_size	caffe.pb.cc	/^void LRNProto::set_local_size(::google::protobuf::uint32 value) {$/;"	f	class:caffe::LRNProto
set_local_size	caffe.pb.h	/^inline void LRNProto::set_local_size(::google::protobuf::uint32 value) {$/;"	f	class:caffe::LRNProto
set_loss	caffe.pb.cc	/^void MultinomialLogisticLossProto::set_loss(::std::string&& value) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_loss	caffe.pb.cc	/^void MultinomialLogisticLossProto::set_loss(const ::std::string& value) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_loss	caffe.pb.cc	/^void MultinomialLogisticLossProto::set_loss(const char* value) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_loss	caffe.pb.cc	/^void MultinomialLogisticLossProto::set_loss(const char* value, size_t size) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_loss	caffe.pb.h	/^inline void MultinomialLogisticLossProto::set_loss(::std::string&& value) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_loss	caffe.pb.h	/^inline void MultinomialLogisticLossProto::set_loss(const ::std::string& value) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_loss	caffe.pb.h	/^inline void MultinomialLogisticLossProto::set_loss(const char* value) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_loss	caffe.pb.h	/^inline void MultinomialLogisticLossProto::set_loss(const char* value, size_t size) {$/;"	f	class:caffe::MultinomialLogisticLossProto
set_lr_mult	caffe.pb.cc	/^void ParamSpec::set_lr_mult(float value) {$/;"	f	class:caffe::ParamSpec
set_lr_mult	caffe.pb.h	/^inline void ParamSpec::set_lr_mult(float value) {$/;"	f	class:caffe::ParamSpec
set_lr_policy	caffe.pb.cc	/^void SolverProto::set_lr_policy(::std::string&& value) {$/;"	f	class:caffe::SolverProto
set_lr_policy	caffe.pb.cc	/^void SolverProto::set_lr_policy(const ::std::string& value) {$/;"	f	class:caffe::SolverProto
set_lr_policy	caffe.pb.cc	/^void SolverProto::set_lr_policy(const char* value) {$/;"	f	class:caffe::SolverProto
set_lr_policy	caffe.pb.cc	/^void SolverProto::set_lr_policy(const char* value, size_t size) {$/;"	f	class:caffe::SolverProto
set_lr_policy	caffe.pb.h	/^inline void SolverProto::set_lr_policy(::std::string&& value) {$/;"	f	class:caffe::SolverProto
set_lr_policy	caffe.pb.h	/^inline void SolverProto::set_lr_policy(const ::std::string& value) {$/;"	f	class:caffe::SolverProto
set_lr_policy	caffe.pb.h	/^inline void SolverProto::set_lr_policy(const char* value) {$/;"	f	class:caffe::SolverProto
set_lr_policy	caffe.pb.h	/^inline void SolverProto::set_lr_policy(const char* value, size_t size) {$/;"	f	class:caffe::SolverProto
set_machine_id	caffe.pb.cc	/^void SolverProto::set_machine_id(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_machine_id	caffe.pb.h	/^inline void SolverProto::set_machine_id(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_max	caffe.pb.cc	/^void FillerParameter::set_max(float value) {$/;"	f	class:caffe::FillerParameter
set_max	caffe.pb.h	/^inline void FillerParameter::set_max(float value) {$/;"	f	class:caffe::FillerParameter
set_max_iter	caffe.pb.cc	/^void SolverProto::set_max_iter(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_max_iter	caffe.pb.h	/^inline void SolverProto::set_max_iter(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_mean	caffe.pb.cc	/^void FillerParameter::set_mean(float value) {$/;"	f	class:caffe::FillerParameter
set_mean	caffe.pb.h	/^inline void FillerParameter::set_mean(float value) {$/;"	f	class:caffe::FillerParameter
set_min	caffe.pb.cc	/^void FillerParameter::set_min(float value) {$/;"	f	class:caffe::FillerParameter
set_min	caffe.pb.h	/^inline void FillerParameter::set_min(float value) {$/;"	f	class:caffe::FillerParameter
set_momentum	caffe.pb.cc	/^void SolverProto::set_momentum(float value) {$/;"	f	class:caffe::SolverProto
set_momentum	caffe.pb.h	/^inline void SolverProto::set_momentum(float value) {$/;"	f	class:caffe::SolverProto
set_moving_average_fraction	caffe.pb.cc	/^void BatchNormProto::set_moving_average_fraction(float value) {$/;"	f	class:caffe::BatchNormProto
set_moving_average_fraction	caffe.pb.h	/^inline void BatchNormProto::set_moving_average_fraction(float value) {$/;"	f	class:caffe::BatchNormProto
set_name	caffe.pb.cc	/^void BlobProto::set_name(::std::string&& value) {$/;"	f	class:caffe::BlobProto
set_name	caffe.pb.cc	/^void BlobProto::set_name(const ::std::string& value) {$/;"	f	class:caffe::BlobProto
set_name	caffe.pb.cc	/^void BlobProto::set_name(const char* value) {$/;"	f	class:caffe::BlobProto
set_name	caffe.pb.cc	/^void BlobProto::set_name(const char* value, size_t size) {$/;"	f	class:caffe::BlobProto
set_name	caffe.pb.cc	/^void LayerProto::set_name(::std::string&& value) {$/;"	f	class:caffe::LayerProto
set_name	caffe.pb.cc	/^void LayerProto::set_name(const ::std::string& value) {$/;"	f	class:caffe::LayerProto
set_name	caffe.pb.cc	/^void LayerProto::set_name(const char* value) {$/;"	f	class:caffe::LayerProto
set_name	caffe.pb.cc	/^void LayerProto::set_name(const char* value, size_t size) {$/;"	f	class:caffe::LayerProto
set_name	caffe.pb.cc	/^void LayerSet::set_name(int index, const ::std::string& value) {$/;"	f	class:caffe::LayerSet
set_name	caffe.pb.cc	/^void LayerSet::set_name(int index, const char* value) {$/;"	f	class:caffe::LayerSet
set_name	caffe.pb.cc	/^void LayerSet::set_name(int index, const char* value, size_t size) {$/;"	f	class:caffe::LayerSet
set_name	caffe.pb.cc	/^void Machine::set_name(::std::string&& value) {$/;"	f	class:caffe::Machine
set_name	caffe.pb.cc	/^void Machine::set_name(const ::std::string& value) {$/;"	f	class:caffe::Machine
set_name	caffe.pb.cc	/^void Machine::set_name(const char* value) {$/;"	f	class:caffe::Machine
set_name	caffe.pb.cc	/^void Machine::set_name(const char* value, size_t size) {$/;"	f	class:caffe::Machine
set_name	caffe.pb.cc	/^void NetParameter::set_name(::std::string&& value) {$/;"	f	class:caffe::NetParameter
set_name	caffe.pb.cc	/^void NetParameter::set_name(const ::std::string& value) {$/;"	f	class:caffe::NetParameter
set_name	caffe.pb.cc	/^void NetParameter::set_name(const char* value) {$/;"	f	class:caffe::NetParameter
set_name	caffe.pb.cc	/^void NetParameter::set_name(const char* value, size_t size) {$/;"	f	class:caffe::NetParameter
set_name	caffe.pb.cc	/^void ParamSpec::set_name(::std::string&& value) {$/;"	f	class:caffe::ParamSpec
set_name	caffe.pb.cc	/^void ParamSpec::set_name(const ::std::string& value) {$/;"	f	class:caffe::ParamSpec
set_name	caffe.pb.cc	/^void ParamSpec::set_name(const char* value) {$/;"	f	class:caffe::ParamSpec
set_name	caffe.pb.cc	/^void ParamSpec::set_name(const char* value, size_t size) {$/;"	f	class:caffe::ParamSpec
set_name	caffe.pb.cc	/^void PlacementGroup::set_name(::std::string&& value) {$/;"	f	class:caffe::PlacementGroup
set_name	caffe.pb.cc	/^void PlacementGroup::set_name(const ::std::string& value) {$/;"	f	class:caffe::PlacementGroup
set_name	caffe.pb.cc	/^void PlacementGroup::set_name(const char* value) {$/;"	f	class:caffe::PlacementGroup
set_name	caffe.pb.cc	/^void PlacementGroup::set_name(const char* value, size_t size) {$/;"	f	class:caffe::PlacementGroup
set_name	caffe.pb.h	/^inline void BlobProto::set_name(::std::string&& value) {$/;"	f	class:caffe::BlobProto
set_name	caffe.pb.h	/^inline void BlobProto::set_name(const ::std::string& value) {$/;"	f	class:caffe::BlobProto
set_name	caffe.pb.h	/^inline void BlobProto::set_name(const char* value) {$/;"	f	class:caffe::BlobProto
set_name	caffe.pb.h	/^inline void BlobProto::set_name(const char* value, size_t size) {$/;"	f	class:caffe::BlobProto
set_name	caffe.pb.h	/^inline void LayerProto::set_name(::std::string&& value) {$/;"	f	class:caffe::LayerProto
set_name	caffe.pb.h	/^inline void LayerProto::set_name(const ::std::string& value) {$/;"	f	class:caffe::LayerProto
set_name	caffe.pb.h	/^inline void LayerProto::set_name(const char* value) {$/;"	f	class:caffe::LayerProto
set_name	caffe.pb.h	/^inline void LayerProto::set_name(const char* value, size_t size) {$/;"	f	class:caffe::LayerProto
set_name	caffe.pb.h	/^inline void LayerSet::set_name(int index, const ::std::string& value) {$/;"	f	class:caffe::LayerSet
set_name	caffe.pb.h	/^inline void LayerSet::set_name(int index, const char* value) {$/;"	f	class:caffe::LayerSet
set_name	caffe.pb.h	/^inline void LayerSet::set_name(int index, const char* value, size_t size) {$/;"	f	class:caffe::LayerSet
set_name	caffe.pb.h	/^inline void Machine::set_name(::std::string&& value) {$/;"	f	class:caffe::Machine
set_name	caffe.pb.h	/^inline void Machine::set_name(const ::std::string& value) {$/;"	f	class:caffe::Machine
set_name	caffe.pb.h	/^inline void Machine::set_name(const char* value) {$/;"	f	class:caffe::Machine
set_name	caffe.pb.h	/^inline void Machine::set_name(const char* value, size_t size) {$/;"	f	class:caffe::Machine
set_name	caffe.pb.h	/^inline void NetParameter::set_name(::std::string&& value) {$/;"	f	class:caffe::NetParameter
set_name	caffe.pb.h	/^inline void NetParameter::set_name(const ::std::string& value) {$/;"	f	class:caffe::NetParameter
set_name	caffe.pb.h	/^inline void NetParameter::set_name(const char* value) {$/;"	f	class:caffe::NetParameter
set_name	caffe.pb.h	/^inline void NetParameter::set_name(const char* value, size_t size) {$/;"	f	class:caffe::NetParameter
set_name	caffe.pb.h	/^inline void ParamSpec::set_name(::std::string&& value) {$/;"	f	class:caffe::ParamSpec
set_name	caffe.pb.h	/^inline void ParamSpec::set_name(const ::std::string& value) {$/;"	f	class:caffe::ParamSpec
set_name	caffe.pb.h	/^inline void ParamSpec::set_name(const char* value) {$/;"	f	class:caffe::ParamSpec
set_name	caffe.pb.h	/^inline void ParamSpec::set_name(const char* value, size_t size) {$/;"	f	class:caffe::ParamSpec
set_name	caffe.pb.h	/^inline void PlacementGroup::set_name(::std::string&& value) {$/;"	f	class:caffe::PlacementGroup
set_name	caffe.pb.h	/^inline void PlacementGroup::set_name(const ::std::string& value) {$/;"	f	class:caffe::PlacementGroup
set_name	caffe.pb.h	/^inline void PlacementGroup::set_name(const char* value) {$/;"	f	class:caffe::PlacementGroup
set_name	caffe.pb.h	/^inline void PlacementGroup::set_name(const char* value, size_t size) {$/;"	f	class:caffe::PlacementGroup
set_negative_slope	caffe.pb.cc	/^void ReLUProto::set_negative_slope(float value) {$/;"	f	class:caffe::ReLUProto
set_negative_slope	caffe.pb.h	/^inline void ReLUProto::set_negative_slope(float value) {$/;"	f	class:caffe::ReLUProto
set_norm_region	caffe.pb.cc	/^void LRNProto::set_norm_region(::caffe::LRNProto_NormRegion value) {$/;"	f	class:caffe::LRNProto
set_norm_region	caffe.pb.h	/^inline void LRNProto::set_norm_region(::caffe::LRNProto_NormRegion value) {$/;"	f	class:caffe::LRNProto
set_num	caffe.pb.cc	/^void CopyProto::set_num(::google::protobuf::uint32 value) {$/;"	f	class:caffe::CopyProto
set_num	caffe.pb.h	/^inline void CopyProto::set_num(::google::protobuf::uint32 value) {$/;"	f	class:caffe::CopyProto
set_num_batch_per_sync	caffe.pb.cc	/^void SolverProto::set_num_batch_per_sync(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_num_batch_per_sync	caffe.pb.h	/^inline void SolverProto::set_num_batch_per_sync(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_num_data_param_copy	caffe.pb.cc	/^void SolverProto::set_num_data_param_copy(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_num_data_param_copy	caffe.pb.h	/^inline void SolverProto::set_num_data_param_copy(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_num_model_param_copy	caffe.pb.cc	/^void SolverProto::set_num_model_param_copy(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_num_model_param_copy	caffe.pb.h	/^inline void SolverProto::set_num_model_param_copy(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_num_output	caffe.pb.cc	/^void ConvolutionProto::set_num_output(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_num_output	caffe.pb.cc	/^void InnerProductProto::set_num_output(::google::protobuf::uint32 value) {$/;"	f	class:caffe::InnerProductProto
set_num_output	caffe.pb.h	/^inline void ConvolutionProto::set_num_output(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_num_output	caffe.pb.h	/^inline void InnerProductProto::set_num_output(::google::protobuf::uint32 value) {$/;"	f	class:caffe::InnerProductProto
set_old_weight	caffe.pb.cc	/^void ModelUpdateProto::set_old_weight(::std::string&& value) {$/;"	f	class:caffe::ModelUpdateProto
set_old_weight	caffe.pb.cc	/^void ModelUpdateProto::set_old_weight(const ::std::string& value) {$/;"	f	class:caffe::ModelUpdateProto
set_old_weight	caffe.pb.cc	/^void ModelUpdateProto::set_old_weight(const char* value) {$/;"	f	class:caffe::ModelUpdateProto
set_old_weight	caffe.pb.cc	/^void ModelUpdateProto::set_old_weight(const char* value, size_t size) {$/;"	f	class:caffe::ModelUpdateProto
set_old_weight	caffe.pb.h	/^inline void ModelUpdateProto::set_old_weight(::std::string&& value) {$/;"	f	class:caffe::ModelUpdateProto
set_old_weight	caffe.pb.h	/^inline void ModelUpdateProto::set_old_weight(const ::std::string& value) {$/;"	f	class:caffe::ModelUpdateProto
set_old_weight	caffe.pb.h	/^inline void ModelUpdateProto::set_old_weight(const char* value) {$/;"	f	class:caffe::ModelUpdateProto
set_old_weight	caffe.pb.h	/^inline void ModelUpdateProto::set_old_weight(const char* value, size_t size) {$/;"	f	class:caffe::ModelUpdateProto
set_out	caffe.pb.cc	/^void BoxingProto::set_out(int index, const ::std::string& value) {$/;"	f	class:caffe::BoxingProto
set_out	caffe.pb.cc	/^void BoxingProto::set_out(int index, const char* value) {$/;"	f	class:caffe::BoxingProto
set_out	caffe.pb.cc	/^void BoxingProto::set_out(int index, const char* value, size_t size) {$/;"	f	class:caffe::BoxingProto
set_out	caffe.pb.cc	/^void ConcatProto::set_out(::std::string&& value) {$/;"	f	class:caffe::ConcatProto
set_out	caffe.pb.cc	/^void ConcatProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::ConcatProto
set_out	caffe.pb.cc	/^void ConcatProto::set_out(const char* value) {$/;"	f	class:caffe::ConcatProto
set_out	caffe.pb.cc	/^void ConcatProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::ConcatProto
set_out	caffe.pb.cc	/^void ConvolutionProto::set_out(::std::string&& value) {$/;"	f	class:caffe::ConvolutionProto
set_out	caffe.pb.cc	/^void ConvolutionProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::ConvolutionProto
set_out	caffe.pb.cc	/^void ConvolutionProto::set_out(const char* value) {$/;"	f	class:caffe::ConvolutionProto
set_out	caffe.pb.cc	/^void ConvolutionProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::ConvolutionProto
set_out	caffe.pb.cc	/^void CopyProto::set_out(int index, const ::std::string& value) {$/;"	f	class:caffe::CopyProto
set_out	caffe.pb.cc	/^void CopyProto::set_out(int index, const char* value) {$/;"	f	class:caffe::CopyProto
set_out	caffe.pb.cc	/^void CopyProto::set_out(int index, const char* value, size_t size) {$/;"	f	class:caffe::CopyProto
set_out	caffe.pb.cc	/^void InnerProductProto::set_out(::std::string&& value) {$/;"	f	class:caffe::InnerProductProto
set_out	caffe.pb.cc	/^void InnerProductProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::InnerProductProto
set_out	caffe.pb.cc	/^void InnerProductProto::set_out(const char* value) {$/;"	f	class:caffe::InnerProductProto
set_out	caffe.pb.cc	/^void InnerProductProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::InnerProductProto
set_out	caffe.pb.cc	/^void LRNProto::set_out(::std::string&& value) {$/;"	f	class:caffe::LRNProto
set_out	caffe.pb.cc	/^void LRNProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::LRNProto
set_out	caffe.pb.cc	/^void LRNProto::set_out(const char* value) {$/;"	f	class:caffe::LRNProto
set_out	caffe.pb.cc	/^void LRNProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::LRNProto
set_out	caffe.pb.cc	/^void LoadPartialModelProto::set_out(::std::string&& value) {$/;"	f	class:caffe::LoadPartialModelProto
set_out	caffe.pb.cc	/^void LoadPartialModelProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::LoadPartialModelProto
set_out	caffe.pb.cc	/^void LoadPartialModelProto::set_out(const char* value) {$/;"	f	class:caffe::LoadPartialModelProto
set_out	caffe.pb.cc	/^void LoadPartialModelProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::LoadPartialModelProto
set_out	caffe.pb.cc	/^void NetProto::set_out(int index, const ::std::string& value) {$/;"	f	class:caffe::NetProto
set_out	caffe.pb.cc	/^void NetProto::set_out(int index, const char* value) {$/;"	f	class:caffe::NetProto
set_out	caffe.pb.cc	/^void NetProto::set_out(int index, const char* value, size_t size) {$/;"	f	class:caffe::NetProto
set_out	caffe.pb.cc	/^void PlaceholderProto::set_out(::std::string&& value) {$/;"	f	class:caffe::PlaceholderProto
set_out	caffe.pb.cc	/^void PlaceholderProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::PlaceholderProto
set_out	caffe.pb.cc	/^void PlaceholderProto::set_out(const char* value) {$/;"	f	class:caffe::PlaceholderProto
set_out	caffe.pb.cc	/^void PlaceholderProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::PlaceholderProto
set_out	caffe.pb.cc	/^void PoolingProto::set_out(::std::string&& value) {$/;"	f	class:caffe::PoolingProto
set_out	caffe.pb.cc	/^void PoolingProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::PoolingProto
set_out	caffe.pb.cc	/^void PoolingProto::set_out(const char* value) {$/;"	f	class:caffe::PoolingProto
set_out	caffe.pb.cc	/^void PoolingProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::PoolingProto
set_out	caffe.pb.cc	/^void ReLUProto::set_out(::std::string&& value) {$/;"	f	class:caffe::ReLUProto
set_out	caffe.pb.cc	/^void ReLUProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::ReLUProto
set_out	caffe.pb.cc	/^void ReLUProto::set_out(const char* value) {$/;"	f	class:caffe::ReLUProto
set_out	caffe.pb.cc	/^void ReLUProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::ReLUProto
set_out	caffe.pb.cc	/^void SigmoidProto::set_out(::std::string&& value) {$/;"	f	class:caffe::SigmoidProto
set_out	caffe.pb.cc	/^void SigmoidProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::SigmoidProto
set_out	caffe.pb.cc	/^void SigmoidProto::set_out(const char* value) {$/;"	f	class:caffe::SigmoidProto
set_out	caffe.pb.cc	/^void SigmoidProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::SigmoidProto
set_out	caffe.pb.cc	/^void SoftmaxProto::set_out(::std::string&& value) {$/;"	f	class:caffe::SoftmaxProto
set_out	caffe.pb.cc	/^void SoftmaxProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::SoftmaxProto
set_out	caffe.pb.cc	/^void SoftmaxProto::set_out(const char* value) {$/;"	f	class:caffe::SoftmaxProto
set_out	caffe.pb.cc	/^void SoftmaxProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::SoftmaxProto
set_out	caffe.pb.cc	/^void SplitProto::set_out(int index, const ::std::string& value) {$/;"	f	class:caffe::SplitProto
set_out	caffe.pb.cc	/^void SplitProto::set_out(int index, const char* value) {$/;"	f	class:caffe::SplitProto
set_out	caffe.pb.cc	/^void SplitProto::set_out(int index, const char* value, size_t size) {$/;"	f	class:caffe::SplitProto
set_out	caffe.pb.cc	/^void StoreProto::set_out(::std::string&& value) {$/;"	f	class:caffe::StoreProto
set_out	caffe.pb.cc	/^void StoreProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::StoreProto
set_out	caffe.pb.cc	/^void StoreProto::set_out(const char* value) {$/;"	f	class:caffe::StoreProto
set_out	caffe.pb.cc	/^void StoreProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::StoreProto
set_out	caffe.pb.h	/^inline void BoxingProto::set_out(int index, const ::std::string& value) {$/;"	f	class:caffe::BoxingProto
set_out	caffe.pb.h	/^inline void BoxingProto::set_out(int index, const char* value) {$/;"	f	class:caffe::BoxingProto
set_out	caffe.pb.h	/^inline void BoxingProto::set_out(int index, const char* value, size_t size) {$/;"	f	class:caffe::BoxingProto
set_out	caffe.pb.h	/^inline void ConcatProto::set_out(::std::string&& value) {$/;"	f	class:caffe::ConcatProto
set_out	caffe.pb.h	/^inline void ConcatProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::ConcatProto
set_out	caffe.pb.h	/^inline void ConcatProto::set_out(const char* value) {$/;"	f	class:caffe::ConcatProto
set_out	caffe.pb.h	/^inline void ConcatProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::ConcatProto
set_out	caffe.pb.h	/^inline void ConvolutionProto::set_out(::std::string&& value) {$/;"	f	class:caffe::ConvolutionProto
set_out	caffe.pb.h	/^inline void ConvolutionProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::ConvolutionProto
set_out	caffe.pb.h	/^inline void ConvolutionProto::set_out(const char* value) {$/;"	f	class:caffe::ConvolutionProto
set_out	caffe.pb.h	/^inline void ConvolutionProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::ConvolutionProto
set_out	caffe.pb.h	/^inline void CopyProto::set_out(int index, const ::std::string& value) {$/;"	f	class:caffe::CopyProto
set_out	caffe.pb.h	/^inline void CopyProto::set_out(int index, const char* value) {$/;"	f	class:caffe::CopyProto
set_out	caffe.pb.h	/^inline void CopyProto::set_out(int index, const char* value, size_t size) {$/;"	f	class:caffe::CopyProto
set_out	caffe.pb.h	/^inline void InnerProductProto::set_out(::std::string&& value) {$/;"	f	class:caffe::InnerProductProto
set_out	caffe.pb.h	/^inline void InnerProductProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::InnerProductProto
set_out	caffe.pb.h	/^inline void InnerProductProto::set_out(const char* value) {$/;"	f	class:caffe::InnerProductProto
set_out	caffe.pb.h	/^inline void InnerProductProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::InnerProductProto
set_out	caffe.pb.h	/^inline void LRNProto::set_out(::std::string&& value) {$/;"	f	class:caffe::LRNProto
set_out	caffe.pb.h	/^inline void LRNProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::LRNProto
set_out	caffe.pb.h	/^inline void LRNProto::set_out(const char* value) {$/;"	f	class:caffe::LRNProto
set_out	caffe.pb.h	/^inline void LRNProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::LRNProto
set_out	caffe.pb.h	/^inline void LoadPartialModelProto::set_out(::std::string&& value) {$/;"	f	class:caffe::LoadPartialModelProto
set_out	caffe.pb.h	/^inline void LoadPartialModelProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::LoadPartialModelProto
set_out	caffe.pb.h	/^inline void LoadPartialModelProto::set_out(const char* value) {$/;"	f	class:caffe::LoadPartialModelProto
set_out	caffe.pb.h	/^inline void LoadPartialModelProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::LoadPartialModelProto
set_out	caffe.pb.h	/^inline void NetProto::set_out(int index, const ::std::string& value) {$/;"	f	class:caffe::NetProto
set_out	caffe.pb.h	/^inline void NetProto::set_out(int index, const char* value) {$/;"	f	class:caffe::NetProto
set_out	caffe.pb.h	/^inline void NetProto::set_out(int index, const char* value, size_t size) {$/;"	f	class:caffe::NetProto
set_out	caffe.pb.h	/^inline void PlaceholderProto::set_out(::std::string&& value) {$/;"	f	class:caffe::PlaceholderProto
set_out	caffe.pb.h	/^inline void PlaceholderProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::PlaceholderProto
set_out	caffe.pb.h	/^inline void PlaceholderProto::set_out(const char* value) {$/;"	f	class:caffe::PlaceholderProto
set_out	caffe.pb.h	/^inline void PlaceholderProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::PlaceholderProto
set_out	caffe.pb.h	/^inline void PoolingProto::set_out(::std::string&& value) {$/;"	f	class:caffe::PoolingProto
set_out	caffe.pb.h	/^inline void PoolingProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::PoolingProto
set_out	caffe.pb.h	/^inline void PoolingProto::set_out(const char* value) {$/;"	f	class:caffe::PoolingProto
set_out	caffe.pb.h	/^inline void PoolingProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::PoolingProto
set_out	caffe.pb.h	/^inline void ReLUProto::set_out(::std::string&& value) {$/;"	f	class:caffe::ReLUProto
set_out	caffe.pb.h	/^inline void ReLUProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::ReLUProto
set_out	caffe.pb.h	/^inline void ReLUProto::set_out(const char* value) {$/;"	f	class:caffe::ReLUProto
set_out	caffe.pb.h	/^inline void ReLUProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::ReLUProto
set_out	caffe.pb.h	/^inline void SigmoidProto::set_out(::std::string&& value) {$/;"	f	class:caffe::SigmoidProto
set_out	caffe.pb.h	/^inline void SigmoidProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::SigmoidProto
set_out	caffe.pb.h	/^inline void SigmoidProto::set_out(const char* value) {$/;"	f	class:caffe::SigmoidProto
set_out	caffe.pb.h	/^inline void SigmoidProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::SigmoidProto
set_out	caffe.pb.h	/^inline void SoftmaxProto::set_out(::std::string&& value) {$/;"	f	class:caffe::SoftmaxProto
set_out	caffe.pb.h	/^inline void SoftmaxProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::SoftmaxProto
set_out	caffe.pb.h	/^inline void SoftmaxProto::set_out(const char* value) {$/;"	f	class:caffe::SoftmaxProto
set_out	caffe.pb.h	/^inline void SoftmaxProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::SoftmaxProto
set_out	caffe.pb.h	/^inline void SplitProto::set_out(int index, const ::std::string& value) {$/;"	f	class:caffe::SplitProto
set_out	caffe.pb.h	/^inline void SplitProto::set_out(int index, const char* value) {$/;"	f	class:caffe::SplitProto
set_out	caffe.pb.h	/^inline void SplitProto::set_out(int index, const char* value, size_t size) {$/;"	f	class:caffe::SplitProto
set_out	caffe.pb.h	/^inline void StoreProto::set_out(::std::string&& value) {$/;"	f	class:caffe::StoreProto
set_out	caffe.pb.h	/^inline void StoreProto::set_out(const ::std::string& value) {$/;"	f	class:caffe::StoreProto
set_out	caffe.pb.h	/^inline void StoreProto::set_out(const char* value) {$/;"	f	class:caffe::StoreProto
set_out	caffe.pb.h	/^inline void StoreProto::set_out(const char* value, size_t size) {$/;"	f	class:caffe::StoreProto
set_out_axis	caffe.pb.cc	/^void BoxingProto::set_out_axis(::google::protobuf::int32 value) {$/;"	f	class:caffe::BoxingProto
set_out_axis	caffe.pb.h	/^inline void BoxingProto::set_out_axis(::google::protobuf::int32 value) {$/;"	f	class:caffe::BoxingProto
set_out_envelope	caffe.pb.cc	/^void NetProto::set_out_envelope(::std::string&& value) {$/;"	f	class:caffe::NetProto
set_out_envelope	caffe.pb.cc	/^void NetProto::set_out_envelope(const ::std::string& value) {$/;"	f	class:caffe::NetProto
set_out_envelope	caffe.pb.cc	/^void NetProto::set_out_envelope(const char* value) {$/;"	f	class:caffe::NetProto
set_out_envelope	caffe.pb.cc	/^void NetProto::set_out_envelope(const char* value, size_t size) {$/;"	f	class:caffe::NetProto
set_out_envelope	caffe.pb.h	/^inline void NetProto::set_out_envelope(::std::string&& value) {$/;"	f	class:caffe::NetProto
set_out_envelope	caffe.pb.h	/^inline void NetProto::set_out_envelope(const ::std::string& value) {$/;"	f	class:caffe::NetProto
set_out_envelope	caffe.pb.h	/^inline void NetProto::set_out_envelope(const char* value) {$/;"	f	class:caffe::NetProto
set_out_envelope	caffe.pb.h	/^inline void NetProto::set_out_envelope(const char* value, size_t size) {$/;"	f	class:caffe::NetProto
set_out_num	caffe.pb.cc	/^void BoxingProto::set_out_num(::google::protobuf::uint32 value) {$/;"	f	class:caffe::BoxingProto
set_out_num	caffe.pb.cc	/^void NetProto::set_out_num(::google::protobuf::uint32 value) {$/;"	f	class:caffe::NetProto
set_out_num	caffe.pb.cc	/^void SplitProto::set_out_num(::google::protobuf::uint32 value) {$/;"	f	class:caffe::SplitProto
set_out_num	caffe.pb.h	/^inline void BoxingProto::set_out_num(::google::protobuf::uint32 value) {$/;"	f	class:caffe::BoxingProto
set_out_num	caffe.pb.h	/^inline void NetProto::set_out_num(::google::protobuf::uint32 value) {$/;"	f	class:caffe::NetProto
set_out_num	caffe.pb.h	/^inline void SplitProto::set_out_num(::google::protobuf::uint32 value) {$/;"	f	class:caffe::SplitProto
set_out_op	caffe.pb.cc	/^void BoxingProto::set_out_op(::caffe::BoxingOp value) {$/;"	f	class:caffe::BoxingProto
set_out_op	caffe.pb.h	/^inline void BoxingProto::set_out_op(::caffe::BoxingOp value) {$/;"	f	class:caffe::BoxingProto
set_pad	caffe.pb.cc	/^void ConvolutionProto::set_pad(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_pad	caffe.pb.cc	/^void PoolingProto::set_pad(::google::protobuf::uint32 value) {$/;"	f	class:caffe::PoolingProto
set_pad	caffe.pb.h	/^inline void ConvolutionProto::set_pad(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_pad	caffe.pb.h	/^inline void PoolingProto::set_pad(::google::protobuf::uint32 value) {$/;"	f	class:caffe::PoolingProto
set_pad_h	caffe.pb.cc	/^void ConvolutionProto::set_pad_h(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_pad_h	caffe.pb.cc	/^void PoolingProto::set_pad_h(::google::protobuf::uint32 value) {$/;"	f	class:caffe::PoolingProto
set_pad_h	caffe.pb.h	/^inline void ConvolutionProto::set_pad_h(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_pad_h	caffe.pb.h	/^inline void PoolingProto::set_pad_h(::google::protobuf::uint32 value) {$/;"	f	class:caffe::PoolingProto
set_pad_w	caffe.pb.cc	/^void ConvolutionProto::set_pad_w(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_pad_w	caffe.pb.cc	/^void PoolingProto::set_pad_w(::google::protobuf::uint32 value) {$/;"	f	class:caffe::PoolingProto
set_pad_w	caffe.pb.h	/^inline void ConvolutionProto::set_pad_w(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_pad_w	caffe.pb.h	/^inline void PoolingProto::set_pad_w(::google::protobuf::uint32 value) {$/;"	f	class:caffe::PoolingProto
set_parallel_policy	caffe.pb.cc	/^void PlacementGroup::set_parallel_policy(::caffe::ParallelPolicy value) {$/;"	f	class:caffe::PlacementGroup
set_parallel_policy	caffe.pb.h	/^inline void PlacementGroup::set_parallel_policy(::caffe::ParallelPolicy value) {$/;"	f	class:caffe::PlacementGroup
set_phase	caffe.pb.cc	/^void NetState::set_phase(::caffe::Phase value) {$/;"	f	class:caffe::NetState
set_phase	caffe.pb.h	/^inline void NetState::set_phase(::caffe::Phase value) {$/;"	f	class:caffe::NetState
set_piece_size	caffe.pb.cc	/^void LoaderProto::set_piece_size(::google::protobuf::uint32 value) {$/;"	f	class:caffe::LoaderProto
set_piece_size	caffe.pb.h	/^inline void LoaderProto::set_piece_size(::google::protobuf::uint32 value) {$/;"	f	class:caffe::LoaderProto
set_pool	caffe.pb.cc	/^void PoolingProto::set_pool(::caffe::PoolingProto_PoolMethod value) {$/;"	f	class:caffe::PoolingProto
set_pool	caffe.pb.h	/^inline void PoolingProto::set_pool(::caffe::PoolingProto_PoolMethod value) {$/;"	f	class:caffe::PoolingProto
set_port	caffe.pb.cc	/^void Machine::set_port(::std::string&& value) {$/;"	f	class:caffe::Machine
set_port	caffe.pb.cc	/^void Machine::set_port(const ::std::string& value) {$/;"	f	class:caffe::Machine
set_port	caffe.pb.cc	/^void Machine::set_port(const char* value) {$/;"	f	class:caffe::Machine
set_port	caffe.pb.cc	/^void Machine::set_port(const char* value, size_t size) {$/;"	f	class:caffe::Machine
set_port	caffe.pb.h	/^inline void Machine::set_port(::std::string&& value) {$/;"	f	class:caffe::Machine
set_port	caffe.pb.h	/^inline void Machine::set_port(const ::std::string& value) {$/;"	f	class:caffe::Machine
set_port	caffe.pb.h	/^inline void Machine::set_port(const char* value) {$/;"	f	class:caffe::Machine
set_port	caffe.pb.h	/^inline void Machine::set_port(const char* value, size_t size) {$/;"	f	class:caffe::Machine
set_power	caffe.pb.cc	/^void SolverProto::set_power(float value) {$/;"	f	class:caffe::SolverProto
set_power	caffe.pb.h	/^inline void SolverProto::set_power(float value) {$/;"	f	class:caffe::SolverProto
set_random_seed	caffe.pb.cc	/^void SolverProto::set_random_seed(::google::protobuf::int64 value) {$/;"	f	class:caffe::SolverProto
set_random_seed	caffe.pb.h	/^inline void SolverProto::set_random_seed(::google::protobuf::int64 value) {$/;"	f	class:caffe::SolverProto
set_regularization_type	caffe.pb.cc	/^void SolverProto::set_regularization_type(::std::string&& value) {$/;"	f	class:caffe::SolverProto
set_regularization_type	caffe.pb.cc	/^void SolverProto::set_regularization_type(const ::std::string& value) {$/;"	f	class:caffe::SolverProto
set_regularization_type	caffe.pb.cc	/^void SolverProto::set_regularization_type(const char* value) {$/;"	f	class:caffe::SolverProto
set_regularization_type	caffe.pb.cc	/^void SolverProto::set_regularization_type(const char* value, size_t size) {$/;"	f	class:caffe::SolverProto
set_regularization_type	caffe.pb.h	/^inline void SolverProto::set_regularization_type(::std::string&& value) {$/;"	f	class:caffe::SolverProto
set_regularization_type	caffe.pb.h	/^inline void SolverProto::set_regularization_type(const ::std::string& value) {$/;"	f	class:caffe::SolverProto
set_regularization_type	caffe.pb.h	/^inline void SolverProto::set_regularization_type(const char* value) {$/;"	f	class:caffe::SolverProto
set_regularization_type	caffe.pb.h	/^inline void SolverProto::set_regularization_type(const char* value, size_t size) {$/;"	f	class:caffe::SolverProto
set_resource	caffe.pb.cc	/^void SolverProto::set_resource(::std::string&& value) {$/;"	f	class:caffe::SolverProto
set_resource	caffe.pb.cc	/^void SolverProto::set_resource(const ::std::string& value) {$/;"	f	class:caffe::SolverProto
set_resource	caffe.pb.cc	/^void SolverProto::set_resource(const char* value) {$/;"	f	class:caffe::SolverProto
set_resource	caffe.pb.cc	/^void SolverProto::set_resource(const char* value, size_t size) {$/;"	f	class:caffe::SolverProto
set_resource	caffe.pb.h	/^inline void SolverProto::set_resource(::std::string&& value) {$/;"	f	class:caffe::SolverProto
set_resource	caffe.pb.h	/^inline void SolverProto::set_resource(const ::std::string& value) {$/;"	f	class:caffe::SolverProto
set_resource	caffe.pb.h	/^inline void SolverProto::set_resource(const char* value) {$/;"	f	class:caffe::SolverProto
set_resource	caffe.pb.h	/^inline void SolverProto::set_resource(const char* value, size_t size) {$/;"	f	class:caffe::SolverProto
set_shape	caffe.pb.cc	/^void BlobProto::set_shape(::google::protobuf::int64 value) {$/;"	f	class:caffe::BlobProto
set_shape	caffe.pb.h	/^inline void BlobProto::set_shape(::google::protobuf::int64 value) {$/;"	f	class:caffe::BlobProto
set_share_mode	caffe.pb.cc	/^void ParamSpec::set_share_mode(::caffe::ParamSpec_DimCheckMode value) {$/;"	f	class:caffe::ParamSpec
set_share_mode	caffe.pb.h	/^inline void ParamSpec::set_share_mode(::caffe::ParamSpec_DimCheckMode value) {$/;"	f	class:caffe::ParamSpec
set_snapshot	caffe.pb.cc	/^void SolverProto::set_snapshot(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_snapshot	caffe.pb.h	/^inline void SolverProto::set_snapshot(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_snapshot_after_train	caffe.pb.cc	/^void SolverProto::set_snapshot_after_train(bool value) {$/;"	f	class:caffe::SolverProto
set_snapshot_after_train	caffe.pb.h	/^inline void SolverProto::set_snapshot_after_train(bool value) {$/;"	f	class:caffe::SolverProto
set_snapshot_diff	caffe.pb.cc	/^void SolverProto::set_snapshot_diff(bool value) {$/;"	f	class:caffe::SolverProto
set_snapshot_diff	caffe.pb.h	/^inline void SolverProto::set_snapshot_diff(bool value) {$/;"	f	class:caffe::SolverProto
set_snapshot_prefix	caffe.pb.cc	/^void SolverProto::set_snapshot_prefix(::std::string&& value) {$/;"	f	class:caffe::SolverProto
set_snapshot_prefix	caffe.pb.cc	/^void SolverProto::set_snapshot_prefix(const ::std::string& value) {$/;"	f	class:caffe::SolverProto
set_snapshot_prefix	caffe.pb.cc	/^void SolverProto::set_snapshot_prefix(const char* value) {$/;"	f	class:caffe::SolverProto
set_snapshot_prefix	caffe.pb.cc	/^void SolverProto::set_snapshot_prefix(const char* value, size_t size) {$/;"	f	class:caffe::SolverProto
set_snapshot_prefix	caffe.pb.h	/^inline void SolverProto::set_snapshot_prefix(::std::string&& value) {$/;"	f	class:caffe::SolverProto
set_snapshot_prefix	caffe.pb.h	/^inline void SolverProto::set_snapshot_prefix(const ::std::string& value) {$/;"	f	class:caffe::SolverProto
set_snapshot_prefix	caffe.pb.h	/^inline void SolverProto::set_snapshot_prefix(const char* value) {$/;"	f	class:caffe::SolverProto
set_snapshot_prefix	caffe.pb.h	/^inline void SolverProto::set_snapshot_prefix(const char* value, size_t size) {$/;"	f	class:caffe::SolverProto
set_solver_type	caffe.pb.cc	/^void SolverProto::set_solver_type(::caffe::SolverProto_SolverType value) {$/;"	f	class:caffe::SolverProto
set_solver_type	caffe.pb.h	/^inline void SolverProto::set_solver_type(::caffe::SolverProto_SolverType value) {$/;"	f	class:caffe::SolverProto
set_source	caffe.pb.cc	/^void LoaderProto::set_source(::std::string&& value) {$/;"	f	class:caffe::LoaderProto
set_source	caffe.pb.cc	/^void LoaderProto::set_source(const ::std::string& value) {$/;"	f	class:caffe::LoaderProto
set_source	caffe.pb.cc	/^void LoaderProto::set_source(const char* value) {$/;"	f	class:caffe::LoaderProto
set_source	caffe.pb.cc	/^void LoaderProto::set_source(const char* value, size_t size) {$/;"	f	class:caffe::LoaderProto
set_source	caffe.pb.h	/^inline void LoaderProto::set_source(::std::string&& value) {$/;"	f	class:caffe::LoaderProto
set_source	caffe.pb.h	/^inline void LoaderProto::set_source(const ::std::string& value) {$/;"	f	class:caffe::LoaderProto
set_source	caffe.pb.h	/^inline void LoaderProto::set_source(const char* value) {$/;"	f	class:caffe::LoaderProto
set_source	caffe.pb.h	/^inline void LoaderProto::set_source(const char* value, size_t size) {$/;"	f	class:caffe::LoaderProto
set_sparse	caffe.pb.cc	/^void FillerParameter::set_sparse(::google::protobuf::int32 value) {$/;"	f	class:caffe::FillerParameter
set_sparse	caffe.pb.h	/^inline void FillerParameter::set_sparse(::google::protobuf::int32 value) {$/;"	f	class:caffe::FillerParameter
set_stage	caffe.pb.cc	/^void NetState::set_stage(int index, const ::std::string& value) {$/;"	f	class:caffe::NetState
set_stage	caffe.pb.cc	/^void NetState::set_stage(int index, const char* value) {$/;"	f	class:caffe::NetState
set_stage	caffe.pb.cc	/^void NetState::set_stage(int index, const char* value, size_t size) {$/;"	f	class:caffe::NetState
set_stage	caffe.pb.h	/^inline void NetState::set_stage(int index, const ::std::string& value) {$/;"	f	class:caffe::NetState
set_stage	caffe.pb.h	/^inline void NetState::set_stage(int index, const char* value) {$/;"	f	class:caffe::NetState
set_stage	caffe.pb.h	/^inline void NetState::set_stage(int index, const char* value, size_t size) {$/;"	f	class:caffe::NetState
set_std	caffe.pb.cc	/^void FillerParameter::set_std(float value) {$/;"	f	class:caffe::FillerParameter
set_std	caffe.pb.h	/^inline void FillerParameter::set_std(float value) {$/;"	f	class:caffe::FillerParameter
set_stepsize	caffe.pb.cc	/^void SolverProto::set_stepsize(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_stepsize	caffe.pb.h	/^inline void SolverProto::set_stepsize(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_stepvalue	caffe.pb.cc	/^void SolverProto::set_stepvalue(int index, ::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_stepvalue	caffe.pb.h	/^inline void SolverProto::set_stepvalue(int index, ::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_stop	caffe.pb.cc	/^void StoreProto::set_stop(bool value) {$/;"	f	class:caffe::StoreProto
set_stop	caffe.pb.h	/^inline void StoreProto::set_stop(bool value) {$/;"	f	class:caffe::StoreProto
set_store_layer_names	caffe.pb.cc	/^void StoreProto::set_store_layer_names(int index, const ::std::string& value) {$/;"	f	class:caffe::StoreProto
set_store_layer_names	caffe.pb.cc	/^void StoreProto::set_store_layer_names(int index, const char* value) {$/;"	f	class:caffe::StoreProto
set_store_layer_names	caffe.pb.cc	/^void StoreProto::set_store_layer_names(int index, const char* value, size_t size) {$/;"	f	class:caffe::StoreProto
set_store_layer_names	caffe.pb.h	/^inline void StoreProto::set_store_layer_names(int index, const ::std::string& value) {$/;"	f	class:caffe::StoreProto
set_store_layer_names	caffe.pb.h	/^inline void StoreProto::set_store_layer_names(int index, const char* value) {$/;"	f	class:caffe::StoreProto
set_store_layer_names	caffe.pb.h	/^inline void StoreProto::set_store_layer_names(int index, const char* value, size_t size) {$/;"	f	class:caffe::StoreProto
set_store_layer_shapes	caffe.pb.cc	/^void StoreProto::set_store_layer_shapes(int index, ::google::protobuf::int64 value) {$/;"	f	class:caffe::StoreProto
set_store_layer_shapes	caffe.pb.h	/^inline void StoreProto::set_store_layer_shapes(int index, ::google::protobuf::int64 value) {$/;"	f	class:caffe::StoreProto
set_strategy	caffe.pb.cc	/^void SolverProto::set_strategy(::std::string&& value) {$/;"	f	class:caffe::SolverProto
set_strategy	caffe.pb.cc	/^void SolverProto::set_strategy(const ::std::string& value) {$/;"	f	class:caffe::SolverProto
set_strategy	caffe.pb.cc	/^void SolverProto::set_strategy(const char* value) {$/;"	f	class:caffe::SolverProto
set_strategy	caffe.pb.cc	/^void SolverProto::set_strategy(const char* value, size_t size) {$/;"	f	class:caffe::SolverProto
set_strategy	caffe.pb.h	/^inline void SolverProto::set_strategy(::std::string&& value) {$/;"	f	class:caffe::SolverProto
set_strategy	caffe.pb.h	/^inline void SolverProto::set_strategy(const ::std::string& value) {$/;"	f	class:caffe::SolverProto
set_strategy	caffe.pb.h	/^inline void SolverProto::set_strategy(const char* value) {$/;"	f	class:caffe::SolverProto
set_strategy	caffe.pb.h	/^inline void SolverProto::set_strategy(const char* value, size_t size) {$/;"	f	class:caffe::SolverProto
set_stride	caffe.pb.cc	/^void ConvolutionProto::set_stride(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_stride	caffe.pb.cc	/^void PoolingProto::set_stride(::google::protobuf::uint32 value) {$/;"	f	class:caffe::PoolingProto
set_stride	caffe.pb.h	/^inline void ConvolutionProto::set_stride(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_stride	caffe.pb.h	/^inline void PoolingProto::set_stride(::google::protobuf::uint32 value) {$/;"	f	class:caffe::PoolingProto
set_stride_h	caffe.pb.cc	/^void ConvolutionProto::set_stride_h(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_stride_h	caffe.pb.cc	/^void PoolingProto::set_stride_h(::google::protobuf::uint32 value) {$/;"	f	class:caffe::PoolingProto
set_stride_h	caffe.pb.h	/^inline void ConvolutionProto::set_stride_h(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_stride_h	caffe.pb.h	/^inline void PoolingProto::set_stride_h(::google::protobuf::uint32 value) {$/;"	f	class:caffe::PoolingProto
set_stride_w	caffe.pb.cc	/^void ConvolutionProto::set_stride_w(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_stride_w	caffe.pb.cc	/^void PoolingProto::set_stride_w(::google::protobuf::uint32 value) {$/;"	f	class:caffe::PoolingProto
set_stride_w	caffe.pb.h	/^inline void ConvolutionProto::set_stride_w(::google::protobuf::uint32 value) {$/;"	f	class:caffe::ConvolutionProto
set_stride_w	caffe.pb.h	/^inline void PoolingProto::set_stride_w(::google::protobuf::uint32 value) {$/;"	f	class:caffe::PoolingProto
set_string_data	caffe.pb.cc	/^void BlobProto::set_string_data(int index, const ::std::string& value) {$/;"	f	class:caffe::BlobProto
set_string_data	caffe.pb.cc	/^void BlobProto::set_string_data(int index, const char* value) {$/;"	f	class:caffe::BlobProto
set_string_data	caffe.pb.cc	/^void BlobProto::set_string_data(int index, const void* value, size_t size) {$/;"	f	class:caffe::BlobProto
set_string_data	caffe.pb.h	/^inline void BlobProto::set_string_data(int index, const ::std::string& value) {$/;"	f	class:caffe::BlobProto
set_string_data	caffe.pb.h	/^inline void BlobProto::set_string_data(int index, const char* value) {$/;"	f	class:caffe::BlobProto
set_string_data	caffe.pb.h	/^inline void BlobProto::set_string_data(int index, const void* value, size_t size) {$/;"	f	class:caffe::BlobProto
set_test_compute_loss	caffe.pb.cc	/^void SolverProto::set_test_compute_loss(bool value) {$/;"	f	class:caffe::SolverProto
set_test_compute_loss	caffe.pb.h	/^inline void SolverProto::set_test_compute_loss(bool value) {$/;"	f	class:caffe::SolverProto
set_test_initialization	caffe.pb.cc	/^void SolverProto::set_test_initialization(bool value) {$/;"	f	class:caffe::SolverProto
set_test_initialization	caffe.pb.h	/^inline void SolverProto::set_test_initialization(bool value) {$/;"	f	class:caffe::SolverProto
set_test_interval	caffe.pb.cc	/^void SolverProto::set_test_interval(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_test_interval	caffe.pb.h	/^inline void SolverProto::set_test_interval(::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_test_iter	caffe.pb.cc	/^void SolverProto::set_test_iter(int index, ::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_test_iter	caffe.pb.h	/^inline void SolverProto::set_test_iter(int index, ::google::protobuf::int32 value) {$/;"	f	class:caffe::SolverProto
set_test_net	caffe.pb.cc	/^void SolverProto::set_test_net(int index, const ::std::string& value) {$/;"	f	class:caffe::SolverProto
set_test_net	caffe.pb.cc	/^void SolverProto::set_test_net(int index, const char* value) {$/;"	f	class:caffe::SolverProto
set_test_net	caffe.pb.cc	/^void SolverProto::set_test_net(int index, const char* value, size_t size) {$/;"	f	class:caffe::SolverProto
set_test_net	caffe.pb.h	/^inline void SolverProto::set_test_net(int index, const ::std::string& value) {$/;"	f	class:caffe::SolverProto
set_test_net	caffe.pb.h	/^inline void SolverProto::set_test_net(int index, const char* value) {$/;"	f	class:caffe::SolverProto
set_test_net	caffe.pb.h	/^inline void SolverProto::set_test_net(int index, const char* value, size_t size) {$/;"	f	class:caffe::SolverProto
set_train_net	caffe.pb.cc	/^void SolverProto::set_train_net(::std::string&& value) {$/;"	f	class:caffe::SolverProto
set_train_net	caffe.pb.cc	/^void SolverProto::set_train_net(const ::std::string& value) {$/;"	f	class:caffe::SolverProto
set_train_net	caffe.pb.cc	/^void SolverProto::set_train_net(const char* value) {$/;"	f	class:caffe::SolverProto
set_train_net	caffe.pb.cc	/^void SolverProto::set_train_net(const char* value, size_t size) {$/;"	f	class:caffe::SolverProto
set_train_net	caffe.pb.h	/^inline void SolverProto::set_train_net(::std::string&& value) {$/;"	f	class:caffe::SolverProto
set_train_net	caffe.pb.h	/^inline void SolverProto::set_train_net(const ::std::string& value) {$/;"	f	class:caffe::SolverProto
set_train_net	caffe.pb.h	/^inline void SolverProto::set_train_net(const char* value) {$/;"	f	class:caffe::SolverProto
set_train_net	caffe.pb.h	/^inline void SolverProto::set_train_net(const char* value, size_t size) {$/;"	f	class:caffe::SolverProto
set_type	caffe.pb.cc	/^void FillerParameter::set_type(::std::string&& value) {$/;"	f	class:caffe::FillerParameter
set_type	caffe.pb.cc	/^void FillerParameter::set_type(const ::std::string& value) {$/;"	f	class:caffe::FillerParameter
set_type	caffe.pb.cc	/^void FillerParameter::set_type(const char* value) {$/;"	f	class:caffe::FillerParameter
set_type	caffe.pb.cc	/^void FillerParameter::set_type(const char* value, size_t size) {$/;"	f	class:caffe::FillerParameter
set_type	caffe.pb.cc	/^void LayerProto::set_type(::std::string&& value) {$/;"	f	class:caffe::LayerProto
set_type	caffe.pb.cc	/^void LayerProto::set_type(const ::std::string& value) {$/;"	f	class:caffe::LayerProto
set_type	caffe.pb.cc	/^void LayerProto::set_type(const char* value) {$/;"	f	class:caffe::LayerProto
set_type	caffe.pb.cc	/^void LayerProto::set_type(const char* value, size_t size) {$/;"	f	class:caffe::LayerProto
set_type	caffe.pb.h	/^inline void FillerParameter::set_type(::std::string&& value) {$/;"	f	class:caffe::FillerParameter
set_type	caffe.pb.h	/^inline void FillerParameter::set_type(const ::std::string& value) {$/;"	f	class:caffe::FillerParameter
set_type	caffe.pb.h	/^inline void FillerParameter::set_type(const char* value) {$/;"	f	class:caffe::FillerParameter
set_type	caffe.pb.h	/^inline void FillerParameter::set_type(const char* value, size_t size) {$/;"	f	class:caffe::FillerParameter
set_type	caffe.pb.h	/^inline void LayerProto::set_type(::std::string&& value) {$/;"	f	class:caffe::LayerProto
set_type	caffe.pb.h	/^inline void LayerProto::set_type(const ::std::string& value) {$/;"	f	class:caffe::LayerProto
set_type	caffe.pb.h	/^inline void LayerProto::set_type(const char* value) {$/;"	f	class:caffe::LayerProto
set_type	caffe.pb.h	/^inline void LayerProto::set_type(const char* value, size_t size) {$/;"	f	class:caffe::LayerProto
set_use_global_stats	caffe.pb.cc	/^void BatchNormProto::set_use_global_stats(bool value) {$/;"	f	class:caffe::BatchNormProto
set_use_global_stats	caffe.pb.h	/^inline void BatchNormProto::set_use_global_stats(bool value) {$/;"	f	class:caffe::BatchNormProto
set_value	caffe.pb.cc	/^void FillerParameter::set_value(float value) {$/;"	f	class:caffe::FillerParameter
set_value	caffe.pb.h	/^inline void FillerParameter::set_value(float value) {$/;"	f	class:caffe::FillerParameter
set_weight	caffe.pb.cc	/^void ModelUpdateProto::set_weight(::std::string&& value) {$/;"	f	class:caffe::ModelUpdateProto
set_weight	caffe.pb.cc	/^void ModelUpdateProto::set_weight(const ::std::string& value) {$/;"	f	class:caffe::ModelUpdateProto
set_weight	caffe.pb.cc	/^void ModelUpdateProto::set_weight(const char* value) {$/;"	f	class:caffe::ModelUpdateProto
set_weight	caffe.pb.cc	/^void ModelUpdateProto::set_weight(const char* value, size_t size) {$/;"	f	class:caffe::ModelUpdateProto
set_weight	caffe.pb.cc	/^void NullUpdateProto::set_weight(::std::string&& value) {$/;"	f	class:caffe::NullUpdateProto
set_weight	caffe.pb.cc	/^void NullUpdateProto::set_weight(const ::std::string& value) {$/;"	f	class:caffe::NullUpdateProto
set_weight	caffe.pb.cc	/^void NullUpdateProto::set_weight(const char* value) {$/;"	f	class:caffe::NullUpdateProto
set_weight	caffe.pb.cc	/^void NullUpdateProto::set_weight(const char* value, size_t size) {$/;"	f	class:caffe::NullUpdateProto
set_weight	caffe.pb.h	/^inline void ModelUpdateProto::set_weight(::std::string&& value) {$/;"	f	class:caffe::ModelUpdateProto
set_weight	caffe.pb.h	/^inline void ModelUpdateProto::set_weight(const ::std::string& value) {$/;"	f	class:caffe::ModelUpdateProto
set_weight	caffe.pb.h	/^inline void ModelUpdateProto::set_weight(const char* value) {$/;"	f	class:caffe::ModelUpdateProto
set_weight	caffe.pb.h	/^inline void ModelUpdateProto::set_weight(const char* value, size_t size) {$/;"	f	class:caffe::ModelUpdateProto
set_weight	caffe.pb.h	/^inline void NullUpdateProto::set_weight(::std::string&& value) {$/;"	f	class:caffe::NullUpdateProto
set_weight	caffe.pb.h	/^inline void NullUpdateProto::set_weight(const ::std::string& value) {$/;"	f	class:caffe::NullUpdateProto
set_weight	caffe.pb.h	/^inline void NullUpdateProto::set_weight(const char* value) {$/;"	f	class:caffe::NullUpdateProto
set_weight	caffe.pb.h	/^inline void NullUpdateProto::set_weight(const char* value, size_t size) {$/;"	f	class:caffe::NullUpdateProto
set_weight_decay	caffe.pb.cc	/^void SolverProto::set_weight_decay(float value) {$/;"	f	class:caffe::SolverProto
set_weight_decay	caffe.pb.h	/^inline void SolverProto::set_weight_decay(float value) {$/;"	f	class:caffe::SolverProto
set_width	caffe.pb.cc	/^void LoaderProto::set_width(::google::protobuf::uint32 value) {$/;"	f	class:caffe::LoaderProto
set_width	caffe.pb.h	/^inline void LoaderProto::set_width(::google::protobuf::uint32 value) {$/;"	f	class:caffe::LoaderProto
shape	caffe.pb.cc	/^::google::protobuf::int64 BlobProto::shape() const {$/;"	f	class:caffe::BlobProto
shape	caffe.pb.h	/^inline ::google::protobuf::int64 BlobProto::shape() const {$/;"	f	class:caffe::BlobProto
shape_	caffe.pb.h	/^  ::google::protobuf::int64 shape_;$/;"	m	class:caffe::BlobProto
share_mode	caffe.pb.cc	/^::caffe::ParamSpec_DimCheckMode ParamSpec::share_mode() const {$/;"	f	class:caffe::ParamSpec
share_mode	caffe.pb.h	/^inline ::caffe::ParamSpec_DimCheckMode ParamSpec::share_mode() const {$/;"	f	class:caffe::ParamSpec
share_mode_	caffe.pb.h	/^  int share_mode_;$/;"	m	class:caffe::ParamSpec
sigmoid_proto	caffe.pb.cc	/^const ::caffe::SigmoidProto& LayerProto::sigmoid_proto() const {$/;"	f	class:caffe::LayerProto
sigmoid_proto	caffe.pb.h	/^inline const ::caffe::SigmoidProto& LayerProto::sigmoid_proto() const {$/;"	f	class:caffe::LayerProto
sigmoid_proto_	caffe.pb.h	/^  ::caffe::SigmoidProto* sigmoid_proto_;$/;"	m	class:caffe::LayerProto
snapshot	caffe.pb.cc	/^::google::protobuf::int32 SolverProto::snapshot() const {$/;"	f	class:caffe::SolverProto
snapshot	caffe.pb.h	/^inline ::google::protobuf::int32 SolverProto::snapshot() const {$/;"	f	class:caffe::SolverProto
snapshot_	caffe.pb.h	/^  ::google::protobuf::int32 snapshot_;$/;"	m	class:caffe::SolverProto
snapshot_after_train	caffe.pb.cc	/^bool SolverProto::snapshot_after_train() const {$/;"	f	class:caffe::SolverProto
snapshot_after_train	caffe.pb.h	/^inline bool SolverProto::snapshot_after_train() const {$/;"	f	class:caffe::SolverProto
snapshot_after_train_	caffe.pb.h	/^  bool snapshot_after_train_;$/;"	m	class:caffe::SolverProto
snapshot_diff	caffe.pb.cc	/^bool SolverProto::snapshot_diff() const {$/;"	f	class:caffe::SolverProto
snapshot_diff	caffe.pb.h	/^inline bool SolverProto::snapshot_diff() const {$/;"	f	class:caffe::SolverProto
snapshot_diff_	caffe.pb.h	/^  bool snapshot_diff_;$/;"	m	class:caffe::SolverProto
snapshot_prefix	caffe.pb.cc	/^const ::std::string& SolverProto::snapshot_prefix() const {$/;"	f	class:caffe::SolverProto
snapshot_prefix	caffe.pb.h	/^inline const ::std::string& SolverProto::snapshot_prefix() const {$/;"	f	class:caffe::SolverProto
snapshot_prefix_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr snapshot_prefix_;$/;"	m	class:caffe::SolverProto
softmax_proto	caffe.pb.cc	/^const ::caffe::SoftmaxProto& LayerProto::softmax_proto() const {$/;"	f	class:caffe::LayerProto
softmax_proto	caffe.pb.h	/^inline const ::caffe::SoftmaxProto& LayerProto::softmax_proto() const {$/;"	f	class:caffe::LayerProto
softmax_proto_	caffe.pb.h	/^  ::caffe::SoftmaxProto* softmax_proto_;$/;"	m	class:caffe::LayerProto
solver_type	caffe.pb.cc	/^::caffe::SolverProto_SolverType SolverProto::solver_type() const {$/;"	f	class:caffe::SolverProto
solver_type	caffe.pb.h	/^inline ::caffe::SolverProto_SolverType SolverProto::solver_type() const {$/;"	f	class:caffe::SolverProto
solver_type_	caffe.pb.h	/^  int solver_type_;$/;"	m	class:caffe::SolverProto
source	caffe.pb.cc	/^const ::std::string& LoaderProto::source() const {$/;"	f	class:caffe::LoaderProto
source	caffe.pb.h	/^inline const ::std::string& LoaderProto::source() const {$/;"	f	class:caffe::LoaderProto
source_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr source_;$/;"	m	class:caffe::LoaderProto
sparse	caffe.pb.cc	/^::google::protobuf::int32 FillerParameter::sparse() const {$/;"	f	class:caffe::FillerParameter
sparse	caffe.pb.h	/^inline ::google::protobuf::int32 FillerParameter::sparse() const {$/;"	f	class:caffe::FillerParameter
sparse_	caffe.pb.h	/^  ::google::protobuf::int32 sparse_;$/;"	m	class:caffe::FillerParameter
split_proto	caffe.pb.cc	/^const ::caffe::SplitProto& LayerProto::split_proto() const {$/;"	f	class:caffe::LayerProto
split_proto	caffe.pb.h	/^inline const ::caffe::SplitProto& LayerProto::split_proto() const {$/;"	f	class:caffe::LayerProto
split_proto_	caffe.pb.h	/^  ::caffe::SplitProto* split_proto_;$/;"	m	class:caffe::LayerProto
src	graph.h	/^  int src;$/;"	m	struct:dataflow::EdgeInfo
stage	caffe.pb.cc	/^NetState::stage() const {$/;"	f	class:caffe::NetState
stage	caffe.pb.cc	/^const ::std::string& NetState::stage(int index) const {$/;"	f	class:caffe::NetState
stage	caffe.pb.h	/^NetState::stage() const {$/;"	f	class:caffe::NetState
stage	caffe.pb.h	/^inline const ::std::string& NetState::stage(int index) const {$/;"	f	class:caffe::NetState
stage_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> stage_;$/;"	m	class:caffe::NetState
stage_size	caffe.pb.cc	/^int NetState::stage_size() const {$/;"	f	class:caffe::NetState
stage_size	caffe.pb.h	/^inline int NetState::stage_size() const {$/;"	f	class:caffe::NetState
state	caffe.pb.cc	/^const ::caffe::NetState& NetParameter::state() const {$/;"	f	class:caffe::NetParameter
state	caffe.pb.h	/^inline const ::caffe::NetState& NetParameter::state() const {$/;"	f	class:caffe::NetParameter
state_	caffe.pb.h	/^  ::caffe::NetState* state_;$/;"	m	class:caffe::NetParameter
static_descriptor_initializer	caffe.pb.cc	/^} static_descriptor_initializer;$/;"	m	namespace:caffe::protobuf_caffe_2eproto	typeref:struct:caffe::protobuf_caffe_2eproto::StaticDescriptorInitializer	file:
std	caffe.pb.cc	/^float FillerParameter::std() const {$/;"	f	class:caffe::FillerParameter
std	caffe.pb.h	/^inline float FillerParameter::std() const {$/;"	f	class:caffe::FillerParameter
std_	caffe.pb.h	/^  float std_;$/;"	m	class:caffe::FillerParameter
stepsize	caffe.pb.cc	/^::google::protobuf::int32 SolverProto::stepsize() const {$/;"	f	class:caffe::SolverProto
stepsize	caffe.pb.h	/^inline ::google::protobuf::int32 SolverProto::stepsize() const {$/;"	f	class:caffe::SolverProto
stepsize_	caffe.pb.h	/^  ::google::protobuf::int32 stepsize_;$/;"	m	class:caffe::SolverProto
stepvalue	caffe.pb.cc	/^::google::protobuf::int32 SolverProto::stepvalue(int index) const {$/;"	f	class:caffe::SolverProto
stepvalue	caffe.pb.cc	/^SolverProto::stepvalue() const {$/;"	f	class:caffe::SolverProto
stepvalue	caffe.pb.h	/^SolverProto::stepvalue() const {$/;"	f	class:caffe::SolverProto
stepvalue	caffe.pb.h	/^inline ::google::protobuf::int32 SolverProto::stepvalue(int index) const {$/;"	f	class:caffe::SolverProto
stepvalue_	caffe.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stepvalue_;$/;"	m	class:caffe::SolverProto
stepvalue_size	caffe.pb.cc	/^int SolverProto::stepvalue_size() const {$/;"	f	class:caffe::SolverProto
stepvalue_size	caffe.pb.h	/^inline int SolverProto::stepvalue_size() const {$/;"	f	class:caffe::SolverProto
stop	caffe.pb.cc	/^bool StoreProto::stop() const {$/;"	f	class:caffe::StoreProto
stop	caffe.pb.h	/^inline bool StoreProto::stop() const {$/;"	f	class:caffe::StoreProto
stop_	caffe.pb.h	/^  bool stop_;$/;"	m	class:caffe::StoreProto
store_layer_names	caffe.pb.cc	/^StoreProto::store_layer_names() const {$/;"	f	class:caffe::StoreProto
store_layer_names	caffe.pb.cc	/^const ::std::string& StoreProto::store_layer_names(int index) const {$/;"	f	class:caffe::StoreProto
store_layer_names	caffe.pb.h	/^StoreProto::store_layer_names() const {$/;"	f	class:caffe::StoreProto
store_layer_names	caffe.pb.h	/^inline const ::std::string& StoreProto::store_layer_names(int index) const {$/;"	f	class:caffe::StoreProto
store_layer_names_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> store_layer_names_;$/;"	m	class:caffe::StoreProto
store_layer_names_size	caffe.pb.cc	/^int StoreProto::store_layer_names_size() const {$/;"	f	class:caffe::StoreProto
store_layer_names_size	caffe.pb.h	/^inline int StoreProto::store_layer_names_size() const {$/;"	f	class:caffe::StoreProto
store_layer_shapes	caffe.pb.cc	/^::google::protobuf::int64 StoreProto::store_layer_shapes(int index) const {$/;"	f	class:caffe::StoreProto
store_layer_shapes	caffe.pb.cc	/^StoreProto::store_layer_shapes() const {$/;"	f	class:caffe::StoreProto
store_layer_shapes	caffe.pb.h	/^StoreProto::store_layer_shapes() const {$/;"	f	class:caffe::StoreProto
store_layer_shapes	caffe.pb.h	/^inline ::google::protobuf::int64 StoreProto::store_layer_shapes(int index) const {$/;"	f	class:caffe::StoreProto
store_layer_shapes_	caffe.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > store_layer_shapes_;$/;"	m	class:caffe::StoreProto
store_layer_shapes_size	caffe.pb.cc	/^int StoreProto::store_layer_shapes_size() const {$/;"	f	class:caffe::StoreProto
store_layer_shapes_size	caffe.pb.h	/^inline int StoreProto::store_layer_shapes_size() const {$/;"	f	class:caffe::StoreProto
store_proto	caffe.pb.cc	/^const ::caffe::StoreProto& LayerProto::store_proto() const {$/;"	f	class:caffe::LayerProto
store_proto	caffe.pb.h	/^inline const ::caffe::StoreProto& LayerProto::store_proto() const {$/;"	f	class:caffe::LayerProto
store_proto_	caffe.pb.h	/^  ::caffe::StoreProto* store_proto_;$/;"	m	class:caffe::LayerProto
strategy	caffe.pb.cc	/^const ::std::string& SolverProto::strategy() const {$/;"	f	class:caffe::SolverProto
strategy	caffe.pb.h	/^inline const ::std::string& SolverProto::strategy() const {$/;"	f	class:caffe::SolverProto
strategy_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr strategy_;$/;"	m	class:caffe::SolverProto
stride	caffe.pb.cc	/^::google::protobuf::uint32 ConvolutionProto::stride() const {$/;"	f	class:caffe::ConvolutionProto
stride	caffe.pb.cc	/^::google::protobuf::uint32 PoolingProto::stride() const {$/;"	f	class:caffe::PoolingProto
stride	caffe.pb.h	/^inline ::google::protobuf::uint32 ConvolutionProto::stride() const {$/;"	f	class:caffe::ConvolutionProto
stride	caffe.pb.h	/^inline ::google::protobuf::uint32 PoolingProto::stride() const {$/;"	f	class:caffe::PoolingProto
stride_	caffe.pb.h	/^  ::google::protobuf::uint32 stride_;$/;"	m	class:caffe::ConvolutionProto
stride_	caffe.pb.h	/^  ::google::protobuf::uint32 stride_;$/;"	m	class:caffe::PoolingProto
stride_h	caffe.pb.cc	/^::google::protobuf::uint32 ConvolutionProto::stride_h() const {$/;"	f	class:caffe::ConvolutionProto
stride_h	caffe.pb.cc	/^::google::protobuf::uint32 PoolingProto::stride_h() const {$/;"	f	class:caffe::PoolingProto
stride_h	caffe.pb.h	/^inline ::google::protobuf::uint32 ConvolutionProto::stride_h() const {$/;"	f	class:caffe::ConvolutionProto
stride_h	caffe.pb.h	/^inline ::google::protobuf::uint32 PoolingProto::stride_h() const {$/;"	f	class:caffe::PoolingProto
stride_h_	caffe.pb.h	/^  ::google::protobuf::uint32 stride_h_;$/;"	m	class:caffe::ConvolutionProto
stride_h_	caffe.pb.h	/^  ::google::protobuf::uint32 stride_h_;$/;"	m	class:caffe::PoolingProto
stride_w	caffe.pb.cc	/^::google::protobuf::uint32 ConvolutionProto::stride_w() const {$/;"	f	class:caffe::ConvolutionProto
stride_w	caffe.pb.cc	/^::google::protobuf::uint32 PoolingProto::stride_w() const {$/;"	f	class:caffe::PoolingProto
stride_w	caffe.pb.h	/^inline ::google::protobuf::uint32 ConvolutionProto::stride_w() const {$/;"	f	class:caffe::ConvolutionProto
stride_w	caffe.pb.h	/^inline ::google::protobuf::uint32 PoolingProto::stride_w() const {$/;"	f	class:caffe::PoolingProto
stride_w_	caffe.pb.h	/^  ::google::protobuf::uint32 stride_w_;$/;"	m	class:caffe::ConvolutionProto
stride_w_	caffe.pb.h	/^  ::google::protobuf::uint32 stride_w_;$/;"	m	class:caffe::PoolingProto
string_data	caffe.pb.cc	/^BlobProto::string_data() const {$/;"	f	class:caffe::BlobProto
string_data	caffe.pb.cc	/^const ::std::string& BlobProto::string_data(int index) const {$/;"	f	class:caffe::BlobProto
string_data	caffe.pb.h	/^BlobProto::string_data() const {$/;"	f	class:caffe::BlobProto
string_data	caffe.pb.h	/^inline const ::std::string& BlobProto::string_data(int index) const {$/;"	f	class:caffe::BlobProto
string_data_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> string_data_;$/;"	m	class:caffe::BlobProto
string_data_size	caffe.pb.cc	/^int BlobProto::string_data_size() const {$/;"	f	class:caffe::BlobProto
string_data_size	caffe.pb.h	/^inline int BlobProto::string_data_size() const {$/;"	f	class:caffe::BlobProto
test_compute_loss	caffe.pb.cc	/^bool SolverProto::test_compute_loss() const {$/;"	f	class:caffe::SolverProto
test_compute_loss	caffe.pb.h	/^inline bool SolverProto::test_compute_loss() const {$/;"	f	class:caffe::SolverProto
test_compute_loss_	caffe.pb.h	/^  bool test_compute_loss_;$/;"	m	class:caffe::SolverProto
test_initialization	caffe.pb.cc	/^bool SolverProto::test_initialization() const {$/;"	f	class:caffe::SolverProto
test_initialization	caffe.pb.h	/^inline bool SolverProto::test_initialization() const {$/;"	f	class:caffe::SolverProto
test_initialization_	caffe.pb.h	/^  bool test_initialization_;$/;"	m	class:caffe::SolverProto
test_interval	caffe.pb.cc	/^::google::protobuf::int32 SolverProto::test_interval() const {$/;"	f	class:caffe::SolverProto
test_interval	caffe.pb.h	/^inline ::google::protobuf::int32 SolverProto::test_interval() const {$/;"	f	class:caffe::SolverProto
test_interval_	caffe.pb.h	/^  ::google::protobuf::int32 test_interval_;$/;"	m	class:caffe::SolverProto
test_iter	caffe.pb.cc	/^::google::protobuf::int32 SolverProto::test_iter(int index) const {$/;"	f	class:caffe::SolverProto
test_iter	caffe.pb.cc	/^SolverProto::test_iter() const {$/;"	f	class:caffe::SolverProto
test_iter	caffe.pb.h	/^SolverProto::test_iter() const {$/;"	f	class:caffe::SolverProto
test_iter	caffe.pb.h	/^inline ::google::protobuf::int32 SolverProto::test_iter(int index) const {$/;"	f	class:caffe::SolverProto
test_iter_	caffe.pb.h	/^  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > test_iter_;$/;"	m	class:caffe::SolverProto
test_iter_size	caffe.pb.cc	/^int SolverProto::test_iter_size() const {$/;"	f	class:caffe::SolverProto
test_iter_size	caffe.pb.h	/^inline int SolverProto::test_iter_size() const {$/;"	f	class:caffe::SolverProto
test_net	caffe.pb.cc	/^SolverProto::test_net() const {$/;"	f	class:caffe::SolverProto
test_net	caffe.pb.cc	/^const ::std::string& SolverProto::test_net(int index) const {$/;"	f	class:caffe::SolverProto
test_net	caffe.pb.h	/^SolverProto::test_net() const {$/;"	f	class:caffe::SolverProto
test_net	caffe.pb.h	/^inline const ::std::string& SolverProto::test_net(int index) const {$/;"	f	class:caffe::SolverProto
test_net_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::std::string> test_net_;$/;"	m	class:caffe::SolverProto
test_net_size	caffe.pb.cc	/^int SolverProto::test_net_size() const {$/;"	f	class:caffe::SolverProto
test_net_size	caffe.pb.h	/^inline int SolverProto::test_net_size() const {$/;"	f	class:caffe::SolverProto
test_state	caffe.pb.cc	/^SolverProto::test_state() const {$/;"	f	class:caffe::SolverProto
test_state	caffe.pb.cc	/^const ::caffe::NetState& SolverProto::test_state(int index) const {$/;"	f	class:caffe::SolverProto
test_state	caffe.pb.h	/^SolverProto::test_state() const {$/;"	f	class:caffe::SolverProto
test_state	caffe.pb.h	/^inline const ::caffe::NetState& SolverProto::test_state(int index) const {$/;"	f	class:caffe::SolverProto
test_state_	caffe.pb.h	/^  ::google::protobuf::RepeatedPtrField< ::caffe::NetState > test_state_;$/;"	m	class:caffe::SolverProto
test_state_size	caffe.pb.cc	/^int SolverProto::test_state_size() const {$/;"	f	class:caffe::SolverProto
test_state_size	caffe.pb.h	/^inline int SolverProto::test_state_size() const {$/;"	f	class:caffe::SolverProto
train_net	caffe.pb.cc	/^const ::std::string& SolverProto::train_net() const {$/;"	f	class:caffe::SolverProto
train_net	caffe.pb.h	/^inline const ::std::string& SolverProto::train_net() const {$/;"	f	class:caffe::SolverProto
train_net_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr train_net_;$/;"	m	class:caffe::SolverProto
train_state	caffe.pb.cc	/^const ::caffe::NetState& SolverProto::train_state() const {$/;"	f	class:caffe::SolverProto
train_state	caffe.pb.h	/^inline const ::caffe::NetState& SolverProto::train_state() const {$/;"	f	class:caffe::SolverProto
train_state_	caffe.pb.h	/^  ::caffe::NetState* train_state_;$/;"	m	class:caffe::SolverProto
type	caffe.pb.cc	/^const ::std::string& FillerParameter::type() const {$/;"	f	class:caffe::FillerParameter
type	caffe.pb.cc	/^const ::std::string& LayerProto::type() const {$/;"	f	class:caffe::LayerProto
type	caffe.pb.h	/^inline const ::std::string& FillerParameter::type() const {$/;"	f	class:caffe::FillerParameter
type	caffe.pb.h	/^inline const ::std::string& LayerProto::type() const {$/;"	f	class:caffe::LayerProto
type	graph.h	/^  NodeType type;$/;"	m	struct:dataflow::NodeInfo
type	logic.hpp	/^  typedef Meta type;$/;"	t	struct:base::Fold
type	logic.hpp	/^  typedef NullType type;$/;"	t	struct:base::Map
type_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr type_;$/;"	m	class:caffe::FillerParameter
type_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr type_;$/;"	m	class:caffe::LayerProto
type_vec_	object_pool.h	/^  std::unordered_set<Type*> type_vec_;$/;"	m	class:dataflow::ObjectPool
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::BatchNormProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::BlobProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::BlobShape
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::BoxingProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::ConcatProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::ConvolutionProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::CopyProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::DeviceGroup
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::DeviceSet
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::FillerParameter
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::InnerProductProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::LRNProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::LayerProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::LayerSet
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::LoadPartialModelProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::LoaderProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::Machine
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::MachineGroup
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::ModelUpdateProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::MultinomialLogisticLossProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::NetParameter
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::NetProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::NetState
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::NullUpdateProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::ParamSpec
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::PlaceholderProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::PlacementGroup
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::PoolingProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::ReLUProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::Resource
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::SigmoidProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::SoftmaxProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::SolverProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::SolverState
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::SplitProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::StoreProto
unknown_fields	caffe.pb.h	/^  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {$/;"	f	class:caffe::Strategy
use_global_stats	caffe.pb.cc	/^bool BatchNormProto::use_global_stats() const {$/;"	f	class:caffe::BatchNormProto
use_global_stats	caffe.pb.h	/^inline bool BatchNormProto::use_global_stats() const {$/;"	f	class:caffe::BatchNormProto
use_global_stats_	caffe.pb.h	/^  bool use_global_stats_;$/;"	m	class:caffe::BatchNormProto
value	caffe.pb.cc	/^float FillerParameter::value() const {$/;"	f	class:caffe::FillerParameter
value	caffe.pb.h	/^inline float FillerParameter::value() const {$/;"	f	class:caffe::FillerParameter
value_	caffe.pb.h	/^  float value_;$/;"	m	class:caffe::FillerParameter
weight	caffe.pb.cc	/^const ::std::string& ModelUpdateProto::weight() const {$/;"	f	class:caffe::ModelUpdateProto
weight	caffe.pb.cc	/^const ::std::string& NullUpdateProto::weight() const {$/;"	f	class:caffe::NullUpdateProto
weight	caffe.pb.h	/^inline const ::std::string& ModelUpdateProto::weight() const {$/;"	f	class:caffe::ModelUpdateProto
weight	caffe.pb.h	/^inline const ::std::string& NullUpdateProto::weight() const {$/;"	f	class:caffe::NullUpdateProto
weight_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr weight_;$/;"	m	class:caffe::ModelUpdateProto
weight_	caffe.pb.h	/^  ::google::protobuf::internal::ArenaStringPtr weight_;$/;"	m	class:caffe::NullUpdateProto
weight_decay	caffe.pb.cc	/^float SolverProto::weight_decay() const {$/;"	f	class:caffe::SolverProto
weight_decay	caffe.pb.h	/^inline float SolverProto::weight_decay() const {$/;"	f	class:caffe::SolverProto
weight_decay_	caffe.pb.h	/^  float weight_decay_;$/;"	m	class:caffe::SolverProto
weight_filler	caffe.pb.cc	/^const ::caffe::FillerParameter& ConvolutionProto::weight_filler() const {$/;"	f	class:caffe::ConvolutionProto
weight_filler	caffe.pb.cc	/^const ::caffe::FillerParameter& InnerProductProto::weight_filler() const {$/;"	f	class:caffe::InnerProductProto
weight_filler	caffe.pb.h	/^inline const ::caffe::FillerParameter& ConvolutionProto::weight_filler() const {$/;"	f	class:caffe::ConvolutionProto
weight_filler	caffe.pb.h	/^inline const ::caffe::FillerParameter& InnerProductProto::weight_filler() const {$/;"	f	class:caffe::InnerProductProto
weight_filler_	caffe.pb.h	/^  ::caffe::FillerParameter* weight_filler_;$/;"	m	class:caffe::ConvolutionProto
weight_filler_	caffe.pb.h	/^  ::caffe::FillerParameter* weight_filler_;$/;"	m	class:caffe::InnerProductProto
width	caffe.pb.cc	/^::google::protobuf::uint32 LoaderProto::width() const {$/;"	f	class:caffe::LoaderProto
width	caffe.pb.h	/^inline ::google::protobuf::uint32 LoaderProto::width() const {$/;"	f	class:caffe::LoaderProto
width_	caffe.pb.h	/^  ::google::protobuf::uint32 width_;$/;"	m	class:caffe::LoaderProto
yes	logic.hpp	/^  typedef char yes[1];$/;"	t	struct:base::IsDerivedFrom
~BatchNormProto	caffe.pb.cc	/^BatchNormProto::~BatchNormProto() {$/;"	f	class:caffe::BatchNormProto
~BlobProto	caffe.pb.cc	/^BlobProto::~BlobProto() {$/;"	f	class:caffe::BlobProto
~BlobShape	caffe.pb.cc	/^BlobShape::~BlobShape() {$/;"	f	class:caffe::BlobShape
~BoxingProto	caffe.pb.cc	/^BoxingProto::~BoxingProto() {$/;"	f	class:caffe::BoxingProto
~ConcatProto	caffe.pb.cc	/^ConcatProto::~ConcatProto() {$/;"	f	class:caffe::ConcatProto
~ConvolutionProto	caffe.pb.cc	/^ConvolutionProto::~ConvolutionProto() {$/;"	f	class:caffe::ConvolutionProto
~CopyProto	caffe.pb.cc	/^CopyProto::~CopyProto() {$/;"	f	class:caffe::CopyProto
~DeviceGroup	caffe.pb.cc	/^DeviceGroup::~DeviceGroup() {$/;"	f	class:caffe::DeviceGroup
~DeviceSet	caffe.pb.cc	/^DeviceSet::~DeviceSet() {$/;"	f	class:caffe::DeviceSet
~FillerParameter	caffe.pb.cc	/^FillerParameter::~FillerParameter() {$/;"	f	class:caffe::FillerParameter
~Graph	graph.h	/^  ~Graph() {}$/;"	f	class:dataflow::Graph
~InnerProductProto	caffe.pb.cc	/^InnerProductProto::~InnerProductProto() {$/;"	f	class:caffe::InnerProductProto
~LRNProto	caffe.pb.cc	/^LRNProto::~LRNProto() {$/;"	f	class:caffe::LRNProto
~LayerProto	caffe.pb.cc	/^LayerProto::~LayerProto() {$/;"	f	class:caffe::LayerProto
~LayerSet	caffe.pb.cc	/^LayerSet::~LayerSet() {$/;"	f	class:caffe::LayerSet
~LoadPartialModelProto	caffe.pb.cc	/^LoadPartialModelProto::~LoadPartialModelProto() {$/;"	f	class:caffe::LoadPartialModelProto
~LoaderProto	caffe.pb.cc	/^LoaderProto::~LoaderProto() {$/;"	f	class:caffe::LoaderProto
~Machine	caffe.pb.cc	/^Machine::~Machine() {$/;"	f	class:caffe::Machine
~MachineGroup	caffe.pb.cc	/^MachineGroup::~MachineGroup() {$/;"	f	class:caffe::MachineGroup
~ModelUpdateProto	caffe.pb.cc	/^ModelUpdateProto::~ModelUpdateProto() {$/;"	f	class:caffe::ModelUpdateProto
~MultinomialLogisticLossProto	caffe.pb.cc	/^MultinomialLogisticLossProto::~MultinomialLogisticLossProto() {$/;"	f	class:caffe::MultinomialLogisticLossProto
~NetParameter	caffe.pb.cc	/^NetParameter::~NetParameter() {$/;"	f	class:caffe::NetParameter
~NetProto	caffe.pb.cc	/^NetProto::~NetProto() {$/;"	f	class:caffe::NetProto
~NetState	caffe.pb.cc	/^NetState::~NetState() {$/;"	f	class:caffe::NetState
~NullUpdateProto	caffe.pb.cc	/^NullUpdateProto::~NullUpdateProto() {$/;"	f	class:caffe::NullUpdateProto
~ObjectPool	object_pool.h	/^  ~ObjectPool() { this->Destory(); }$/;"	f	class:dataflow::ObjectPool
~Ops	ops.h	/^  virtual ~Ops() {}$/;"	f	class:dataflow::Ops
~ParamSpec	caffe.pb.cc	/^ParamSpec::~ParamSpec() {$/;"	f	class:caffe::ParamSpec
~PlaceholderProto	caffe.pb.cc	/^PlaceholderProto::~PlaceholderProto() {$/;"	f	class:caffe::PlaceholderProto
~PlacementGroup	caffe.pb.cc	/^PlacementGroup::~PlacementGroup() {$/;"	f	class:caffe::PlacementGroup
~PoolingProto	caffe.pb.cc	/^PoolingProto::~PoolingProto() {$/;"	f	class:caffe::PoolingProto
~ReLUProto	caffe.pb.cc	/^ReLUProto::~ReLUProto() {$/;"	f	class:caffe::ReLUProto
~Resource	caffe.pb.cc	/^Resource::~Resource() {$/;"	f	class:caffe::Resource
~SigmoidProto	caffe.pb.cc	/^SigmoidProto::~SigmoidProto() {$/;"	f	class:caffe::SigmoidProto
~SoftmaxProto	caffe.pb.cc	/^SoftmaxProto::~SoftmaxProto() {$/;"	f	class:caffe::SoftmaxProto
~SolverProto	caffe.pb.cc	/^SolverProto::~SolverProto() {$/;"	f	class:caffe::SolverProto
~SolverState	caffe.pb.cc	/^SolverState::~SolverState() {$/;"	f	class:caffe::SolverState
~SplitProto	caffe.pb.cc	/^SplitProto::~SplitProto() {$/;"	f	class:caffe::SplitProto
~StoreProto	caffe.pb.cc	/^StoreProto::~StoreProto() {$/;"	f	class:caffe::StoreProto
~Strategy	caffe.pb.cc	/^Strategy::~Strategy() {$/;"	f	class:caffe::Strategy
