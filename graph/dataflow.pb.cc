// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dataflow.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dataflow.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace dataflow {
class NodeDefDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NodeDef> {
  public:
  const ::dataflow::ConvolutionOpProto* convolution_proto_;
  const ::dataflow::LoaderOpProto* loader_proto_;
  const ::dataflow::InnerProductOpProto* innerproduct_proto_;
} _NodeDef_default_instance_;
class ConvolutionOpProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConvolutionOpProto> {
} _ConvolutionOpProto_default_instance_;
class LoaderOpProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoaderOpProto> {
} _LoaderOpProto_default_instance_;
class InnerProductOpProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<InnerProductOpProto> {
} _InnerProductOpProto_default_instance_;

namespace protobuf_dataflow_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDef, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDef, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDef, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDef, type_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_NodeDef_default_instance_), convolution_proto_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_NodeDef_default_instance_), loader_proto_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_NodeDef_default_instance_), innerproduct_proto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDef, opDef_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConvolutionOpProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConvolutionOpProto, num_output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConvolutionOpProto, pad_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConvolutionOpProto, kernel_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConvolutionOpProto, stride_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConvolutionOpProto, in_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConvolutionOpProto, out_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoaderOpProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoaderOpProto, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoaderOpProto, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoaderOpProto, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoaderOpProto, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoaderOpProto, width_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerProductOpProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerProductOpProto, num_output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerProductOpProto, in_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerProductOpProto, out_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(NodeDef)},
  { 10, -1, sizeof(ConvolutionOpProto)},
  { 20, -1, sizeof(LoaderOpProto)},
  { 29, -1, sizeof(InnerProductOpProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_NodeDef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConvolutionOpProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoaderOpProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InnerProductOpProto_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "dataflow.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _NodeDef_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ConvolutionOpProto_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _LoaderOpProto_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _InnerProductOpProto_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _NodeDef_default_instance_.DefaultConstruct();
  _ConvolutionOpProto_default_instance_.DefaultConstruct();
  _LoaderOpProto_default_instance_.DefaultConstruct();
  _InnerProductOpProto_default_instance_.DefaultConstruct();
  _NodeDef_default_instance_.convolution_proto_ = const_cast< ::dataflow::ConvolutionOpProto*>(
      ::dataflow::ConvolutionOpProto::internal_default_instance());
  _NodeDef_default_instance_.loader_proto_ = const_cast< ::dataflow::LoaderOpProto*>(
      ::dataflow::LoaderOpProto::internal_default_instance());
  _NodeDef_default_instance_.innerproduct_proto_ = const_cast< ::dataflow::InnerProductOpProto*>(
      ::dataflow::InnerProductOpProto::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\016dataflow.proto\022\010dataflow\"\327\001\n\007NodeDef\022\014"
      "\n\004name\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\0229\n\021convolutio"
      "n_proto\030\003 \001(\0132\034.dataflow.ConvolutionOpPr"
      "otoH\000\022/\n\014loader_proto\030\004 \001(\0132\027.dataflow.L"
      "oaderOpProtoH\000\022;\n\022innerproduct_proto\030\005 \001"
      "(\0132\035.dataflow.InnerProductOpProtoH\000B\007\n\005o"
      "pDef\"s\n\022ConvolutionOpProto\022\022\n\nnum_output"
      "\030\001 \001(\r\022\013\n\003pad\030\002 \001(\r\022\023\n\013kernel_size\030\003 \001(\r"
      "\022\016\n\006stride\030\004 \001(\r\022\n\n\002in\030\005 \001(\t\022\013\n\003out\030\006 \001("
      "\t\"\\\n\rLoaderOpProto\022\014\n\004data\030\001 \001(\t\022\r\n\005labe"
      "l\030\002 \001(\t\022\017\n\007channel\030\003 \001(\r\022\016\n\006height\030\004 \001(\r"
      "\022\r\n\005width\030\005 \001(\r\"B\n\023InnerProductOpProto\022\022"
      "\n\nnum_output\030\001 \001(\r\022\n\n\002in\030\002 \001(\t\022\013\n\003out\030\003 "
      "\001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 531);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dataflow.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_dataflow_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeDef::kNameFieldNumber;
const int NodeDef::kTypeFieldNumber;
const int NodeDef::kConvolutionProtoFieldNumber;
const int NodeDef::kLoaderProtoFieldNumber;
const int NodeDef::kInnerproductProtoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeDef::NodeDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dataflow_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:dataflow.NodeDef)
}
NodeDef::NodeDef(const NodeDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  clear_has_opDef();
  switch (from.opDef_case()) {
    case kConvolutionProto: {
      mutable_convolution_proto()->::dataflow::ConvolutionOpProto::MergeFrom(from.convolution_proto());
      break;
    }
    case kLoaderProto: {
      mutable_loader_proto()->::dataflow::LoaderOpProto::MergeFrom(from.loader_proto());
      break;
    }
    case kInnerproductProto: {
      mutable_innerproduct_proto()->::dataflow::InnerProductOpProto::MergeFrom(from.innerproduct_proto());
      break;
    }
    case OPDEF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:dataflow.NodeDef)
}

void NodeDef::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_opDef();
  _cached_size_ = 0;
}

NodeDef::~NodeDef() {
  // @@protoc_insertion_point(destructor:dataflow.NodeDef)
  SharedDtor();
}

void NodeDef::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_opDef()) {
    clear_opDef();
  }
}

void NodeDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeDef::descriptor() {
  protobuf_dataflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dataflow_2eproto::file_level_metadata[0].descriptor;
}

const NodeDef& NodeDef::default_instance() {
  protobuf_dataflow_2eproto::InitDefaults();
  return *internal_default_instance();
}

NodeDef* NodeDef::New(::google::protobuf::Arena* arena) const {
  NodeDef* n = new NodeDef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodeDef::clear_opDef() {
// @@protoc_insertion_point(one_of_clear_start:dataflow.NodeDef)
  switch (opDef_case()) {
    case kConvolutionProto: {
      delete opDef_.convolution_proto_;
      break;
    }
    case kLoaderProto: {
      delete opDef_.loader_proto_;
      break;
    }
    case kInnerproductProto: {
      delete opDef_.innerproduct_proto_;
      break;
    }
    case OPDEF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPDEF_NOT_SET;
}


void NodeDef::Clear() {
// @@protoc_insertion_point(message_clear_start:dataflow.NodeDef)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_opDef();
}

bool NodeDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dataflow.NodeDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dataflow.NodeDef.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dataflow.NodeDef.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dataflow.ConvolutionOpProto convolution_proto = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_convolution_proto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dataflow.LoaderOpProto loader_proto = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loader_proto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dataflow.InnerProductOpProto innerproduct_proto = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_innerproduct_proto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dataflow.NodeDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dataflow.NodeDef)
  return false;
#undef DO_
}

void NodeDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dataflow.NodeDef)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dataflow.NodeDef.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dataflow.NodeDef.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // .dataflow.ConvolutionOpProto convolution_proto = 3;
  if (has_convolution_proto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *opDef_.convolution_proto_, output);
  }

  // .dataflow.LoaderOpProto loader_proto = 4;
  if (has_loader_proto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *opDef_.loader_proto_, output);
  }

  // .dataflow.InnerProductOpProto innerproduct_proto = 5;
  if (has_innerproduct_proto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *opDef_.innerproduct_proto_, output);
  }

  // @@protoc_insertion_point(serialize_end:dataflow.NodeDef)
}

::google::protobuf::uint8* NodeDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dataflow.NodeDef)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dataflow.NodeDef.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dataflow.NodeDef.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // .dataflow.ConvolutionOpProto convolution_proto = 3;
  if (has_convolution_proto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *opDef_.convolution_proto_, false, target);
  }

  // .dataflow.LoaderOpProto loader_proto = 4;
  if (has_loader_proto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *opDef_.loader_proto_, false, target);
  }

  // .dataflow.InnerProductOpProto innerproduct_proto = 5;
  if (has_innerproduct_proto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *opDef_.innerproduct_proto_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:dataflow.NodeDef)
  return target;
}

size_t NodeDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataflow.NodeDef)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  switch (opDef_case()) {
    // .dataflow.ConvolutionOpProto convolution_proto = 3;
    case kConvolutionProto: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *opDef_.convolution_proto_);
      break;
    }
    // .dataflow.LoaderOpProto loader_proto = 4;
    case kLoaderProto: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *opDef_.loader_proto_);
      break;
    }
    // .dataflow.InnerProductOpProto innerproduct_proto = 5;
    case kInnerproductProto: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *opDef_.innerproduct_proto_);
      break;
    }
    case OPDEF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dataflow.NodeDef)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dataflow.NodeDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dataflow.NodeDef)
    MergeFrom(*source);
  }
}

void NodeDef::MergeFrom(const NodeDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dataflow.NodeDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  switch (from.opDef_case()) {
    case kConvolutionProto: {
      mutable_convolution_proto()->::dataflow::ConvolutionOpProto::MergeFrom(from.convolution_proto());
      break;
    }
    case kLoaderProto: {
      mutable_loader_proto()->::dataflow::LoaderOpProto::MergeFrom(from.loader_proto());
      break;
    }
    case kInnerproductProto: {
      mutable_innerproduct_proto()->::dataflow::InnerProductOpProto::MergeFrom(from.innerproduct_proto());
      break;
    }
    case OPDEF_NOT_SET: {
      break;
    }
  }
}

void NodeDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dataflow.NodeDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeDef::CopyFrom(const NodeDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataflow.NodeDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeDef::IsInitialized() const {
  return true;
}

void NodeDef::Swap(NodeDef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeDef::InternalSwap(NodeDef* other) {
  name_.Swap(&other->name_);
  type_.Swap(&other->type_);
  std::swap(opDef_, other->opDef_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodeDef::GetMetadata() const {
  protobuf_dataflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dataflow_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NodeDef

// string name = 1;
void NodeDef::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NodeDef::name() const {
  // @@protoc_insertion_point(field_get:dataflow.NodeDef.name)
  return name_.GetNoArena();
}
void NodeDef::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dataflow.NodeDef.name)
}
#if LANG_CXX11
void NodeDef::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dataflow.NodeDef.name)
}
#endif
void NodeDef::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dataflow.NodeDef.name)
}
void NodeDef::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dataflow.NodeDef.name)
}
::std::string* NodeDef::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dataflow.NodeDef.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeDef::release_name() {
  // @@protoc_insertion_point(field_release:dataflow.NodeDef.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeDef::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dataflow.NodeDef.name)
}

// string type = 2;
void NodeDef::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NodeDef::type() const {
  // @@protoc_insertion_point(field_get:dataflow.NodeDef.type)
  return type_.GetNoArena();
}
void NodeDef::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dataflow.NodeDef.type)
}
#if LANG_CXX11
void NodeDef::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dataflow.NodeDef.type)
}
#endif
void NodeDef::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dataflow.NodeDef.type)
}
void NodeDef::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dataflow.NodeDef.type)
}
::std::string* NodeDef::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:dataflow.NodeDef.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeDef::release_type() {
  // @@protoc_insertion_point(field_release:dataflow.NodeDef.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeDef::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:dataflow.NodeDef.type)
}

// .dataflow.ConvolutionOpProto convolution_proto = 3;
bool NodeDef::has_convolution_proto() const {
  return opDef_case() == kConvolutionProto;
}
void NodeDef::set_has_convolution_proto() {
  _oneof_case_[0] = kConvolutionProto;
}
void NodeDef::clear_convolution_proto() {
  if (has_convolution_proto()) {
    delete opDef_.convolution_proto_;
    clear_has_opDef();
  }
}
 const ::dataflow::ConvolutionOpProto& NodeDef::convolution_proto() const {
  // @@protoc_insertion_point(field_get:dataflow.NodeDef.convolution_proto)
  return has_convolution_proto()
      ? *opDef_.convolution_proto_
      : ::dataflow::ConvolutionOpProto::default_instance();
}
::dataflow::ConvolutionOpProto* NodeDef::mutable_convolution_proto() {
  if (!has_convolution_proto()) {
    clear_opDef();
    set_has_convolution_proto();
    opDef_.convolution_proto_ = new ::dataflow::ConvolutionOpProto;
  }
  // @@protoc_insertion_point(field_mutable:dataflow.NodeDef.convolution_proto)
  return opDef_.convolution_proto_;
}
::dataflow::ConvolutionOpProto* NodeDef::release_convolution_proto() {
  // @@protoc_insertion_point(field_release:dataflow.NodeDef.convolution_proto)
  if (has_convolution_proto()) {
    clear_has_opDef();
    ::dataflow::ConvolutionOpProto* temp = opDef_.convolution_proto_;
    opDef_.convolution_proto_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void NodeDef::set_allocated_convolution_proto(::dataflow::ConvolutionOpProto* convolution_proto) {
  clear_opDef();
  if (convolution_proto) {
    set_has_convolution_proto();
    opDef_.convolution_proto_ = convolution_proto;
  }
  // @@protoc_insertion_point(field_set_allocated:dataflow.NodeDef.convolution_proto)
}

// .dataflow.LoaderOpProto loader_proto = 4;
bool NodeDef::has_loader_proto() const {
  return opDef_case() == kLoaderProto;
}
void NodeDef::set_has_loader_proto() {
  _oneof_case_[0] = kLoaderProto;
}
void NodeDef::clear_loader_proto() {
  if (has_loader_proto()) {
    delete opDef_.loader_proto_;
    clear_has_opDef();
  }
}
 const ::dataflow::LoaderOpProto& NodeDef::loader_proto() const {
  // @@protoc_insertion_point(field_get:dataflow.NodeDef.loader_proto)
  return has_loader_proto()
      ? *opDef_.loader_proto_
      : ::dataflow::LoaderOpProto::default_instance();
}
::dataflow::LoaderOpProto* NodeDef::mutable_loader_proto() {
  if (!has_loader_proto()) {
    clear_opDef();
    set_has_loader_proto();
    opDef_.loader_proto_ = new ::dataflow::LoaderOpProto;
  }
  // @@protoc_insertion_point(field_mutable:dataflow.NodeDef.loader_proto)
  return opDef_.loader_proto_;
}
::dataflow::LoaderOpProto* NodeDef::release_loader_proto() {
  // @@protoc_insertion_point(field_release:dataflow.NodeDef.loader_proto)
  if (has_loader_proto()) {
    clear_has_opDef();
    ::dataflow::LoaderOpProto* temp = opDef_.loader_proto_;
    opDef_.loader_proto_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void NodeDef::set_allocated_loader_proto(::dataflow::LoaderOpProto* loader_proto) {
  clear_opDef();
  if (loader_proto) {
    set_has_loader_proto();
    opDef_.loader_proto_ = loader_proto;
  }
  // @@protoc_insertion_point(field_set_allocated:dataflow.NodeDef.loader_proto)
}

// .dataflow.InnerProductOpProto innerproduct_proto = 5;
bool NodeDef::has_innerproduct_proto() const {
  return opDef_case() == kInnerproductProto;
}
void NodeDef::set_has_innerproduct_proto() {
  _oneof_case_[0] = kInnerproductProto;
}
void NodeDef::clear_innerproduct_proto() {
  if (has_innerproduct_proto()) {
    delete opDef_.innerproduct_proto_;
    clear_has_opDef();
  }
}
 const ::dataflow::InnerProductOpProto& NodeDef::innerproduct_proto() const {
  // @@protoc_insertion_point(field_get:dataflow.NodeDef.innerproduct_proto)
  return has_innerproduct_proto()
      ? *opDef_.innerproduct_proto_
      : ::dataflow::InnerProductOpProto::default_instance();
}
::dataflow::InnerProductOpProto* NodeDef::mutable_innerproduct_proto() {
  if (!has_innerproduct_proto()) {
    clear_opDef();
    set_has_innerproduct_proto();
    opDef_.innerproduct_proto_ = new ::dataflow::InnerProductOpProto;
  }
  // @@protoc_insertion_point(field_mutable:dataflow.NodeDef.innerproduct_proto)
  return opDef_.innerproduct_proto_;
}
::dataflow::InnerProductOpProto* NodeDef::release_innerproduct_proto() {
  // @@protoc_insertion_point(field_release:dataflow.NodeDef.innerproduct_proto)
  if (has_innerproduct_proto()) {
    clear_has_opDef();
    ::dataflow::InnerProductOpProto* temp = opDef_.innerproduct_proto_;
    opDef_.innerproduct_proto_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void NodeDef::set_allocated_innerproduct_proto(::dataflow::InnerProductOpProto* innerproduct_proto) {
  clear_opDef();
  if (innerproduct_proto) {
    set_has_innerproduct_proto();
    opDef_.innerproduct_proto_ = innerproduct_proto;
  }
  // @@protoc_insertion_point(field_set_allocated:dataflow.NodeDef.innerproduct_proto)
}

bool NodeDef::has_opDef() const {
  return opDef_case() != OPDEF_NOT_SET;
}
void NodeDef::clear_has_opDef() {
  _oneof_case_[0] = OPDEF_NOT_SET;
}
NodeDef::OpDefCase NodeDef::opDef_case() const {
  return NodeDef::OpDefCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConvolutionOpProto::kNumOutputFieldNumber;
const int ConvolutionOpProto::kPadFieldNumber;
const int ConvolutionOpProto::kKernelSizeFieldNumber;
const int ConvolutionOpProto::kStrideFieldNumber;
const int ConvolutionOpProto::kInFieldNumber;
const int ConvolutionOpProto::kOutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConvolutionOpProto::ConvolutionOpProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dataflow_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:dataflow.ConvolutionOpProto)
}
ConvolutionOpProto::ConvolutionOpProto(const ConvolutionOpProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  in_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.in().size() > 0) {
    in_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.in_);
  }
  out_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.out().size() > 0) {
    out_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.out_);
  }
  ::memcpy(&num_output_, &from.num_output_,
    reinterpret_cast<char*>(&stride_) -
    reinterpret_cast<char*>(&num_output_) + sizeof(stride_));
  // @@protoc_insertion_point(copy_constructor:dataflow.ConvolutionOpProto)
}

void ConvolutionOpProto::SharedCtor() {
  in_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  out_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&num_output_, 0, reinterpret_cast<char*>(&stride_) -
    reinterpret_cast<char*>(&num_output_) + sizeof(stride_));
  _cached_size_ = 0;
}

ConvolutionOpProto::~ConvolutionOpProto() {
  // @@protoc_insertion_point(destructor:dataflow.ConvolutionOpProto)
  SharedDtor();
}

void ConvolutionOpProto::SharedDtor() {
  in_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  out_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConvolutionOpProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConvolutionOpProto::descriptor() {
  protobuf_dataflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dataflow_2eproto::file_level_metadata[1].descriptor;
}

const ConvolutionOpProto& ConvolutionOpProto::default_instance() {
  protobuf_dataflow_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConvolutionOpProto* ConvolutionOpProto::New(::google::protobuf::Arena* arena) const {
  ConvolutionOpProto* n = new ConvolutionOpProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConvolutionOpProto::Clear() {
// @@protoc_insertion_point(message_clear_start:dataflow.ConvolutionOpProto)
  in_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  out_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&num_output_, 0, reinterpret_cast<char*>(&stride_) -
    reinterpret_cast<char*>(&num_output_) + sizeof(stride_));
}

bool ConvolutionOpProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dataflow.ConvolutionOpProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 num_output = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_output_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pad = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pad_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 kernel_size = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kernel_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 stride = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stride_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string in = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_in()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->in().data(), this->in().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dataflow.ConvolutionOpProto.in"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string out = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_out()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->out().data(), this->out().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dataflow.ConvolutionOpProto.out"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dataflow.ConvolutionOpProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dataflow.ConvolutionOpProto)
  return false;
#undef DO_
}

void ConvolutionOpProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dataflow.ConvolutionOpProto)
  // uint32 num_output = 1;
  if (this->num_output() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num_output(), output);
  }

  // uint32 pad = 2;
  if (this->pad() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pad(), output);
  }

  // uint32 kernel_size = 3;
  if (this->kernel_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->kernel_size(), output);
  }

  // uint32 stride = 4;
  if (this->stride() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->stride(), output);
  }

  // string in = 5;
  if (this->in().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->in().data(), this->in().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dataflow.ConvolutionOpProto.in");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->in(), output);
  }

  // string out = 6;
  if (this->out().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->out().data(), this->out().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dataflow.ConvolutionOpProto.out");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->out(), output);
  }

  // @@protoc_insertion_point(serialize_end:dataflow.ConvolutionOpProto)
}

::google::protobuf::uint8* ConvolutionOpProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dataflow.ConvolutionOpProto)
  // uint32 num_output = 1;
  if (this->num_output() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num_output(), target);
  }

  // uint32 pad = 2;
  if (this->pad() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pad(), target);
  }

  // uint32 kernel_size = 3;
  if (this->kernel_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->kernel_size(), target);
  }

  // uint32 stride = 4;
  if (this->stride() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->stride(), target);
  }

  // string in = 5;
  if (this->in().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->in().data(), this->in().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dataflow.ConvolutionOpProto.in");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->in(), target);
  }

  // string out = 6;
  if (this->out().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->out().data(), this->out().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dataflow.ConvolutionOpProto.out");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->out(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:dataflow.ConvolutionOpProto)
  return target;
}

size_t ConvolutionOpProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataflow.ConvolutionOpProto)
  size_t total_size = 0;

  // string in = 5;
  if (this->in().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->in());
  }

  // string out = 6;
  if (this->out().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->out());
  }

  // uint32 num_output = 1;
  if (this->num_output() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_output());
  }

  // uint32 pad = 2;
  if (this->pad() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pad());
  }

  // uint32 kernel_size = 3;
  if (this->kernel_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->kernel_size());
  }

  // uint32 stride = 4;
  if (this->stride() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stride());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConvolutionOpProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dataflow.ConvolutionOpProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ConvolutionOpProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConvolutionOpProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dataflow.ConvolutionOpProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dataflow.ConvolutionOpProto)
    MergeFrom(*source);
  }
}

void ConvolutionOpProto::MergeFrom(const ConvolutionOpProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dataflow.ConvolutionOpProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.in().size() > 0) {

    in_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.in_);
  }
  if (from.out().size() > 0) {

    out_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.out_);
  }
  if (from.num_output() != 0) {
    set_num_output(from.num_output());
  }
  if (from.pad() != 0) {
    set_pad(from.pad());
  }
  if (from.kernel_size() != 0) {
    set_kernel_size(from.kernel_size());
  }
  if (from.stride() != 0) {
    set_stride(from.stride());
  }
}

void ConvolutionOpProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dataflow.ConvolutionOpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConvolutionOpProto::CopyFrom(const ConvolutionOpProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataflow.ConvolutionOpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConvolutionOpProto::IsInitialized() const {
  return true;
}

void ConvolutionOpProto::Swap(ConvolutionOpProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConvolutionOpProto::InternalSwap(ConvolutionOpProto* other) {
  in_.Swap(&other->in_);
  out_.Swap(&other->out_);
  std::swap(num_output_, other->num_output_);
  std::swap(pad_, other->pad_);
  std::swap(kernel_size_, other->kernel_size_);
  std::swap(stride_, other->stride_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConvolutionOpProto::GetMetadata() const {
  protobuf_dataflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dataflow_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConvolutionOpProto

// uint32 num_output = 1;
void ConvolutionOpProto::clear_num_output() {
  num_output_ = 0u;
}
::google::protobuf::uint32 ConvolutionOpProto::num_output() const {
  // @@protoc_insertion_point(field_get:dataflow.ConvolutionOpProto.num_output)
  return num_output_;
}
void ConvolutionOpProto::set_num_output(::google::protobuf::uint32 value) {
  
  num_output_ = value;
  // @@protoc_insertion_point(field_set:dataflow.ConvolutionOpProto.num_output)
}

// uint32 pad = 2;
void ConvolutionOpProto::clear_pad() {
  pad_ = 0u;
}
::google::protobuf::uint32 ConvolutionOpProto::pad() const {
  // @@protoc_insertion_point(field_get:dataflow.ConvolutionOpProto.pad)
  return pad_;
}
void ConvolutionOpProto::set_pad(::google::protobuf::uint32 value) {
  
  pad_ = value;
  // @@protoc_insertion_point(field_set:dataflow.ConvolutionOpProto.pad)
}

// uint32 kernel_size = 3;
void ConvolutionOpProto::clear_kernel_size() {
  kernel_size_ = 0u;
}
::google::protobuf::uint32 ConvolutionOpProto::kernel_size() const {
  // @@protoc_insertion_point(field_get:dataflow.ConvolutionOpProto.kernel_size)
  return kernel_size_;
}
void ConvolutionOpProto::set_kernel_size(::google::protobuf::uint32 value) {
  
  kernel_size_ = value;
  // @@protoc_insertion_point(field_set:dataflow.ConvolutionOpProto.kernel_size)
}

// uint32 stride = 4;
void ConvolutionOpProto::clear_stride() {
  stride_ = 0u;
}
::google::protobuf::uint32 ConvolutionOpProto::stride() const {
  // @@protoc_insertion_point(field_get:dataflow.ConvolutionOpProto.stride)
  return stride_;
}
void ConvolutionOpProto::set_stride(::google::protobuf::uint32 value) {
  
  stride_ = value;
  // @@protoc_insertion_point(field_set:dataflow.ConvolutionOpProto.stride)
}

// string in = 5;
void ConvolutionOpProto::clear_in() {
  in_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConvolutionOpProto::in() const {
  // @@protoc_insertion_point(field_get:dataflow.ConvolutionOpProto.in)
  return in_.GetNoArena();
}
void ConvolutionOpProto::set_in(const ::std::string& value) {
  
  in_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dataflow.ConvolutionOpProto.in)
}
#if LANG_CXX11
void ConvolutionOpProto::set_in(::std::string&& value) {
  
  in_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dataflow.ConvolutionOpProto.in)
}
#endif
void ConvolutionOpProto::set_in(const char* value) {
  
  in_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dataflow.ConvolutionOpProto.in)
}
void ConvolutionOpProto::set_in(const char* value, size_t size) {
  
  in_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dataflow.ConvolutionOpProto.in)
}
::std::string* ConvolutionOpProto::mutable_in() {
  
  // @@protoc_insertion_point(field_mutable:dataflow.ConvolutionOpProto.in)
  return in_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConvolutionOpProto::release_in() {
  // @@protoc_insertion_point(field_release:dataflow.ConvolutionOpProto.in)
  
  return in_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConvolutionOpProto::set_allocated_in(::std::string* in) {
  if (in != NULL) {
    
  } else {
    
  }
  in_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), in);
  // @@protoc_insertion_point(field_set_allocated:dataflow.ConvolutionOpProto.in)
}

// string out = 6;
void ConvolutionOpProto::clear_out() {
  out_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConvolutionOpProto::out() const {
  // @@protoc_insertion_point(field_get:dataflow.ConvolutionOpProto.out)
  return out_.GetNoArena();
}
void ConvolutionOpProto::set_out(const ::std::string& value) {
  
  out_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dataflow.ConvolutionOpProto.out)
}
#if LANG_CXX11
void ConvolutionOpProto::set_out(::std::string&& value) {
  
  out_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dataflow.ConvolutionOpProto.out)
}
#endif
void ConvolutionOpProto::set_out(const char* value) {
  
  out_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dataflow.ConvolutionOpProto.out)
}
void ConvolutionOpProto::set_out(const char* value, size_t size) {
  
  out_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dataflow.ConvolutionOpProto.out)
}
::std::string* ConvolutionOpProto::mutable_out() {
  
  // @@protoc_insertion_point(field_mutable:dataflow.ConvolutionOpProto.out)
  return out_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConvolutionOpProto::release_out() {
  // @@protoc_insertion_point(field_release:dataflow.ConvolutionOpProto.out)
  
  return out_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConvolutionOpProto::set_allocated_out(::std::string* out) {
  if (out != NULL) {
    
  } else {
    
  }
  out_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), out);
  // @@protoc_insertion_point(field_set_allocated:dataflow.ConvolutionOpProto.out)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoaderOpProto::kDataFieldNumber;
const int LoaderOpProto::kLabelFieldNumber;
const int LoaderOpProto::kChannelFieldNumber;
const int LoaderOpProto::kHeightFieldNumber;
const int LoaderOpProto::kWidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoaderOpProto::LoaderOpProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dataflow_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:dataflow.LoaderOpProto)
}
LoaderOpProto::LoaderOpProto(const LoaderOpProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  ::memcpy(&channel_, &from.channel_,
    reinterpret_cast<char*>(&width_) -
    reinterpret_cast<char*>(&channel_) + sizeof(width_));
  // @@protoc_insertion_point(copy_constructor:dataflow.LoaderOpProto)
}

void LoaderOpProto::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&channel_, 0, reinterpret_cast<char*>(&width_) -
    reinterpret_cast<char*>(&channel_) + sizeof(width_));
  _cached_size_ = 0;
}

LoaderOpProto::~LoaderOpProto() {
  // @@protoc_insertion_point(destructor:dataflow.LoaderOpProto)
  SharedDtor();
}

void LoaderOpProto::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoaderOpProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoaderOpProto::descriptor() {
  protobuf_dataflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dataflow_2eproto::file_level_metadata[2].descriptor;
}

const LoaderOpProto& LoaderOpProto::default_instance() {
  protobuf_dataflow_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoaderOpProto* LoaderOpProto::New(::google::protobuf::Arena* arena) const {
  LoaderOpProto* n = new LoaderOpProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoaderOpProto::Clear() {
// @@protoc_insertion_point(message_clear_start:dataflow.LoaderOpProto)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&channel_, 0, reinterpret_cast<char*>(&width_) -
    reinterpret_cast<char*>(&channel_) + sizeof(width_));
}

bool LoaderOpProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dataflow.LoaderOpProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string data = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dataflow.LoaderOpProto.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dataflow.LoaderOpProto.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 channel = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 width = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dataflow.LoaderOpProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dataflow.LoaderOpProto)
  return false;
#undef DO_
}

void LoaderOpProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dataflow.LoaderOpProto)
  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dataflow.LoaderOpProto.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dataflow.LoaderOpProto.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // uint32 channel = 3;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->channel(), output);
  }

  // uint32 height = 4;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->height(), output);
  }

  // uint32 width = 5;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->width(), output);
  }

  // @@protoc_insertion_point(serialize_end:dataflow.LoaderOpProto)
}

::google::protobuf::uint8* LoaderOpProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dataflow.LoaderOpProto)
  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dataflow.LoaderOpProto.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dataflow.LoaderOpProto.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  // uint32 channel = 3;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->channel(), target);
  }

  // uint32 height = 4;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->height(), target);
  }

  // uint32 width = 5;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->width(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:dataflow.LoaderOpProto)
  return target;
}

size_t LoaderOpProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataflow.LoaderOpProto)
  size_t total_size = 0;

  // string data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  // string label = 2;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // uint32 channel = 3;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel());
  }

  // uint32 height = 4;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());
  }

  // uint32 width = 5;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoaderOpProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dataflow.LoaderOpProto)
  GOOGLE_DCHECK_NE(&from, this);
  const LoaderOpProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoaderOpProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dataflow.LoaderOpProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dataflow.LoaderOpProto)
    MergeFrom(*source);
  }
}

void LoaderOpProto::MergeFrom(const LoaderOpProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dataflow.LoaderOpProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
}

void LoaderOpProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dataflow.LoaderOpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoaderOpProto::CopyFrom(const LoaderOpProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataflow.LoaderOpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoaderOpProto::IsInitialized() const {
  return true;
}

void LoaderOpProto::Swap(LoaderOpProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoaderOpProto::InternalSwap(LoaderOpProto* other) {
  data_.Swap(&other->data_);
  label_.Swap(&other->label_);
  std::swap(channel_, other->channel_);
  std::swap(height_, other->height_);
  std::swap(width_, other->width_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoaderOpProto::GetMetadata() const {
  protobuf_dataflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dataflow_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoaderOpProto

// string data = 1;
void LoaderOpProto::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoaderOpProto::data() const {
  // @@protoc_insertion_point(field_get:dataflow.LoaderOpProto.data)
  return data_.GetNoArena();
}
void LoaderOpProto::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dataflow.LoaderOpProto.data)
}
#if LANG_CXX11
void LoaderOpProto::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dataflow.LoaderOpProto.data)
}
#endif
void LoaderOpProto::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dataflow.LoaderOpProto.data)
}
void LoaderOpProto::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dataflow.LoaderOpProto.data)
}
::std::string* LoaderOpProto::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dataflow.LoaderOpProto.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoaderOpProto::release_data() {
  // @@protoc_insertion_point(field_release:dataflow.LoaderOpProto.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoaderOpProto::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dataflow.LoaderOpProto.data)
}

// string label = 2;
void LoaderOpProto::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoaderOpProto::label() const {
  // @@protoc_insertion_point(field_get:dataflow.LoaderOpProto.label)
  return label_.GetNoArena();
}
void LoaderOpProto::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dataflow.LoaderOpProto.label)
}
#if LANG_CXX11
void LoaderOpProto::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dataflow.LoaderOpProto.label)
}
#endif
void LoaderOpProto::set_label(const char* value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dataflow.LoaderOpProto.label)
}
void LoaderOpProto::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dataflow.LoaderOpProto.label)
}
::std::string* LoaderOpProto::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:dataflow.LoaderOpProto.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoaderOpProto::release_label() {
  // @@protoc_insertion_point(field_release:dataflow.LoaderOpProto.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoaderOpProto::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:dataflow.LoaderOpProto.label)
}

// uint32 channel = 3;
void LoaderOpProto::clear_channel() {
  channel_ = 0u;
}
::google::protobuf::uint32 LoaderOpProto::channel() const {
  // @@protoc_insertion_point(field_get:dataflow.LoaderOpProto.channel)
  return channel_;
}
void LoaderOpProto::set_channel(::google::protobuf::uint32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:dataflow.LoaderOpProto.channel)
}

// uint32 height = 4;
void LoaderOpProto::clear_height() {
  height_ = 0u;
}
::google::protobuf::uint32 LoaderOpProto::height() const {
  // @@protoc_insertion_point(field_get:dataflow.LoaderOpProto.height)
  return height_;
}
void LoaderOpProto::set_height(::google::protobuf::uint32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:dataflow.LoaderOpProto.height)
}

// uint32 width = 5;
void LoaderOpProto::clear_width() {
  width_ = 0u;
}
::google::protobuf::uint32 LoaderOpProto::width() const {
  // @@protoc_insertion_point(field_get:dataflow.LoaderOpProto.width)
  return width_;
}
void LoaderOpProto::set_width(::google::protobuf::uint32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:dataflow.LoaderOpProto.width)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InnerProductOpProto::kNumOutputFieldNumber;
const int InnerProductOpProto::kInFieldNumber;
const int InnerProductOpProto::kOutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InnerProductOpProto::InnerProductOpProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dataflow_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:dataflow.InnerProductOpProto)
}
InnerProductOpProto::InnerProductOpProto(const InnerProductOpProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  in_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.in().size() > 0) {
    in_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.in_);
  }
  out_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.out().size() > 0) {
    out_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.out_);
  }
  num_output_ = from.num_output_;
  // @@protoc_insertion_point(copy_constructor:dataflow.InnerProductOpProto)
}

void InnerProductOpProto::SharedCtor() {
  in_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  out_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  num_output_ = 0u;
  _cached_size_ = 0;
}

InnerProductOpProto::~InnerProductOpProto() {
  // @@protoc_insertion_point(destructor:dataflow.InnerProductOpProto)
  SharedDtor();
}

void InnerProductOpProto::SharedDtor() {
  in_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  out_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InnerProductOpProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InnerProductOpProto::descriptor() {
  protobuf_dataflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dataflow_2eproto::file_level_metadata[3].descriptor;
}

const InnerProductOpProto& InnerProductOpProto::default_instance() {
  protobuf_dataflow_2eproto::InitDefaults();
  return *internal_default_instance();
}

InnerProductOpProto* InnerProductOpProto::New(::google::protobuf::Arena* arena) const {
  InnerProductOpProto* n = new InnerProductOpProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InnerProductOpProto::Clear() {
// @@protoc_insertion_point(message_clear_start:dataflow.InnerProductOpProto)
  in_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  out_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  num_output_ = 0u;
}

bool InnerProductOpProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dataflow.InnerProductOpProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 num_output = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_output_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string in = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_in()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->in().data(), this->in().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dataflow.InnerProductOpProto.in"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string out = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_out()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->out().data(), this->out().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dataflow.InnerProductOpProto.out"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dataflow.InnerProductOpProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dataflow.InnerProductOpProto)
  return false;
#undef DO_
}

void InnerProductOpProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dataflow.InnerProductOpProto)
  // uint32 num_output = 1;
  if (this->num_output() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num_output(), output);
  }

  // string in = 2;
  if (this->in().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->in().data(), this->in().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dataflow.InnerProductOpProto.in");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->in(), output);
  }

  // string out = 3;
  if (this->out().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->out().data(), this->out().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dataflow.InnerProductOpProto.out");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->out(), output);
  }

  // @@protoc_insertion_point(serialize_end:dataflow.InnerProductOpProto)
}

::google::protobuf::uint8* InnerProductOpProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dataflow.InnerProductOpProto)
  // uint32 num_output = 1;
  if (this->num_output() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num_output(), target);
  }

  // string in = 2;
  if (this->in().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->in().data(), this->in().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dataflow.InnerProductOpProto.in");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->in(), target);
  }

  // string out = 3;
  if (this->out().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->out().data(), this->out().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dataflow.InnerProductOpProto.out");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->out(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:dataflow.InnerProductOpProto)
  return target;
}

size_t InnerProductOpProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataflow.InnerProductOpProto)
  size_t total_size = 0;

  // string in = 2;
  if (this->in().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->in());
  }

  // string out = 3;
  if (this->out().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->out());
  }

  // uint32 num_output = 1;
  if (this->num_output() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_output());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InnerProductOpProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dataflow.InnerProductOpProto)
  GOOGLE_DCHECK_NE(&from, this);
  const InnerProductOpProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InnerProductOpProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dataflow.InnerProductOpProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dataflow.InnerProductOpProto)
    MergeFrom(*source);
  }
}

void InnerProductOpProto::MergeFrom(const InnerProductOpProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dataflow.InnerProductOpProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.in().size() > 0) {

    in_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.in_);
  }
  if (from.out().size() > 0) {

    out_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.out_);
  }
  if (from.num_output() != 0) {
    set_num_output(from.num_output());
  }
}

void InnerProductOpProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dataflow.InnerProductOpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InnerProductOpProto::CopyFrom(const InnerProductOpProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataflow.InnerProductOpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerProductOpProto::IsInitialized() const {
  return true;
}

void InnerProductOpProto::Swap(InnerProductOpProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InnerProductOpProto::InternalSwap(InnerProductOpProto* other) {
  in_.Swap(&other->in_);
  out_.Swap(&other->out_);
  std::swap(num_output_, other->num_output_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InnerProductOpProto::GetMetadata() const {
  protobuf_dataflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dataflow_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InnerProductOpProto

// uint32 num_output = 1;
void InnerProductOpProto::clear_num_output() {
  num_output_ = 0u;
}
::google::protobuf::uint32 InnerProductOpProto::num_output() const {
  // @@protoc_insertion_point(field_get:dataflow.InnerProductOpProto.num_output)
  return num_output_;
}
void InnerProductOpProto::set_num_output(::google::protobuf::uint32 value) {
  
  num_output_ = value;
  // @@protoc_insertion_point(field_set:dataflow.InnerProductOpProto.num_output)
}

// string in = 2;
void InnerProductOpProto::clear_in() {
  in_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InnerProductOpProto::in() const {
  // @@protoc_insertion_point(field_get:dataflow.InnerProductOpProto.in)
  return in_.GetNoArena();
}
void InnerProductOpProto::set_in(const ::std::string& value) {
  
  in_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dataflow.InnerProductOpProto.in)
}
#if LANG_CXX11
void InnerProductOpProto::set_in(::std::string&& value) {
  
  in_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dataflow.InnerProductOpProto.in)
}
#endif
void InnerProductOpProto::set_in(const char* value) {
  
  in_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dataflow.InnerProductOpProto.in)
}
void InnerProductOpProto::set_in(const char* value, size_t size) {
  
  in_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dataflow.InnerProductOpProto.in)
}
::std::string* InnerProductOpProto::mutable_in() {
  
  // @@protoc_insertion_point(field_mutable:dataflow.InnerProductOpProto.in)
  return in_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InnerProductOpProto::release_in() {
  // @@protoc_insertion_point(field_release:dataflow.InnerProductOpProto.in)
  
  return in_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InnerProductOpProto::set_allocated_in(::std::string* in) {
  if (in != NULL) {
    
  } else {
    
  }
  in_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), in);
  // @@protoc_insertion_point(field_set_allocated:dataflow.InnerProductOpProto.in)
}

// string out = 3;
void InnerProductOpProto::clear_out() {
  out_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InnerProductOpProto::out() const {
  // @@protoc_insertion_point(field_get:dataflow.InnerProductOpProto.out)
  return out_.GetNoArena();
}
void InnerProductOpProto::set_out(const ::std::string& value) {
  
  out_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dataflow.InnerProductOpProto.out)
}
#if LANG_CXX11
void InnerProductOpProto::set_out(::std::string&& value) {
  
  out_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dataflow.InnerProductOpProto.out)
}
#endif
void InnerProductOpProto::set_out(const char* value) {
  
  out_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dataflow.InnerProductOpProto.out)
}
void InnerProductOpProto::set_out(const char* value, size_t size) {
  
  out_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dataflow.InnerProductOpProto.out)
}
::std::string* InnerProductOpProto::mutable_out() {
  
  // @@protoc_insertion_point(field_mutable:dataflow.InnerProductOpProto.out)
  return out_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InnerProductOpProto::release_out() {
  // @@protoc_insertion_point(field_release:dataflow.InnerProductOpProto.out)
  
  return out_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InnerProductOpProto::set_allocated_out(::std::string* out) {
  if (out != NULL) {
    
  } else {
    
  }
  out_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), out);
  // @@protoc_insertion_point(field_set_allocated:dataflow.InnerProductOpProto.out)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dataflow

// @@protoc_insertion_point(global_scope)
