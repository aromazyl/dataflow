// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dataflow.proto

#ifndef PROTOBUF_dataflow_2eproto__INCLUDED
#define PROTOBUF_dataflow_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace dataflow {
class ConvolutionOpProto;
class ConvolutionOpProtoDefaultTypeInternal;
extern ConvolutionOpProtoDefaultTypeInternal _ConvolutionOpProto_default_instance_;
class InnerProductOpProto;
class InnerProductOpProtoDefaultTypeInternal;
extern InnerProductOpProtoDefaultTypeInternal _InnerProductOpProto_default_instance_;
class LoaderOpProto;
class LoaderOpProtoDefaultTypeInternal;
extern LoaderOpProtoDefaultTypeInternal _LoaderOpProto_default_instance_;
class NodeDef;
class NodeDefDefaultTypeInternal;
extern NodeDefDefaultTypeInternal _NodeDef_default_instance_;
}  // namespace dataflow

namespace dataflow {

namespace protobuf_dataflow_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_dataflow_2eproto

// ===================================================================

class NodeDef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dataflow.NodeDef) */ {
 public:
  NodeDef();
  virtual ~NodeDef();

  NodeDef(const NodeDef& from);

  inline NodeDef& operator=(const NodeDef& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeDef& default_instance();

  enum OpDefCase {
    kConvolutionProto = 3,
    kLoaderProto = 4,
    kInnerproductProto = 5,
    OPDEF_NOT_SET = 0,
  };

  static inline const NodeDef* internal_default_instance() {
    return reinterpret_cast<const NodeDef*>(
               &_NodeDef_default_instance_);
  }

  void Swap(NodeDef* other);

  // implements Message ----------------------------------------------

  inline NodeDef* New() const PROTOBUF_FINAL { return New(NULL); }

  NodeDef* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NodeDef& from);
  void MergeFrom(const NodeDef& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NodeDef* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // .dataflow.ConvolutionOpProto convolution_proto = 3;
  bool has_convolution_proto() const;
  void clear_convolution_proto();
  static const int kConvolutionProtoFieldNumber = 3;
  const ::dataflow::ConvolutionOpProto& convolution_proto() const;
  ::dataflow::ConvolutionOpProto* mutable_convolution_proto();
  ::dataflow::ConvolutionOpProto* release_convolution_proto();
  void set_allocated_convolution_proto(::dataflow::ConvolutionOpProto* convolution_proto);

  // .dataflow.LoaderOpProto loader_proto = 4;
  bool has_loader_proto() const;
  void clear_loader_proto();
  static const int kLoaderProtoFieldNumber = 4;
  const ::dataflow::LoaderOpProto& loader_proto() const;
  ::dataflow::LoaderOpProto* mutable_loader_proto();
  ::dataflow::LoaderOpProto* release_loader_proto();
  void set_allocated_loader_proto(::dataflow::LoaderOpProto* loader_proto);

  // .dataflow.InnerProductOpProto innerproduct_proto = 5;
  bool has_innerproduct_proto() const;
  void clear_innerproduct_proto();
  static const int kInnerproductProtoFieldNumber = 5;
  const ::dataflow::InnerProductOpProto& innerproduct_proto() const;
  ::dataflow::InnerProductOpProto* mutable_innerproduct_proto();
  ::dataflow::InnerProductOpProto* release_innerproduct_proto();
  void set_allocated_innerproduct_proto(::dataflow::InnerProductOpProto* innerproduct_proto);

  OpDefCase opDef_case() const;
  // @@protoc_insertion_point(class_scope:dataflow.NodeDef)
 private:
  void set_has_convolution_proto();
  void set_has_loader_proto();
  void set_has_innerproduct_proto();

  inline bool has_opDef() const;
  void clear_opDef();
  inline void clear_has_opDef();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  union OpDefUnion {
    OpDefUnion() {}
    ::dataflow::ConvolutionOpProto* convolution_proto_;
    ::dataflow::LoaderOpProto* loader_proto_;
    ::dataflow::InnerProductOpProto* innerproduct_proto_;
  } opDef_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_dataflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConvolutionOpProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dataflow.ConvolutionOpProto) */ {
 public:
  ConvolutionOpProto();
  virtual ~ConvolutionOpProto();

  ConvolutionOpProto(const ConvolutionOpProto& from);

  inline ConvolutionOpProto& operator=(const ConvolutionOpProto& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConvolutionOpProto& default_instance();

  static inline const ConvolutionOpProto* internal_default_instance() {
    return reinterpret_cast<const ConvolutionOpProto*>(
               &_ConvolutionOpProto_default_instance_);
  }

  void Swap(ConvolutionOpProto* other);

  // implements Message ----------------------------------------------

  inline ConvolutionOpProto* New() const PROTOBUF_FINAL { return New(NULL); }

  ConvolutionOpProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConvolutionOpProto& from);
  void MergeFrom(const ConvolutionOpProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConvolutionOpProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string in = 5;
  void clear_in();
  static const int kInFieldNumber = 5;
  const ::std::string& in() const;
  void set_in(const ::std::string& value);
  #if LANG_CXX11
  void set_in(::std::string&& value);
  #endif
  void set_in(const char* value);
  void set_in(const char* value, size_t size);
  ::std::string* mutable_in();
  ::std::string* release_in();
  void set_allocated_in(::std::string* in);

  // string out = 6;
  void clear_out();
  static const int kOutFieldNumber = 6;
  const ::std::string& out() const;
  void set_out(const ::std::string& value);
  #if LANG_CXX11
  void set_out(::std::string&& value);
  #endif
  void set_out(const char* value);
  void set_out(const char* value, size_t size);
  ::std::string* mutable_out();
  ::std::string* release_out();
  void set_allocated_out(::std::string* out);

  // uint32 num_output = 1;
  void clear_num_output();
  static const int kNumOutputFieldNumber = 1;
  ::google::protobuf::uint32 num_output() const;
  void set_num_output(::google::protobuf::uint32 value);

  // uint32 pad = 2;
  void clear_pad();
  static const int kPadFieldNumber = 2;
  ::google::protobuf::uint32 pad() const;
  void set_pad(::google::protobuf::uint32 value);

  // uint32 kernel_size = 3;
  void clear_kernel_size();
  static const int kKernelSizeFieldNumber = 3;
  ::google::protobuf::uint32 kernel_size() const;
  void set_kernel_size(::google::protobuf::uint32 value);

  // uint32 stride = 4;
  void clear_stride();
  static const int kStrideFieldNumber = 4;
  ::google::protobuf::uint32 stride() const;
  void set_stride(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dataflow.ConvolutionOpProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr in_;
  ::google::protobuf::internal::ArenaStringPtr out_;
  ::google::protobuf::uint32 num_output_;
  ::google::protobuf::uint32 pad_;
  ::google::protobuf::uint32 kernel_size_;
  ::google::protobuf::uint32 stride_;
  mutable int _cached_size_;
  friend struct  protobuf_dataflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoaderOpProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dataflow.LoaderOpProto) */ {
 public:
  LoaderOpProto();
  virtual ~LoaderOpProto();

  LoaderOpProto(const LoaderOpProto& from);

  inline LoaderOpProto& operator=(const LoaderOpProto& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoaderOpProto& default_instance();

  static inline const LoaderOpProto* internal_default_instance() {
    return reinterpret_cast<const LoaderOpProto*>(
               &_LoaderOpProto_default_instance_);
  }

  void Swap(LoaderOpProto* other);

  // implements Message ----------------------------------------------

  inline LoaderOpProto* New() const PROTOBUF_FINAL { return New(NULL); }

  LoaderOpProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoaderOpProto& from);
  void MergeFrom(const LoaderOpProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoaderOpProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // string label = 2;
  void clear_label();
  static const int kLabelFieldNumber = 2;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  #if LANG_CXX11
  void set_label(::std::string&& value);
  #endif
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // uint32 channel = 3;
  void clear_channel();
  static const int kChannelFieldNumber = 3;
  ::google::protobuf::uint32 channel() const;
  void set_channel(::google::protobuf::uint32 value);

  // uint32 height = 4;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // uint32 width = 5;
  void clear_width();
  static const int kWidthFieldNumber = 5;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dataflow.LoaderOpProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  ::google::protobuf::uint32 channel_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::uint32 width_;
  mutable int _cached_size_;
  friend struct  protobuf_dataflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InnerProductOpProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dataflow.InnerProductOpProto) */ {
 public:
  InnerProductOpProto();
  virtual ~InnerProductOpProto();

  InnerProductOpProto(const InnerProductOpProto& from);

  inline InnerProductOpProto& operator=(const InnerProductOpProto& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InnerProductOpProto& default_instance();

  static inline const InnerProductOpProto* internal_default_instance() {
    return reinterpret_cast<const InnerProductOpProto*>(
               &_InnerProductOpProto_default_instance_);
  }

  void Swap(InnerProductOpProto* other);

  // implements Message ----------------------------------------------

  inline InnerProductOpProto* New() const PROTOBUF_FINAL { return New(NULL); }

  InnerProductOpProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InnerProductOpProto& from);
  void MergeFrom(const InnerProductOpProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InnerProductOpProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string in = 2;
  void clear_in();
  static const int kInFieldNumber = 2;
  const ::std::string& in() const;
  void set_in(const ::std::string& value);
  #if LANG_CXX11
  void set_in(::std::string&& value);
  #endif
  void set_in(const char* value);
  void set_in(const char* value, size_t size);
  ::std::string* mutable_in();
  ::std::string* release_in();
  void set_allocated_in(::std::string* in);

  // string out = 3;
  void clear_out();
  static const int kOutFieldNumber = 3;
  const ::std::string& out() const;
  void set_out(const ::std::string& value);
  #if LANG_CXX11
  void set_out(::std::string&& value);
  #endif
  void set_out(const char* value);
  void set_out(const char* value, size_t size);
  ::std::string* mutable_out();
  ::std::string* release_out();
  void set_allocated_out(::std::string* out);

  // uint32 num_output = 1;
  void clear_num_output();
  static const int kNumOutputFieldNumber = 1;
  ::google::protobuf::uint32 num_output() const;
  void set_num_output(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dataflow.InnerProductOpProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr in_;
  ::google::protobuf::internal::ArenaStringPtr out_;
  ::google::protobuf::uint32 num_output_;
  mutable int _cached_size_;
  friend struct  protobuf_dataflow_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// NodeDef

// string name = 1;
inline void NodeDef::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NodeDef::name() const {
  // @@protoc_insertion_point(field_get:dataflow.NodeDef.name)
  return name_.GetNoArena();
}
inline void NodeDef::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dataflow.NodeDef.name)
}
#if LANG_CXX11
inline void NodeDef::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dataflow.NodeDef.name)
}
#endif
inline void NodeDef::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dataflow.NodeDef.name)
}
inline void NodeDef::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dataflow.NodeDef.name)
}
inline ::std::string* NodeDef::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dataflow.NodeDef.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NodeDef::release_name() {
  // @@protoc_insertion_point(field_release:dataflow.NodeDef.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeDef::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dataflow.NodeDef.name)
}

// string type = 2;
inline void NodeDef::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NodeDef::type() const {
  // @@protoc_insertion_point(field_get:dataflow.NodeDef.type)
  return type_.GetNoArena();
}
inline void NodeDef::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dataflow.NodeDef.type)
}
#if LANG_CXX11
inline void NodeDef::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dataflow.NodeDef.type)
}
#endif
inline void NodeDef::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dataflow.NodeDef.type)
}
inline void NodeDef::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dataflow.NodeDef.type)
}
inline ::std::string* NodeDef::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:dataflow.NodeDef.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NodeDef::release_type() {
  // @@protoc_insertion_point(field_release:dataflow.NodeDef.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeDef::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:dataflow.NodeDef.type)
}

// .dataflow.ConvolutionOpProto convolution_proto = 3;
inline bool NodeDef::has_convolution_proto() const {
  return opDef_case() == kConvolutionProto;
}
inline void NodeDef::set_has_convolution_proto() {
  _oneof_case_[0] = kConvolutionProto;
}
inline void NodeDef::clear_convolution_proto() {
  if (has_convolution_proto()) {
    delete opDef_.convolution_proto_;
    clear_has_opDef();
  }
}
inline  const ::dataflow::ConvolutionOpProto& NodeDef::convolution_proto() const {
  // @@protoc_insertion_point(field_get:dataflow.NodeDef.convolution_proto)
  return has_convolution_proto()
      ? *opDef_.convolution_proto_
      : ::dataflow::ConvolutionOpProto::default_instance();
}
inline ::dataflow::ConvolutionOpProto* NodeDef::mutable_convolution_proto() {
  if (!has_convolution_proto()) {
    clear_opDef();
    set_has_convolution_proto();
    opDef_.convolution_proto_ = new ::dataflow::ConvolutionOpProto;
  }
  // @@protoc_insertion_point(field_mutable:dataflow.NodeDef.convolution_proto)
  return opDef_.convolution_proto_;
}
inline ::dataflow::ConvolutionOpProto* NodeDef::release_convolution_proto() {
  // @@protoc_insertion_point(field_release:dataflow.NodeDef.convolution_proto)
  if (has_convolution_proto()) {
    clear_has_opDef();
    ::dataflow::ConvolutionOpProto* temp = opDef_.convolution_proto_;
    opDef_.convolution_proto_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void NodeDef::set_allocated_convolution_proto(::dataflow::ConvolutionOpProto* convolution_proto) {
  clear_opDef();
  if (convolution_proto) {
    set_has_convolution_proto();
    opDef_.convolution_proto_ = convolution_proto;
  }
  // @@protoc_insertion_point(field_set_allocated:dataflow.NodeDef.convolution_proto)
}

// .dataflow.LoaderOpProto loader_proto = 4;
inline bool NodeDef::has_loader_proto() const {
  return opDef_case() == kLoaderProto;
}
inline void NodeDef::set_has_loader_proto() {
  _oneof_case_[0] = kLoaderProto;
}
inline void NodeDef::clear_loader_proto() {
  if (has_loader_proto()) {
    delete opDef_.loader_proto_;
    clear_has_opDef();
  }
}
inline  const ::dataflow::LoaderOpProto& NodeDef::loader_proto() const {
  // @@protoc_insertion_point(field_get:dataflow.NodeDef.loader_proto)
  return has_loader_proto()
      ? *opDef_.loader_proto_
      : ::dataflow::LoaderOpProto::default_instance();
}
inline ::dataflow::LoaderOpProto* NodeDef::mutable_loader_proto() {
  if (!has_loader_proto()) {
    clear_opDef();
    set_has_loader_proto();
    opDef_.loader_proto_ = new ::dataflow::LoaderOpProto;
  }
  // @@protoc_insertion_point(field_mutable:dataflow.NodeDef.loader_proto)
  return opDef_.loader_proto_;
}
inline ::dataflow::LoaderOpProto* NodeDef::release_loader_proto() {
  // @@protoc_insertion_point(field_release:dataflow.NodeDef.loader_proto)
  if (has_loader_proto()) {
    clear_has_opDef();
    ::dataflow::LoaderOpProto* temp = opDef_.loader_proto_;
    opDef_.loader_proto_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void NodeDef::set_allocated_loader_proto(::dataflow::LoaderOpProto* loader_proto) {
  clear_opDef();
  if (loader_proto) {
    set_has_loader_proto();
    opDef_.loader_proto_ = loader_proto;
  }
  // @@protoc_insertion_point(field_set_allocated:dataflow.NodeDef.loader_proto)
}

// .dataflow.InnerProductOpProto innerproduct_proto = 5;
inline bool NodeDef::has_innerproduct_proto() const {
  return opDef_case() == kInnerproductProto;
}
inline void NodeDef::set_has_innerproduct_proto() {
  _oneof_case_[0] = kInnerproductProto;
}
inline void NodeDef::clear_innerproduct_proto() {
  if (has_innerproduct_proto()) {
    delete opDef_.innerproduct_proto_;
    clear_has_opDef();
  }
}
inline  const ::dataflow::InnerProductOpProto& NodeDef::innerproduct_proto() const {
  // @@protoc_insertion_point(field_get:dataflow.NodeDef.innerproduct_proto)
  return has_innerproduct_proto()
      ? *opDef_.innerproduct_proto_
      : ::dataflow::InnerProductOpProto::default_instance();
}
inline ::dataflow::InnerProductOpProto* NodeDef::mutable_innerproduct_proto() {
  if (!has_innerproduct_proto()) {
    clear_opDef();
    set_has_innerproduct_proto();
    opDef_.innerproduct_proto_ = new ::dataflow::InnerProductOpProto;
  }
  // @@protoc_insertion_point(field_mutable:dataflow.NodeDef.innerproduct_proto)
  return opDef_.innerproduct_proto_;
}
inline ::dataflow::InnerProductOpProto* NodeDef::release_innerproduct_proto() {
  // @@protoc_insertion_point(field_release:dataflow.NodeDef.innerproduct_proto)
  if (has_innerproduct_proto()) {
    clear_has_opDef();
    ::dataflow::InnerProductOpProto* temp = opDef_.innerproduct_proto_;
    opDef_.innerproduct_proto_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void NodeDef::set_allocated_innerproduct_proto(::dataflow::InnerProductOpProto* innerproduct_proto) {
  clear_opDef();
  if (innerproduct_proto) {
    set_has_innerproduct_proto();
    opDef_.innerproduct_proto_ = innerproduct_proto;
  }
  // @@protoc_insertion_point(field_set_allocated:dataflow.NodeDef.innerproduct_proto)
}

inline bool NodeDef::has_opDef() const {
  return opDef_case() != OPDEF_NOT_SET;
}
inline void NodeDef::clear_has_opDef() {
  _oneof_case_[0] = OPDEF_NOT_SET;
}
inline NodeDef::OpDefCase NodeDef::opDef_case() const {
  return NodeDef::OpDefCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ConvolutionOpProto

// uint32 num_output = 1;
inline void ConvolutionOpProto::clear_num_output() {
  num_output_ = 0u;
}
inline ::google::protobuf::uint32 ConvolutionOpProto::num_output() const {
  // @@protoc_insertion_point(field_get:dataflow.ConvolutionOpProto.num_output)
  return num_output_;
}
inline void ConvolutionOpProto::set_num_output(::google::protobuf::uint32 value) {
  
  num_output_ = value;
  // @@protoc_insertion_point(field_set:dataflow.ConvolutionOpProto.num_output)
}

// uint32 pad = 2;
inline void ConvolutionOpProto::clear_pad() {
  pad_ = 0u;
}
inline ::google::protobuf::uint32 ConvolutionOpProto::pad() const {
  // @@protoc_insertion_point(field_get:dataflow.ConvolutionOpProto.pad)
  return pad_;
}
inline void ConvolutionOpProto::set_pad(::google::protobuf::uint32 value) {
  
  pad_ = value;
  // @@protoc_insertion_point(field_set:dataflow.ConvolutionOpProto.pad)
}

// uint32 kernel_size = 3;
inline void ConvolutionOpProto::clear_kernel_size() {
  kernel_size_ = 0u;
}
inline ::google::protobuf::uint32 ConvolutionOpProto::kernel_size() const {
  // @@protoc_insertion_point(field_get:dataflow.ConvolutionOpProto.kernel_size)
  return kernel_size_;
}
inline void ConvolutionOpProto::set_kernel_size(::google::protobuf::uint32 value) {
  
  kernel_size_ = value;
  // @@protoc_insertion_point(field_set:dataflow.ConvolutionOpProto.kernel_size)
}

// uint32 stride = 4;
inline void ConvolutionOpProto::clear_stride() {
  stride_ = 0u;
}
inline ::google::protobuf::uint32 ConvolutionOpProto::stride() const {
  // @@protoc_insertion_point(field_get:dataflow.ConvolutionOpProto.stride)
  return stride_;
}
inline void ConvolutionOpProto::set_stride(::google::protobuf::uint32 value) {
  
  stride_ = value;
  // @@protoc_insertion_point(field_set:dataflow.ConvolutionOpProto.stride)
}

// string in = 5;
inline void ConvolutionOpProto::clear_in() {
  in_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConvolutionOpProto::in() const {
  // @@protoc_insertion_point(field_get:dataflow.ConvolutionOpProto.in)
  return in_.GetNoArena();
}
inline void ConvolutionOpProto::set_in(const ::std::string& value) {
  
  in_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dataflow.ConvolutionOpProto.in)
}
#if LANG_CXX11
inline void ConvolutionOpProto::set_in(::std::string&& value) {
  
  in_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dataflow.ConvolutionOpProto.in)
}
#endif
inline void ConvolutionOpProto::set_in(const char* value) {
  
  in_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dataflow.ConvolutionOpProto.in)
}
inline void ConvolutionOpProto::set_in(const char* value, size_t size) {
  
  in_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dataflow.ConvolutionOpProto.in)
}
inline ::std::string* ConvolutionOpProto::mutable_in() {
  
  // @@protoc_insertion_point(field_mutable:dataflow.ConvolutionOpProto.in)
  return in_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConvolutionOpProto::release_in() {
  // @@protoc_insertion_point(field_release:dataflow.ConvolutionOpProto.in)
  
  return in_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConvolutionOpProto::set_allocated_in(::std::string* in) {
  if (in != NULL) {
    
  } else {
    
  }
  in_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), in);
  // @@protoc_insertion_point(field_set_allocated:dataflow.ConvolutionOpProto.in)
}

// string out = 6;
inline void ConvolutionOpProto::clear_out() {
  out_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConvolutionOpProto::out() const {
  // @@protoc_insertion_point(field_get:dataflow.ConvolutionOpProto.out)
  return out_.GetNoArena();
}
inline void ConvolutionOpProto::set_out(const ::std::string& value) {
  
  out_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dataflow.ConvolutionOpProto.out)
}
#if LANG_CXX11
inline void ConvolutionOpProto::set_out(::std::string&& value) {
  
  out_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dataflow.ConvolutionOpProto.out)
}
#endif
inline void ConvolutionOpProto::set_out(const char* value) {
  
  out_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dataflow.ConvolutionOpProto.out)
}
inline void ConvolutionOpProto::set_out(const char* value, size_t size) {
  
  out_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dataflow.ConvolutionOpProto.out)
}
inline ::std::string* ConvolutionOpProto::mutable_out() {
  
  // @@protoc_insertion_point(field_mutable:dataflow.ConvolutionOpProto.out)
  return out_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConvolutionOpProto::release_out() {
  // @@protoc_insertion_point(field_release:dataflow.ConvolutionOpProto.out)
  
  return out_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConvolutionOpProto::set_allocated_out(::std::string* out) {
  if (out != NULL) {
    
  } else {
    
  }
  out_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), out);
  // @@protoc_insertion_point(field_set_allocated:dataflow.ConvolutionOpProto.out)
}

// -------------------------------------------------------------------

// LoaderOpProto

// string data = 1;
inline void LoaderOpProto::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoaderOpProto::data() const {
  // @@protoc_insertion_point(field_get:dataflow.LoaderOpProto.data)
  return data_.GetNoArena();
}
inline void LoaderOpProto::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dataflow.LoaderOpProto.data)
}
#if LANG_CXX11
inline void LoaderOpProto::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dataflow.LoaderOpProto.data)
}
#endif
inline void LoaderOpProto::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dataflow.LoaderOpProto.data)
}
inline void LoaderOpProto::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dataflow.LoaderOpProto.data)
}
inline ::std::string* LoaderOpProto::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dataflow.LoaderOpProto.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoaderOpProto::release_data() {
  // @@protoc_insertion_point(field_release:dataflow.LoaderOpProto.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoaderOpProto::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dataflow.LoaderOpProto.data)
}

// string label = 2;
inline void LoaderOpProto::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoaderOpProto::label() const {
  // @@protoc_insertion_point(field_get:dataflow.LoaderOpProto.label)
  return label_.GetNoArena();
}
inline void LoaderOpProto::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dataflow.LoaderOpProto.label)
}
#if LANG_CXX11
inline void LoaderOpProto::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dataflow.LoaderOpProto.label)
}
#endif
inline void LoaderOpProto::set_label(const char* value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dataflow.LoaderOpProto.label)
}
inline void LoaderOpProto::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dataflow.LoaderOpProto.label)
}
inline ::std::string* LoaderOpProto::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:dataflow.LoaderOpProto.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoaderOpProto::release_label() {
  // @@protoc_insertion_point(field_release:dataflow.LoaderOpProto.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoaderOpProto::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:dataflow.LoaderOpProto.label)
}

// uint32 channel = 3;
inline void LoaderOpProto::clear_channel() {
  channel_ = 0u;
}
inline ::google::protobuf::uint32 LoaderOpProto::channel() const {
  // @@protoc_insertion_point(field_get:dataflow.LoaderOpProto.channel)
  return channel_;
}
inline void LoaderOpProto::set_channel(::google::protobuf::uint32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:dataflow.LoaderOpProto.channel)
}

// uint32 height = 4;
inline void LoaderOpProto::clear_height() {
  height_ = 0u;
}
inline ::google::protobuf::uint32 LoaderOpProto::height() const {
  // @@protoc_insertion_point(field_get:dataflow.LoaderOpProto.height)
  return height_;
}
inline void LoaderOpProto::set_height(::google::protobuf::uint32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:dataflow.LoaderOpProto.height)
}

// uint32 width = 5;
inline void LoaderOpProto::clear_width() {
  width_ = 0u;
}
inline ::google::protobuf::uint32 LoaderOpProto::width() const {
  // @@protoc_insertion_point(field_get:dataflow.LoaderOpProto.width)
  return width_;
}
inline void LoaderOpProto::set_width(::google::protobuf::uint32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:dataflow.LoaderOpProto.width)
}

// -------------------------------------------------------------------

// InnerProductOpProto

// uint32 num_output = 1;
inline void InnerProductOpProto::clear_num_output() {
  num_output_ = 0u;
}
inline ::google::protobuf::uint32 InnerProductOpProto::num_output() const {
  // @@protoc_insertion_point(field_get:dataflow.InnerProductOpProto.num_output)
  return num_output_;
}
inline void InnerProductOpProto::set_num_output(::google::protobuf::uint32 value) {
  
  num_output_ = value;
  // @@protoc_insertion_point(field_set:dataflow.InnerProductOpProto.num_output)
}

// string in = 2;
inline void InnerProductOpProto::clear_in() {
  in_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InnerProductOpProto::in() const {
  // @@protoc_insertion_point(field_get:dataflow.InnerProductOpProto.in)
  return in_.GetNoArena();
}
inline void InnerProductOpProto::set_in(const ::std::string& value) {
  
  in_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dataflow.InnerProductOpProto.in)
}
#if LANG_CXX11
inline void InnerProductOpProto::set_in(::std::string&& value) {
  
  in_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dataflow.InnerProductOpProto.in)
}
#endif
inline void InnerProductOpProto::set_in(const char* value) {
  
  in_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dataflow.InnerProductOpProto.in)
}
inline void InnerProductOpProto::set_in(const char* value, size_t size) {
  
  in_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dataflow.InnerProductOpProto.in)
}
inline ::std::string* InnerProductOpProto::mutable_in() {
  
  // @@protoc_insertion_point(field_mutable:dataflow.InnerProductOpProto.in)
  return in_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InnerProductOpProto::release_in() {
  // @@protoc_insertion_point(field_release:dataflow.InnerProductOpProto.in)
  
  return in_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InnerProductOpProto::set_allocated_in(::std::string* in) {
  if (in != NULL) {
    
  } else {
    
  }
  in_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), in);
  // @@protoc_insertion_point(field_set_allocated:dataflow.InnerProductOpProto.in)
}

// string out = 3;
inline void InnerProductOpProto::clear_out() {
  out_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InnerProductOpProto::out() const {
  // @@protoc_insertion_point(field_get:dataflow.InnerProductOpProto.out)
  return out_.GetNoArena();
}
inline void InnerProductOpProto::set_out(const ::std::string& value) {
  
  out_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dataflow.InnerProductOpProto.out)
}
#if LANG_CXX11
inline void InnerProductOpProto::set_out(::std::string&& value) {
  
  out_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dataflow.InnerProductOpProto.out)
}
#endif
inline void InnerProductOpProto::set_out(const char* value) {
  
  out_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dataflow.InnerProductOpProto.out)
}
inline void InnerProductOpProto::set_out(const char* value, size_t size) {
  
  out_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dataflow.InnerProductOpProto.out)
}
inline ::std::string* InnerProductOpProto::mutable_out() {
  
  // @@protoc_insertion_point(field_mutable:dataflow.InnerProductOpProto.out)
  return out_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InnerProductOpProto::release_out() {
  // @@protoc_insertion_point(field_release:dataflow.InnerProductOpProto.out)
  
  return out_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InnerProductOpProto::set_allocated_out(::std::string* out) {
  if (out != NULL) {
    
  } else {
    
  }
  out_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), out);
  // @@protoc_insertion_point(field_set_allocated:dataflow.InnerProductOpProto.out)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace dataflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dataflow_2eproto__INCLUDED
